<?xml version="1.0" encoding="utf-8"?>
<artifacts_collection>
  <collection_info>
    <id>CC</id>
    <name>eTOUR Target Artifacts</name>
    <version>1.1</version>
    <description>Class code</description>
  </collection_info>
  <artifacts>
    <artifact>
      <id>CC_Autenticazione</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneUtentiRegistrati;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.SQLException;

import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.repository.DBTurista;
import unisa.gps.etour.util.ControlloDati;
import unisa.gps.etour.util.MessaggiErrore;

public class Authentication extends UnicastRemoteObject implements IAutenticazione
(

private static final long serialVersionUID = 0L;

public Authentication () throws RemoteException
(
super ();
)

/ / Objects to manipulate data Turista
Private DBTurista tourist DBTurista = new ();
Private BeanTurista bTurista;

public int login (String pUsername, String pPassword, byte pTipologiaUtente)
throws RemoteException
(
/ / Check if the string username and password
if (ControlloDati.controllaStringa (pUsername, true, true, &quot;_-&quot;, null,
6, 12)
&amp; &amp; ControlloDati.controllaStringa (pPassword, true, true, &quot;_-&quot;,
null, 5, 12))
TRY
(
switch (pTipologiaUtente)
(
/ / If the type is Turista
VISITORS homes:
/ / Invoke the method to obtain the Bean del Turista
/ / Given the username
bTurista = turista.ottieniTurista (pUsername);
/ / Check that the Bean is not null and
/ / Passwords match
if (bTurista = null
BTurista.getPassword &amp; &amp; (). Equals (pPassword))
bTurista.getId return ();
/ / If the type and eateries
homes OP_PUNTO_DI_RISTORO:
/ / Not implemented was the operational point of
/ / Refreshment
return -1;
/ / If not match any known type
default:
return -1;
)
)
catch (SQLException e)
(
throw new RemoteException (
MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e) (
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / If the data are incorrect returns -1
return -1;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_Banner</id>
      <content>package unisa.gps.etour.gui.operatoreagenzia;

import java.awt .*;
import java.awt.event .*;
import java.io.FileNotFoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import javax.swing .*;
import java.util .*;
import javax.swing.tree .*;
import javax.swing.border .*;
import unisa.gps.etour.gui.operatoreagenzia.BannerDialog;
import unisa.gps.etour.gui.operatoreagenzia.Home;
import unisa.gps.etour.gui.operatoreagenzia.TagPanel;
import unisa.gps.etour.gui.operatoreagenzia.tables.BannerNode;
import unisa.gps.etour.gui.operatoreagenzia.tables.PRNode;
import unisa.gps.etour.bean.BeanBanner;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.control.GestioneAdvertisement.IGestioneAdvertisementAgenzia;
import unisa.gps.etour.control.GestionePuntiDiRistoro.IGestionePuntiDiRistoroAgenzia;
import unisa.gps.etour.control.GestioneTag.IGestioneTagComune;
import unisa.gps.etour.gui.DeskManager;
import unisa.gps.etour.gui.HelpManager;
import unisa.gps.etour.gui.operatoreagenzia.tables.BannerRenderer;

public class JInternalFrame extends Banner
(

private JPanel jContentPane = null;
private JPanel rightPanel = null;
Private JToolBar bannerToolbar = null;
private JButton btnInserisci = null;
private JButton btnSostituisci = null;
private JButton btnElimina = null;
private JScrollPane JScrollPane = null;
private JPanel helpPanel = null;
private JTextPane textGuida = null;
Private TagPanel panelTag = null;
private JButton btnRicerca = null;
private JButton btnAzzera = null;
private JPanel panelSearch = null;
private JTextField nomePR = null;
private JTree treeBanner = null;
Private JDesktopPane JDesktopPane;
Private HelpManager bannerHelp;
protected DeskManager desktopManager;
protected IGestionePuntiDiRistoroAgenzia gestionePuntiRistoro;
protected IGestioneAdvertisementAgenzia gestioneBanner;
protected IGestioneTagComune tags;

/ **
* This &amp;grave; the default constructor.
* /
public Banner ()
(
super ( &quot;Banner&quot;);
resizable = true;
closable = true;
iconable = true;
maximizable = true;
setPreferredSize (Home.CHILD_SIZE);
frameIcon = new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;banner2.png&quot;));

/ / Setting up dell'help manager for cultural.

textGuida = new JTextPane ();

TRY
(
bannerHelp = new HelpManager (Home.URL_HELP + &quot;Banner.txt&quot;
textGuida);
)
catch (FileNotFoundException e)
(
textGuida
. setText ( &quot;&lt;html&gt; &lt;b&gt; Help not available &lt;/ b&gt; &lt;/ html&gt;&quot;);
)

setContentPane (getJContentPane ());
addInternalFrameListener (new InternalFrameAdapter ()
(
/ *
* Inclusion of the frame on the desktop retrieves the bread
* Link to the desktop pane.
* /

public void internalFrameOpened (InternalFrameEvent pEvent)
(
PEvent.getInternalFrame JInternalFrame frame = ();
JDesktopPane frame.getDesktopPane = ();
desktopManager = (DeskManager) jDesktopPane.getDesktopManager ();

/ / Setting up of remote objects for the management of cultural heritage.
TRY
(
Registry reg = LocateRegistry.getRegistry (Home.HOST);
gestioneBanner =
(IGestioneAdvertisementAgenzia) reg.lookup (GestioneBeniCulturaliAgenzia &quot;);
tag =
(IGestioneTagComune) reg.lookup (GestioneTagComune &quot;);
gestionePuntiRistoro =
(IGestionePuntiDiRistoroAgenzia) reg.lookup (GestionePuntiDiRistoroAgenzia &quot;);

/ / Load data.
createTree ();
caricaTags ();
)
/ *
* Two exceptions: RemoteException and NotBoundException. The
* Result is the same. The management is not operable and
* After the error message window closes.
* /
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; The dialog management request is closed. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; &lt;b&gt; Possible Causes: &lt;/ b&gt;&quot;
+ &quot;&lt;ul&gt; &lt;li&gt; No connection to the network. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; inactive. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; clogged. &lt;/ Li&gt; &lt;/ ul&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (JDesktopPane, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
frame.dispose ();
)
)
));
)

/ **
* This method initializes the content pane.
*
* @ Return javax.swing.JPanel - the content pane.
* /
private JPanel getJContentPane ()
(
if (null == jContentPane)
(
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());
jContentPane.add (getRightPanel (), BorderLayout.EAST);
jContentPane.add (getBannerToolbar (), BorderLayout.NORTH);
jContentPane.add (getTreeBanner (), BorderLayout.CENTER);
)
jContentPane return;
)

/ **
* This method initializes the toolbar to the functions of management
* Banner.
*
* @ Return javax.swing.JToolBar - the toolbar.
* /
Private JToolBar getBannerToolbar ()
(
if (null == bannerToolbar)
(
bannerToolbar JToolBar = new ();
bannerToolbar.setLayout (null);
bannerToolbar.setPreferredSize (new Dimension (1, 50));
bannerToolbar.setFloatable (false);
bannerToolbar.add (getBtnInserisci ());
bannerToolbar.add (getBtnSostituisci ());
bannerToolbar.add (getBtnElimina ());
)
bannerToolbar return;
)

/ **
* This method initializes the button to insert a banner.
*
* @ Return javax.swing.JButton - the button for the insertion.
* /
private JButton getBtnInserisci ()
(
if (null == btnInserisci)
(
btnInserisci = new JButton ();
btnInserisci.setBounds (5, 5, 140, 40);
btnInserisci.setText ( &quot;&lt;html&gt; &lt;br&gt; Show Banner &lt;/ html&gt;&quot;);
btnInserisci.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;NuovoBanner32.png &quot;)));
btnInserisci.setEnabled (false);
btnInserisci.setName (btnInserisci &quot;);
btnInserisci.addMouseListener (bannerHelp);
btnInserisci.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) treeBanner
. getSelectionPath (). getLastPathComponent ();
OpenDialog (selectedNode);
)

));
)
btnInserisci return;
)

/ **
* This method initializes the button for editing a banner.
*
* @ Return javax.swing.JButton - the button for the change.
* /
private JButton getBtnSostituisci ()
(
if (null == btnSostituisci)
(
btnSostituisci = new JButton ();
btnSostituisci.setBounds (155, 5, 140, 40);
btnSostituisci.setText ( &quot;Replace &lt;html&gt; &lt;br&gt; Banner &lt;/ html&gt;&quot;);
btnSostituisci.setEnabled (false);
btnSostituisci.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;SostituisciBanner32.png &quot;)));
btnSostituisci.setName (btnSostituisci &quot;);
btnSostituisci.addMouseListener (bannerHelp);
btnSostituisci.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) treeBanner
. getSelectionPath (). getLastPathComponent ();
OpenDialog (selectedNode);
)

));
)
btnSostituisci return;
)

/ **
* This method initializes the delete button for a banner.
*
* @ Return javax.swing.JButton - the delete button for.
* /
private JButton getBtnElimina ()
(
if (null == btnElimina)
(
btnElimina = new JButton ();
btnElimina.setBounds (305, 5, 140, 40);
btnElimina.setText ( &quot;Delete &lt;html&gt; &lt;br&gt; Banner &lt;/ html&gt;&quot;);
btnElimina.setEnabled (false);
btnElimina.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;EliminaBanner32.png &quot;)));
btnElimina.setName (btnElimina &quot;);
btnElimina.addMouseListener (bannerHelp);
btnElimina.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Are you sure you want to delete the banner selected?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;The banner can not be more recovered.&quot;
SwingConstants.CENTER);
avviso.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Delete&quot;, &quot;Cancel&quot;);
int choice = JOptionPane.showInternalOptionDialog (
jContentPane, root, &quot;Confirm Delete&quot;,
JOptionPane.YES_NO_OPTION,
JOptionPane.QUESTION_MESSAGE, new ImageIcon (
getClass (). getResource (
Home.URL_IMAGES
+ &quot;EliminaBanner48.png&quot;)),
options, options [1]);
if (choice == JOptionPane.YES_OPTION)
(
DefaultTreeModel model = (DefaultTreeModel) treeBanner
. getModel ();
model
. removeNodeFromParent ((DefaultMutableTreeNode) treeBanner
. getSelectionPath ()
. getLastPathComponent ());
JLabel confirm = new JLabel ( &quot;The banner selected&quot;
+ &quot;Was deleted.&quot;);
confirm.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JOptionPane.showInternalMessageDialog (jContentPane,
confirm, &quot;Banner out!&quot;
JOptionPane.OK_OPTION, new ImageIcon (getClass ()
. getResource (
Home.URL_IMAGES + &quot;ok32.png &quot;)));
)

)

));
)
btnElimina return;
)

/ **
* This method creates the tree starting from the information contained in the two
* ArrayList of bean.
*
* @ Param ArrayList PPR &lt;BeanPuntoDiRistoro&gt; - the array of places to eat.
* @ Param pBanner ArrayList &lt;BeanBanner&gt; - the array of banners associated.
* /
private void createTree ()
(
/ / Create the root
DefaultMutableTreeNode root = new DefaultMutableTreeNode ( &quot;eTour&quot;);

/ / For each refreshment dell'arraylist calls the method get
/ / Banner.
TRY
(
ArrayList &lt;BeanPuntoDiRistoro&gt; PPR =
gestionePuntiRistoro.ottieniPuntiDiRistoro ();
for (int i = 0; i &lt;pPR.size (); i + +)
(
BeanPuntoDiRistoro current = pPR.get (i);
int id = corrente.getId ();
PRNode puntoDiRistoro = new PRNode (corrente.getNome (), id);
HashMap &lt;BeanBanner, ImageIcon&gt; banner = gestioneBanner.ottieniBannersDaID (id);
Iterator &lt;BeanBanner&gt; iteraBanner = banner.keySet (). Iterator ();
while (iteraBanner.hasNext ())
(
BeanBanner bannercorrente = iteraBanner.next ();
BannerNode nuovoBanner = new BannerNode (banner
. get (bannercorrente) bannercorrente.getId ());
puntoDiRistoro.add (nuovoBanner);
)

root.add (puntoDiRistoro);
)
)
catch (RemoteException ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &lt;h3&gt; &lt;u&gt; The list of banners was not loaded. &lt;/ U&gt; &lt;/ h3&gt; &quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showInternalMessageDialog (this, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
)
finally
(
treeBanner.setModel (new DefaultTreeModel (root));
)

)

/ **
* This method initializes the tree where it displays the banner.
*
* @ Return javax.swing.JTree
* /
private JScrollPane getTreeBanner ()
(

if (null == treeBanner)
(
treeBanner = new JTree (new DefaultTreeModel (new DefaultMutableTreeNode ( &quot;&quot;))); eTour
treeBanner.setScrollsOnExpand (true);
treeBanner.setAutoscrolls (true);
treeBanner.setScrollsOnExpand (true);
treeBanner.getSelectionModel (). setSelectionMode (
TreeSelectionModel.SINGLE_TREE_SELECTION);
treeBanner.setName (treeBanner &quot;);
treeBanner.addMouseListener (bannerHelp);
treeBanner.setRootVisible (false);
treeBanner.setCellRenderer (new BannerRenderer ());
treeBanner.addTreeSelectionListener (new TreeSelectionListener ()
(
public void ValueChanged (TreeSelectionEvent s)
(
DefaultMutableTreeNode node = (DefaultMutableTreeNode) treeBanner
. getLastSelectedPathComponent ();

if (node instanceof PRNode)
(
btnInserisci.setEnabled (true);
btnElimina.setEnabled (false);
btnSostituisci.setEnabled (false);
)
else if (node instanceof BannerNode)
(
btnInserisci.setEnabled (false);
btnSostituisci.setEnabled (true);
btnElimina.setEnabled (true);
)
else
(
btnInserisci.setEnabled (false);
btnSostituisci.setEnabled (false);
btnElimina.setEnabled (false);
)

)
));

)
JScrollPane = new JScrollPane (treeBanner);
JScrollPane
. setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
JScrollPane return;
)

/ **
* This method initializes the right side panel.
*
* @ Return javax.swing.JPanel - the right panel.
* /
private JPanel getRightPanel ()
(
if (null == rightPanel)
(
rightPanel = new JPanel ();
rightPanel.setLayout (new GridBagLayout ());
GridBagConstraints g = new GridBagConstraints ();
g.gridx = 0;
g.gridy = 0;
g.fill = GridBagConstraints.BOTH;
g.weighty = 0.7;
rightPanel.add (getSearchPanel (), g);
g.gridy + +;
g.weighty = 0.3;
rightPanel.add (getHelpPanel (), g);
)
rightPanel return;
)

/ **
* This method initializes the panel that contains the online help.
*
* @ Return javax.swing.JPanel - the panel for the guide.
* /
private JPanel getHelpPanel ()
(
if (null == helpPanel)
(
helpPanel = new JPanel ();
helpPanel.setLayout (new BorderLayout ());
helpPanel.setBorder (BorderFactory.createTitledBorder (BorderFactory
. createLineBorder (new Color (51, 102, 255), 3),
&quot;Help&quot;, TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
helpPanel.setPreferredSize (new Dimension (200, 60));
textGuida.setPreferredSize (new Dimension (6, 30));
textGuida.setOpaque (false);
textGuida.setContentType ( &quot;text / html&quot;);
textGuida.setText ( &quot;&lt;html&gt; Move your mouse pointer over a control&quot; +
&quot;of interest to display the context-sensitive help. &lt;/ html&gt;&quot;);
textGuida.setEditable (false);
textGuida.setName (textGuida &quot;);
textGuida.addMouseListener (bannerHelp);
helpPanel.add (textGuida, BorderLayout.CENTER);
)
helpPanel return;
)

/ **
* This method initializes the panel for the detection of points
* Refreshments.
*
* @ Return javax.swing.JPanel - the panel for research.
* /
private JPanel getSearchPanel ()
(
if (null == panelSearch)
(
panelSearch = new JPanel ();
panelSearch.setLayout (new GridBagLayout ());
panelSearch.setBorder (BorderFactory.createTitledBorder (
BorderFactory.createLineBorder (new Color (51, 102, 255), 3),
Research Refreshment &quot;
TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
GridBagConstraints g = new GridBagConstraints ();
g.anchor = GridBagConstraints.CENTER;
g.gridx = 0;
g.gridy = 0;
g.gridwidth = 2;
g.insets = new Insets (5, 5, 5, 5);
panelSearch.add (new JLabel ( &quot;Name Refreshments:&quot;), g);
nomePR = new JTextField ();
nomePR.setName (nomePR &quot;);
nomePR.addMouseListener (bannerHelp);
nomePR.setColumns (12);
g.insets = new Insets (5, 5, 10, 5);
g.gridy + +;
panelSearch.add (nomePR, g);
g.insets = new Insets (5, 5, 5, 5);
g.gridy + +;
panelSearch.add (new JLabel ( &quot;Select search tags:&quot;), g);
g.weighty = 1.0;
g.insets = new Insets (5, 5, 10, 5);
g.gridy + +;
panelTag = new TagPanel ();
panelTag.setName (pannelloTag &quot;);
panelTag.addMouseListener (bannerHelp);
panelTag.setPreferredSize (new Dimension (180, 10));
g.fill = GridBagConstraints.VERTICAL;
panelSearch.add (panelTag, g);
g.fill = GridBagConstraints.NONE;
g.insets = new Insets (5, 5, 5, 5);
g.weighty = 0;
g.gridy + +;
g.gridwidth = 1;
panelSearch.add (getBtnRicerca (), g);
g.gridx + +;
panelSearch.add (getBtnAzzera (), g);
)
panelSearch return;
)

/ **
* This method initializes the button for the submission of the form
* Search for a refreshment.
*
* @ Return javax.swing.JButton - the search button.
* /
private JButton getBtnRicerca ()
(
if (null == btnRicerca)
(
btnRicerca = new JButton ();
btnRicerca.setPreferredSize (new Dimension (98, 26));
btnRicerca.setText ( &quot;Search&quot;);
btnRicerca.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;Ricerca16.png &quot;)));
btnRicerca.setName (btnRicerca &quot;);
btnRicerca.addMouseListener (bannerHelp);
)
btnRicerca return;
)

/ **
* This method initializes the button to reset the fields of
* Search Form for a refreshment.
*
* @ Return javax.swing.JButton - the Reset button.
* /
private JButton getBtnAzzera ()
(
if (null == btnAzzera)
(
btnAzzera = new JButton ();
btnAzzera.setPreferredSize (new Dimension (98, 26));
btnAzzera.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;Azzera16.png &quot;)));
btnAzzera.setText ( &quot;Clear&quot;);
btnAzzera.setHorizontalTextPosition (SwingConstants.LEADING);
btnAzzera.setName (btnAzzera &quot;);
btnAzzera.addMouseListener (bannerHelp);
btnAzzera.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
panelTag.azzera ();
nomePR.setText (&quot;&quot;);
)

));
)
btnAzzera return;
)

/ **
* This method opens the dialog box for entering a new
* Banner or editing a banner selected.
*
* @ Param pSelectedNode DefaultMutableTreeNode - the selected node.
* /
private void OpenDialog (DefaultMutableTreeNode pSelectedNode)
(
/ / This class intercepts mouse events and then
/ / Makes the frame below blocked.
class ModalAdapter extends InternalFrameAdapter
(
Component glass;

public ModalAdapter (Component pGlassComponent)
(
this.glass = pGlassComponent;

MouseInputAdapter adapter = new MouseInputAdapter ()
(
);
pGlassComponent.addMouseListener (adapter);
pGlassComponent.addMouseMotionListener (adapter);
)

public void internalFrameClosed (InternalFrameEvent s)
(
glass.setVisible (false);
)
)

/ / Construction of the dialog
JOptionPane optionPane = new JOptionPane ();
final JInternalFrame modal = optionPane.createInternalFrame (
JDesktopPane, &quot;&quot;);
final JPanel glass = new JPanel ();
BannerDialog final BannerDialog dialog = new ();
optionPane.setMessage (dialogue);
optionPane.setMessageType (JOptionPane.INFORMATION_MESSAGE);
JButton [] options = new JButton [2];
options [0] = new JButton ();
options [1] = new JButton ( &quot;Cancel&quot;);
options [0]. setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;Salva16.png &quot;)));
options [1]. setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;Annulla16.png &quot;)));
optionPane.setOptions (options);
options [1]. addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent arg0)
(
modal.setVisible (false);
glass.setVisible (false);
)
));

glass.setOpaque (false);
modal.addInternalFrameListener (new ModalAdapter (glass));
glass.add (modal);
setGlassPane (glass);
modal.setLocation (this.getWidth () / 2, this.getHeight () / 2);
glass.setVisible (true);
modal.setVisible (true);
if (pSelectedNode instanceof BannerNode) / / Replace
(
final BannerNode banner = (BannerNode) pSelectedNode;
options [0]. setText ( &quot;Replace&quot;);
options [0]. addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
DefaultTreeModel model = (DefaultTreeModel) treeBanner
. getModel ();
banner.setBanner (dialogo.getSelectedBanner ());
model.nodeChanged (banner);
glass.setVisible (false);
modal.setVisible (false);
)

));

optionPane.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;SostituisciBanner48.png &quot;)));
modal.setTitle ( &quot;Replace the banner to the point of relief&quot;
+ ((PRNode) pSelectedNode.getParent ()). GetUserObject ()
. toString ());
)
else if (pSelectedNode instanceof PRNode) / / Inserting
(
PRNode final pr = (PRNode) pSelectedNode;
options [0]. setText ( &quot;Save&quot;);
options [0]. addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
DefaultTreeModel model = (DefaultTreeModel) treeBanner
. getModel ();
BannerNode new = new BannerNode (dialogue
. getSelectedBanner (), pr.getID ());
model.insertNodeInto (new, pr, 0);
glass.setVisible (false);
modal.setVisible (false);
)

));
optionPane.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;nuovoBanner48.png &quot;)));
modal.setTitle ( &quot;Enter banner to the point of relief&quot;
PSelectedNode.getUserObject + (). ToString ());
)

)

private void caricaTags ()
(
ArrayList &lt;BeanTag&gt; beanTags = null;
TRY
(
beanTags = tag.ottieniTags ();
)
/ / If an error displays an error message.
catch (RemoteException e)
(
)
finally
(
for (BeanTag b: beanTags)
(
panelTag.insertTag (b);
)
panelTag.repaint ();
)

)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BannerDialog</id>
      <content>ï&gt;¿package unisa.gps.etour.gui.operatoreagenzia;

import java.awt .*;
import java.awt.event .*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing .*;
import javax.swing.filechooser.FileFilter;
import javax.swing.border .*;

import unisa.gps.etour.gui.operatoreagenzia.Home;

/ **
* This class realizes the panel for the dialog for entering a
* New banner or a banner for replacing selected.
*
* @ Version 1.0
* @ Author Mario Gallo
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class JPanel extends BannerDialog
(
private final static Dimension bannerSize = new Dimension (140, 40);
private JLabel preview = null;
private JButton btnCarica = null;
private JPanel that;

/ **
* This is the default constructor.
* /
public BannerDialog ()
(
super (null);
this = this;
setPreferredSize (new Dimension (420, 160));
preview = new JLabel ();
anteprima.setBounds (new Rectangle (40, 20, 250, 60));
anteprima.setBorder (BorderFactory.createTitledBorder (BorderFactory
. createLineBorder (new Color (51, 102, 255), 3),
Preview Banner &quot;, TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION,
new Font ( &quot;Dialog&quot;, Font.BOLD, 12), new Color (0, 102, 204)));
btnCarica = new JButton ();
btnCarica.setBounds (new Rectangle (320, 30, 50, 40));
btnCarica.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;ApriFile.png &quot;)));
btnCarica.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
File f = apriFileDialog ();

if (f == null)
(
return;
)

BufferedImage img = null;
TRY
(
img = ImageIO.read (f);
if (img.getWidth ()&gt; bannerSize.width
| | Img.getHeight ()&gt; bannerSize.height)
(
img.getSubimage img = (0, 0, bannerSize.width,
bannerSize.height);
)
)
catch (Exception e)
(
e.printStackTrace ();
)
N = new ImageIcon ImageIcon (img);
anteprima.setIcon (n);
anteprima.repaint ();
)
));

JLabel txtAttenzione = new JLabel ( &quot;Warning!&quot;);
txtAttenzione.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;warning16.png &quot;)));
txtAttenzione.setBounds (10, 85, 100, 30);
JLabel txtTest = new JLabel (
&quot;&lt;html&gt; &lt;ul&gt; &lt;li&gt; image for the banner can not exceed &lt;b&gt; &lt;font color=\&quot;red\&quot;&gt;&quot;
+ BannerSize.width
+ &quot;X&quot;
+ BannerSize.height
+ &quot;&lt;/ Font&gt; &lt;/ b&gt; pixels.&quot;
+ &quot;&lt;li&gt; Images of magnitude larger will be resized. &lt;/ Ul&gt; &lt;/ html&gt;&quot;);
txtTesto.setBounds (0, 90, 420, 80);
add (txtTest, null);
add (txtAttenzione, null);
add (prev, null);
add (btnCarica, null);

)

/ **
* This method initializes the image contained in the preview.
*
* @ Param pBanner ImageIcon - an image of a banner.
* /
public void setSelectedBanner (ImageIcon pBanner)
(
anteprima.setIcon (pBanner);
)

/ **
* This method returns the image contained in the preview.
*
* @ Return ImageIcon - the image of the banner.
* /
public ImageIcon getSelectedBanner ()
(
return (ImageIcon) anteprima.getIcon ();
)

/ **
* This method opens the dialog for selecting a file from disk.
*
* @ Return
* &lt;ul&gt;
* &lt;li&gt; Files - the selected file.
* &lt;li&gt; Null - if you have not selected any files.
* &lt;/ Ul&gt;
* /
private File apriFileDialog ()
(
JFileChooser apriFile = new JFileChooser ();
apriFile.setDialogTitle ( &quot;Select a new image&quot;);
apriFile.setAcceptAllFileFilterUsed (false);
apriFile.setMultiSelectionEnabled (false);

/ / File Filter for the window to open the file.
apriFile.setFileFilter (new FileFilter ()
(
public boolean accept (File arg0)
(
if (arg0.isDirectory ())
return true;
String name = arg0.getName (). ToLowerCase ();
if (nome.endsWith ( &quot;jpg&quot;) | | nome.endsWith ( &quot;gif&quot;)
| | Nome.endsWith ( &quot;png&quot;))
return true;
else
return false;
)

public String getDescription ()
(
return &quot;Images (*. PNG, *. GIF, *. JPG)&quot;;
)

));
int returnVal = apriFile.showOpenDialog (this);
if (returnVal == JFileChooser.APPROVE_OPTION)
(
apriFile.getSelectedFile return ();
)
else
return null;

)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BannerNode</id>
      <content>ï&gt;¿package unisa.gps.etour.gui.operatoreagenzia.tables;

import javax.swing.ImageIcon;
import javax.swing.tree.DefaultMutableTreeNode;

/ **
* This class creates a node in a JTree to store
* Information about a banner.
*
* @ Version 1.0
* @ Author Mario Gallo
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class DefaultMutableTreeNode extends BannerNode
(
private int id;

/ **
* This is the default constructor.
*
* /
public BannerNode ()
(
super ();
)

/ **
* Create a node with the image of the banner and
* Your id supplied as parameters.
*
* @ Param pBanner Imagelcon - the image of the banner.
PID * @ param int - the id of the banner.
* @ Throws IllegalArgumentException - if the image provided as input is invalid.
*
* /
public BannerNode (ImageIcon pBanner, int pid) throws IllegalArgumentException
(
super ();
if (null == pBanner)
(
throw new IllegalArgumentException ( &quot;Image is invalid.&quot;);
)
setUserObject (pBanner);
id = pid;
)

/ **
*
* Returns the node type PRNode father.
*
* @ Return PRNode - the parent node.
*
* /
public PRNode getParent ()
(
return (PRNode) super.getParent ();
)

/ **
*
* Returns the id of the banner for which information
* Are stored in this node.
*
* @ Return int - the id of the banner.
*
* /
public int getID ()
(
return id;
)

/ **
*
* Stores the id of the banner supplied input.
*
* @ Param int PID - an ID of a banner.
*
* /
public void setID (int pid)
(
id = pid;
)

/ **
*
* Returns the banner image.
*
* @ Return ImageIcon - the image.
* /
public ImageIcon getBanner ()
(
return (ImageIcon) getUserObject ();
)

/ **
*
* Save the image provided as input.
*
* @ Param pImmagine Imagelcon - the image to be stored.
* @ Throws IllegalArgumentException - if the supplied parameter is null.
* /
public void setBanner (ImageIcon pImmagine) throws IllegalArgumentException
(
if (null == pImmagine)
(
throw new IllegalArgumentException ( &quot;Image is invalid.&quot;);
)
setUserObject (pImmagine);
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BannerRenderer</id>
      <content>package unisa.gps.etour.gui.operatoreagenzia.tables;

import java.awt.Color;
import java.awt.Component;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;

public class BannerRenderer extends DefaultTreeCellRenderer
(

public Component getTreeCellRendererComponent (pTree JTree, Object pValue,
pSelected boolean, boolean pExpanded, boolean pLeaf, int prow,
boolean pHasFocus)
(
Object obj = ((DefaultMutableTreeNode) pValue). GetUserObject ();
if ((object instanceof ImageIcon))
(
throw new IllegalArgumentException ( &quot;Value cell unexpected.&quot;);
)
ImageIcon image = (ImageIcon) object;
JLabel aLabel = new JLabel ();
aLabel.setIcon (image);
aLabel.setSize (immagine.getIconWidth () + 10, image
. getIconHeight () + 10);
if (pSelected)
(
aLabel.setBorder (BorderFactory.createLineBorder (Color.red, 2));
)
aLabel return;

)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanBanner</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;

/ **
* Bean which contains data on the Banner
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

import java.io.Serializable;

public class BeanBanner implements Serializable
(
private static final long serialVersionUID =-872783211721655763L;
private int id;
private int idPuntoDiRistoro;
private String filepath;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param pPercorsoFile
* @ Param pidPuntoDiRistoro
* /

public BeanBanner (int pid, String pPercorsoFile, int pidPuntoDiRistoro)
(
setId (PID);
setPercorsoFile (pPercorsoFile);
setIdPuntoDiRistoro (pidPuntoDiRistoro);
)

/ **
* Empty Constructor
*
* /
public BeanBanner ()
(

)

/ **
* Returns the value of FilePath
*
* @ Return value of FilePath.
* /

public String getPercorsoFile ()
(
return filepath;
)

/ **
* Sets the new value of filepath
*
* @ Param pPercorsoFile New value filepath.
* /
public void setPercorsoFile (String pPercorsoFile)
(
filepath = pPercorsoFile;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Returns the value of idPuntoDiRistoro
*
* @ Return value idPuntoDiRistoro.
* /
public int getIdPuntoDiRistoro ()
(
idPuntoDiRistoro return;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

/ **
* Sets the new value of idPuntoDiRistoro
*
* @ Param value pIdPuntoDiRistoro New idPuntoDiRistoro.
* /
public void setIdPuntoDiRistoro (int pIdPuntoDiRistoro)
(
idPuntoDiRistoro = pIdPuntoDiRistoro;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanBeneCulturale</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;

/ **
* Bean containing information relating to a cultural heritage
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

import java.io.Serializable;
import java.util.Date;

import unisa.gps.etour.util.Punto3D;

public class BeanBeneCulturale implements Serializable
(

private static final long serialVersionUID =-460705346474984466L;

private int id;
private int numeroVoti;
private String name;
private String city;
private String phone;
private String description;
private String location;
private String street;
private String cap;
private String province;
private String giornoChiusura;
Private Punto3D position;
private Date orarioApertura;
private Date orarioChiusura;
private double costoBiglietto;
private double mediaVoti;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param pNumeroVoti
* @ Param Pnom
* @ Param pCitta
* @ Param pTelefono
* @ Param pDescrizione
* @ Param pLocalita
* @ Param pVia
* @ Param pcap
* @ Param pProvincia
* @ Param pPosizione
* @ Param pOrarioApertura
* @ Param pOrarioChiusura
* @ Param pGiornoChiusura
* @ Param pCostoBiglietto
* @ Param pMediaVoti
* /
public BeanBeneCulturale (int pid, int pNumeroVoti, String Pnom,
PCitta String, String pTelefono, String pDescrizione,
PLocalita String, String pVia, pcap String, String pProvincia,
Punto3D pPosizione, Date pOrarioApertura, Date pOrarioChiusura,
String pGiornoChiusura, double pCostoBiglietto, double pMediaVoti)
(
setId (PID);
setNumeroVoti (pNumeroVoti);
setNome (Phnom);
setCitta (pCitta);
setTelefono (pTelefono);
setDescrizione (pDescrizione);
setlocale (pLocalita);
setvar (pVia);
setCap (PCAP);
setProvincia (pProvincia);
setPosizione (pPosizione);
setOrarioApertura (pOrarioApertura);
setOrarioChiusura (pOrarioChiusura);
setGiornoChiusura (pGiornoChiusura);
setCostoBiglietto (pCostoBiglietto);
setMediaVoti (pMediaVoti);
)

/ **
* Empty Constructor
* /
public BeanBeneCulturale ()
(

)

/ **
* Returns the value of giornoChiusura
*
* @ Return value giornoChiusura.
* /
public String getGiornoChiusura ()
(
giornoChiusura return;
)

/ **
* Sets the new value of giornoChiusura
*
* @ Param value pGiornoChiusura New giornoChiusura.
* /
public void setGiornoChiusura (String pGiornoChiusura)
(
giornoChiusura = pGiornoChiusura;
)

/ **
* Returns the value of cap
*
* @ Return value cap.
* /
public String getCap ()
(
return cap;
)

/ **
* Sets the new value of cap
*
New pcap * @ param value cap.
* /
public void setCap (String PCAP)
(
ch = pcap;
)

/ **
* Returns the value of city
*
* @ Return Value of city.
* /
public String getCitta ()
(
return city;
)

/ **
* Sets the new value of city
*
* @ Param value New pCitta city.
* /
public void setCitta (String pCitta)
(
City = pCitta;
)

/ **
* Returns the value of costoBiglietto
*
* @ Return value costoBiglietto.
* /
public double getCostoBiglietto ()
(
costoBiglietto return;
)

/ **
* Sets the new value of costoBiglietto
*
* @ Param value pCostoBiglietto New costoBiglietto.
* /
public void setCostoBiglietto (double pCostoBiglietto)
(
costoBiglietto = pCostoBiglietto;
)

/ **
* Returns the value of description
*
* @ Return value of description.
* /
public String getDescrizione ()
(
return description;
)

/ **
* Sets the new value of description
*
* @ Param pDescrizione New value of description.
* /
public void setDescrizione (String pDescrizione)
(
description = pDescrizione;
)

/ **
* Returns the value of location
*
* @ Return locale values.
* /
public String getLocal ()
(
return location;
)

/ **
* Sets the new value of location
*
* @ Param pLocalita New locale values.
* /
public void setLocale (String pLocalita)
(
location = pLocalita;
)

/ **
* Returns the value of mediaVoti
*
* @ Return value mediaVoti.
* /
public double getMediaVoti ()
(
mediaVoti return;
)

/ **
* Sets the new value of mediaVoti
*
* @ Param value pMediaVoti New mediaVoti.
* /
public void setMediaVoti (double pMediaVoti)
(
mediaVoti = pMediaVoti;
)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getName ()
(
return name;
)

/ **
* Sets the new name value
*
* @ Param name New value Pnom.
* /
public void setNome (String Pnom)
(
name = Pnom;
)

/ **
* Returns the value of numeroVoti
*
* @ Return value numeroVoti.
* /
public int getNumeroVoti ()
(
numeroVoti return;
)

/ **
* Sets the new value of numeroVoti
*
* @ Param value pNumeroVoti New numeroVoti.
* /
public void setNumeroVoti (int pNumeroVoti)
(
numeroVoti = pNumeroVoti;
)

/ **
* Returns the value of orarioApertura
*
* @ Return value orarioApertura.
* /
public Date getOrarioApertura ()
(
orarioApertura return;
)

/ **
* Sets the new value of orarioApertura
*
* @ Param value pString New orarioApertura.
* /
public void setOrarioApertura (Date pString)
(
orarioApertura = pString;
)

/ **
* Returns the value of orarioChiusura
*
* @ Return value orarioChiusura.
* /
public Date getOrarioChiusura ()
(
orarioChiusura return;
)

/ **
* Sets the new value of orarioChiusura
*
* @ Param value pOrarioChiusura New orarioChiusura.
* /
public void setOrarioChiusura (Date pOrarioChiusura)
(
orarioChiusura = pOrarioChiusura;
)

/ **
* Returns the value of position
*
* @ Return value of position.
* /
public Punto3D getPosizione ()
(
return position;
)

/ **
* Sets the new position value
*
* @ Param pPosizione New position value.
* /
public void setPosizione (Punto3D pPosizione)
(
position = pPosizione;
)

/ **
* Returns the value of the province
*
* @ Return value of the province.
* /
public String getProvincia ()
(
return province;
)

/ **
* Sets the new value of the province
*
* @ Param pProvincia New value for the province.
* /
public void setProvincia (String pProvincia)
(
province = pProvincia;
)

/ **
* Returns the value of telephone
*
* @ Return Value of the phone.
* /
public String getTelefono ()
(
return phone;
)

/ **
* Sets the new value of telephone
*
* @ Param value New pTelefono phone.
* /
public void setTelefono (String pTelefono)
(
phone = pTelefono;
)

/ **
* Returns the value of street
*
* @ Return value on.
* /
public String getVar ()
(
return path;
)

/ **
* Sets the new value via
*
* @ Param value New pVia on.
* /
public void setvar (String pVia)
(
via = pVia;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanConvenzione</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;
import java.util.Date;
/ **
* Bean containing information relating to a Convention
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class BeanConvenzione implements Serializable
(

private static final long serialVersionUID =-3255500940680220001L;
private int id;
private int maxBanner;
private Date StartDate;
private Date EndDate;
private double price;
private boolean active;
private int idPuntoDiRistoro;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param pMaxBanner
* @ Param pDataInizio
* @ Param pDataFine
* @ Param pPrezzo
* @ Param pacts
* @ Param pidPuntoDiRistoro
* /
public BeanConvenzione (int pid, int pMaxBanner, Date pDataInizio,
Date pDataFine, double pPrezzo, boolean terms,
int pidPuntoDiRistoro)
(
setId (PID);
setMaxBanner (pMaxBanner);
setDataInizio (pDataInizio);
setDataFine (pDataFine);
setPrezzo (pPrezzo);
setAttiva (Patti);
setIdPuntoDiRistoro (pidPuntoDiRistoro);
)

/ **
* Empty Constructor
*
* /
public BeanConvenzione ()
(

)

/ **
* Returns the value of active
*
* @ Return value of assets.
* /
public boolean isAttiva ()
(
return active;
)

/ **
* Sets the new value of active
*
* @ Param new value terms of assets.
* /
public void setAttiva (boolean Patti)
(
active = Pact;
)

/ **
* Returns the value of EndDate
*
* @ Return Value EndDate.
* /
public Date getDataFine ()
(
EndDate return;
)

/ **
* Sets the new value for EndDate
*
* @ Param pDataFine New value for EndDate.
* /
public void setDataFine (Date pDataFine)
(
EndDate = pDataFine;
)

/ **
* Returns the value of StartDate
*
* @ Return value StartDate.
* /
public Date getDataInizio ()
(
StartDate return;
)

/ **
* Sets the new value of StartDate
*
* @ Param new value pDataInizio StartDate.
* /
public void setDataInizio (Date pDataInizio)
(
StartDate = pDataInizio;
)

/ **
* Returns the value of maxBanner
*
* @ Return value maxBanner.
* /
public int getMaxBanner ()
(
maxBanner return;
)

/ **
* Sets the new value of maxBanner
*
* @ Param value pMaxBanner New maxBanner.
* /
public void setMaxBanner (int pMaxBanner)
(
maxBanner = pMaxBanner;
)

/ **
* Returns the value of money
*
* @ Return value price.
* /
public double getPrezzo ()
(
return price;
)

/ **
* Sets the new value of money
*
* @ Param pPrezzo New value for money.
* /
public void setPrezzo (double pPrezzo)
(
Price = pPrezzo;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Returns the value of idPuntoDiRistoro
*
* @ Return value idPuntoDiRistoro.
* /
public int getIdPuntoDiRistoro ()
(
idPuntoDiRistoro return;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

/ **
* Sets the new value of idPuntoDiRistoro
*
* @ Param value pIdPuntoDiRistoro New idPuntoDiRistoro.
* /
public void setIdPuntoDiRistoro (int pIdPuntoDiRistoro)
(
idPuntoDiRistoro = pIdPuntoDiRistoro;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanMenu</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;
/ **
* Bean containing information relating to a Menu
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class BeanMenu implements Serializable
(
private static final long serialVersionUID =-3112032222839565409L;
private int id;
private String day;
private int idPuntoDiRistoro;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param pGiorno
* @ Param pIdPuntoDiRistoro
* /
public BeanMenu (int pid, String pGiorno, int pIdPuntoDiRistoro)
(
setId (PID);
setGiorno (pGiorno);
setIdPuntoDiRistoro (pIdPuntoDiRistoro);
)

/ **
* Empty Constructor
* /
public BeanMenu ()
(

)

/ **
* Returns the value of days
*
* @ Return Value of the day.
* /
public String getGiorno ()
(
return day
)

/ **
* Sets the new value of days
*
* @ Param value New pGiorno day.
* /
public void setGiorno (String pGiorno)
(
day = pGiorno;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Returns the value of idPuntoDiRistoro
*
* @ Return value idPuntoDiRistoro.
* /
public int getIdPuntoDiRistoro ()
(
idPuntoDiRistoro return;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

/ **
* Sets the new value of idPuntoDiRistoro
*
* @ Param value pIdPuntoDiRistoro New idPuntoDiRistoro.
* /
public void setIdPuntoDiRistoro (int pIdPuntoDiRistoro)
(
idPuntoDiRistoro = pIdPuntoDiRistoro;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanNews</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;

/ **
* Bean containing information relating to the News
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

import java.io.Serializable;
import java.util.Date;

public class BeanNews implements Serializable
(
private String news;
private Date dataPubblicazione;
private Date dataScadenza;
private int priority;
private int id;
private static final long serialVersionUID =-6249491056436689386L;

/ **
* Parameterized constructor
*
* @ Param Pnews
* @ Param pDataPubblicazione
* @ Param pDataScadenza
* @ Param pPriorita
* @ Param pId
* /
public BeanNews (String Pnews, Date pDataPubblicazione, Date pDataScadenza,
pPriorita int, int pid)
(
setNews (Pnews);
setDataPubblicazione (pDataPubblicazione);
setDataScadenza (pDataScadenza);
setPriorita (pPriorita);
setId (PID);
)

/ **
* Empty Constructor
*
* /
public BeanNews ()
(

)

/ **
* Returns the value of dataPubblicazione
*
* @ Return value dataPubblicazione.
* /
public Date getDataPubblicazione ()
(
dataPubblicazione return;
)

/ **
* Sets the new value of dataPubblicazione
*
* @ Param value pDataPubblicazione New dataPubblicazione.
* /
public void setDataPubblicazione (Date pDataPubblicazione)
(
dataPubblicazione = pDataPubblicazione;
)

/ **
* Returns the value of dataScadenza
*
* @ Return value dataScadenza.
* /
public Date getDataScadenza ()
(
dataScadenza return;
)

/ **
* Sets the new value of dataScadenza
*
* @ Param value pDataScadenza New dataScadenza.
* /
public void setDataScadenza (Date pDataScadenza)
(
dataScadenza = pDataScadenza;
)

/ **
* Returns the value of news
*
* @ Return value of news.
* /
public String getNews ()
(
return news;
)

/ **
* Sets the new value of news
*
* @ Param value New Pnews news.
* /
public void setNews (String Pnews)
(
news = Pnews;
)

/ **
* Returns the priority value
*
* @ Return the priority value.
* /
public int getPriorita ()
(
return priority;
)

/ **
* Set the new priority value
*
* @ Param pPriorita New priority value.
* /
public void setPriorita (int pPriorita)
(
Priority = pPriorita;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanOperatoreAgenzia</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;
/ **
* Bean containing information relating to an Agency Operator
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class BeanOperatoreAgenzia implements Serializable
(

/ **
*
* /
private static final long serialVersionUID =-3489147679484477440L;
private int id;
private String username;
private String name;
private String name;
private String password;

/ **
* Parameterized constructor
*
* @ Param pid
* @ Param pUsername
* @ Param Pnom
* @ Param pCognome
* @ Param pPassword
* /
public BeanOperatoreAgenzia (int pid, String pUsername, String Pnom,
PCognome String, String pPassword)
(
setId (pid);
setUsername (pUsername);
setNome (Phnom);
setCognome (pCognome);
setPassword (pPassword);
)

/ **
* Empty Constructor
* /
public BeanOperatoreAgenzia ()
(

)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getCognome ()
(
return name;
)

/ **
* Sets the new value of name
*
* @ Param value New pCognome surname.
* /
public void setCognome (String pCognome)
(
last = pCognome;
)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getName ()
(
return name;
)

/ **
* Sets the new name value
*
* @ Param name New value Pnom.
* /
public void setNome (String Pnom)
(
name = Pnom;
)

/ **
* Returns the value of password
*
* @ Return value of password.
* /
public String getPassword ()
(
return password;
)

/ **
* Sets the new password value
*
* @ Param pPassword new password value.
* /
public void setPassword (String pPassword)
(
password = pPassword;
)

/ **
* Returns the value of username
*
* @ Return value of username.
* /
public String GetUserName ()
(
return username;
)

/ **
* Sets the new value of username
*
* @ Param pUsername New value for username.
* /
public void setUsername (String pUsername)
(
username = pUsername;
)

/ **
* Sets the new value of id
*
* @ Param new value of id pid.
* /
public void setId (int pid)
(
id = pid;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanOperatorePuntoDiRistoro</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;
/ **
* Bean containing information relating to food
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class BeanOperatorePuntoDiRistoro implements Serializable
(
private int id;
private String name;
private String name;
private String username;
private String password;
private String email;
private int idPuntoDiRistoro;
private static final long serialVersionUID =-6485826396352557404L;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param Pnom
* @ Param pCognome
* @ Param pUsername
* @ Param pPassword
* @ Param pEmail
* @ Param pIdPuntoDiRistoro
* /
public BeanOperatorePuntoDiRistoro (int pid, Phnom String, String pCognome,
PUsername String, String pPassword, String pEmail,
int pIdPuntoDiRistoro)
(
setId (PID);
setNome (Phnom);
setCognome (pCognome);
setUsername (pUsername);
setPassword (pPassword);
setEmail (pEmail);
setIdPuntoDiRistoro (pIdPuntoDiRistoro);
)

/ **
* Empty Constructor
* /
public BeanOperatorePuntoDiRistoro ()
(

)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getCognome ()
(
return name;
)

/ **
* Sets the new value of name
*
* @ Param value New pCognome surname.
* /
public void setCognome (String pCognome)
(
last = pCognome;
)

/ **
* Returns the value of email
*
* @ Return value of email.
* /
public String getEmail ()
(
return email;
)

/ **
* Sets the new value of email
*
* @ Param pEmail New value of email.
* /
public void setEmail (String pEmail)
(
email = pEmail;
)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getName ()
(
return name;
)

/ **
* Sets the new name value
*
* @ Param name New value Pnom.
* /
public void setNome (String Pnom)
(
name = Pnom;
)

/ **
* Returns the value of password
*
* @ Return value of password.
* /
public String getPassword ()
(
return password;
)

/ **
* Sets the new password value
*
* @ Param pPassword new password value.
* /
public void setPassword (String pPassword)
(
password = pPassword;
)

/ **
* Returns the value of username
*
* @ Return value of username.
* /
public String GetUserName ()
(
return username;
)

/ **
* Sets the new value of username
*
* @ Param pUsername New value for username.
* /
public void setUsername (String pUsername)
(
username = pUsername;
)

/ **
* Returns the value of idPuntoDiRistoro
*
* @ Return value idPuntoDiRistoro.
* /
public int getIdPuntoDiRistoro ()
(
idPuntoDiRistoro return;
)

/ **
* Sets the new value of idPuntoDiRistoro
*
* @ Param value pIdPuntoDiRistoro New idPuntoDiRistoro.
* /
public void setIdPuntoDiRistoro (int pIdPuntoDiRistoro)
(
idPuntoDiRistoro = pIdPuntoDiRistoro;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanPiatto</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;

/ **
* Bean containing information relating to food
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

public class BeanPiatto implements Serializable
(
private int id;
private String name;
private double price;
private int idMenu;
private static final long serialVersionUID =-3775462843748984482L;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param Pnom
* @ Param pPrezzo
* @ Param pIdMenu
* /
public BeanPiatto (int pid, String Pnom, double pPrezzo, int pIdMenu)
(
setId (PID);
setNome (Phnom);
setPrezzo (pPrezzo);
setIdMenu (pIdMenu);
)

/ **
* Empty Constructor
* /
public BeanPiatto ()
(

)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getName ()
(
return name;
)

/ **
* Sets the new name value
*
* @ Param name New value Pnom.
* /
public void setNome (String Pnom)
(
name = Pnom;
)

/ **
* Returns the value of money
*
* @ Return value price.
* /
public double getPrezzo ()
(
return price;
)

/ **
* Sets the new value of money
*
* @ Param pPrezzo New value for money.
* /
public void setPrezzo (double pPrezzo)
(
Price = pPrezzo;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Returns the value of idMenu
*
* @ Return value idMenu.
* /
public int getIdMenu ()
(
idMenu return;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

/ **
* Sets the new value of idMenu
*
* @ Param value pIdMenu New idMenu.
* /
public void setIdMenu (int pIdMenu)
(
idMenu = pIdMenu;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanPreferenzaDiRicerca</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;

/ **
* Bean which contains data search preferences
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class BeanPreferenzaDiRicerca implements Serializable
(
private static final long serialVersionUID = 7576354037868937929L;
private int id;
private String name;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param Pnom
* /
public BeanPreferenzaDiRicerca (int pid, String Pnom)
(
setId (PID);
setNome (Phnom);
)

/ **
* Empty Constructor
*
* /
public BeanPreferenzaDiRicerca ()
(

)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getName ()
(
return name;
)

/ **
* Sets the new name value
*
* @ Param name New value Pnom.
* /
public void setNome (String Pnom)
(
name = Pnom;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanPreferenzeGeneriche</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;

/ **
* Bean containing information relating to the General Preferences
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

import java.io.Serializable;

public class BeanPreferenzeGeneriche implements Serializable
(
private static final long serialVersionUID = 6805656922951334071L;
private int id;
private int dimensioneFont;
private String font;
private String subject;
private int idTurista;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param pDimensioneFont
* @ Param pFont
* @ Param pTema
* @ Param pIdTurista
* /
public BeanPreferenzeGeneriche (int pid, int pDimensioneFont, String pFont,
PTema String, int pIdTurista)
(
setId (PID);
setDimensioneFont (pDimensioneFont);
setFont (pFont);
September (pTema);
setIdTurista (pIdTurista);
)

/ **
* Empty Constructor
* /
public BeanPreferenzeGeneriche ()
(

)

/ **
* Returns the value of dimensioneFont
*
* @ Return value dimensioneFont.
* /
public int getDimensioneFont ()
(
dimensioneFont return;
)

/ **
* Sets the new value of dimensioneFont
*
* @ Param value pDimensioneFont New dimensioneFont.
* /
public void setDimensioneFont (int pDimensioneFont)
(
dimensioneFont = pDimensioneFont;
)

/ **
* Returns the value of font
*
* @ Return Value of fonts.
* /
public String getFont ()
(
return font;
)

/ **
* Sets the new value of font
*
New value * @ param pFont font.
* /
public void setFont (String pFont)
(
font = pFont;
)

/ **
* Returns the value of the subject
*
* @ Return value issue.
* /
public String getTema ()
(
return theme;
)

/ **
* Sets the new value of the subject
*
* @ Param value New pTema theme.
* /
public void September (String pTema)
(
topic = pTema;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Returns the value of usernameTurista
*
* @ Return value usernameTurista.
* /
public int getIdTurista ()
(
idTurista return;
)

/ **
* Sets the new value of usernameTurista
*
* @ Param value pIdTurista New usernameTurista.
* /
public void setIdTurista (int pIdTurista)
(
idTurista = pIdTurista;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanPuntoDiRistoro</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;
import java.util.Date;

import unisa.gps.etour.util.Punto3D;
/ **
* Bean for the storage of data refreshment
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

public class BeanPuntoDiRistoro implements Serializable
(
private static final long serialVersionUID = 8417686685147484931L;
private int id;
private int numeroVoti;
private double mediaVoti;
private String name;
private String description;
private String phone;
private String location;
private String city;
private String street;
private String cap;
private String province;
private String PartitaIva;
Private Punto3D position;
private Date orarioApertura;
private Date orarioChiusura;
private String giornoChiusura;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param pNumeroVoti
* @ Param pMediaVoti
* @ Param Pnom
* @ Param pDescrizione
* @ Param pTelefono
* @ Param pLocalita
* @ Param pCitta
* @ Param pVia
* @ Param pcap
* @ Param pProvincia
* @ Param pPartitaIva
* @ Param pPosizione
* @ Param pOrarioApertura
* @ Param pOrarioChiusura
* @ Param pGiornoChiusura
* /
public BeanPuntoDiRistoro (int pid, int pNumeroVoti, double pMediaVoti,
Phnom String, String pDescrizione, String pTelefono,
PLocalita String, String pCitta, pVia String, String pcap,
PProvincia String, String pPartitaIva, Punto3D pPosizione,
Date pOrarioApertura, Date pOrarioChiusura, String pGiornoChiusura)
(
setId (PID);
setNumeroVoti (pNumeroVoti);
setMediaVoti (pMediaVoti);
setNome (Phnom);
setDescrizione (pDescrizione);
setTelefono (pTelefono);
setlocale (pLocalita);
setCitta (pCitta);
setvar (pVia);
setCap (PCAP);
setProvincia (pProvincia);
setPartitaIva (pPartitaIva);
setPosizione (pPosizione);
setOrarioApertura (pOrarioApertura);
setOrarioChiusura (pOrarioChiusura);
setGiornoChiusura (pGiornoChiusura);
)

/ **
* Empty Constructor
*
* /
public BeanPuntoDiRistoro ()
(

)

/ **
* Returns the value of cap
*
* @ Return value cap.
* /
public String getCap ()
(
return cap;
)

/ **
* Sets the new value of cap
*
New pcap * @ param value cap.
* /
public void setCap (String PCAP)
(
ch = pcap;
)

/ **
* Returns the value of city
*
* @ Return Value of city.
* /
public String getCitta ()
(
return city;
)

/ **
* Sets the new value of city
*
* @ Param value New pCitta city.
* /
public void setCitta (String pCitta)
(
City = pCitta;
)

/ **
* Returns the value of description
*
* @ Return value of description.
* /
public String getDescrizione ()
(
return description;
)

/ **
* Sets the new value of description
*
* @ Param pDescrizione New value of description.
* /
public void setDescrizione (String pDescrizione)
(
description = pDescrizione;
)

/ **
* Returns the value of giornoChiusura
*
* @ Return value giornoChiusura.
* /
public String getGiornoChiusura ()
(
giornoChiusura return;
)

/ **
* Sets the new value of giornoChiusura
*
* @ Param value pGiornoChiusura New giornoChiusura.
* /
public void setGiornoChiusura (String pGiornoChiusura)
(
giornoChiusura = pGiornoChiusura;
)

/ **
* Returns the value of location
*
* @ Return locale values.
* /
public String getLocal ()
(
return location;
)

/ **
* Sets the new value of location
*
* @ Param pLocalita New locale values.
* /
public void setLocale (String pLocalita)
(
location = pLocalita;
)

/ **
* Returns the value of mediaVoti
*
* @ Return value mediaVoti.
* /
public double getMediaVoti ()
(
mediaVoti return;
)

/ **
* Sets the new value of mediaVoti
*
* @ Param value pMediaVoti New mediaVoti.
* /
public void setMediaVoti (double pMediaVoti)
(
mediaVoti = pMediaVoti;
)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getName ()
(
return name;
)

/ **
* Sets the new name value
*
* @ Param name New value Pnom.
* /
public void setNome (String Pnom)
(
name = Pnom;
)

/ **
* Returns the value of numeroVoti
*
* @ Return value numeroVoti.
* /
public int getNumeroVoti ()
(
numeroVoti return;
)

/ **
* Sets the new value of numeroVoti
*
* @ Param value pNumeroVoti New numeroVoti.
* /
public void setNumeroVoti (int pNumeroVoti)
(
numeroVoti = pNumeroVoti;
)

/ **
* Returns the value of orarioApertura
*
* @ Return value orarioApertura.
* /
public Date getOrarioApertura ()
(
orarioApertura return;
)

/ **
* Sets the new value of orarioApertura
*
* @ Param value pOrarioApertura New orarioApertura.
* /
public void setOrarioApertura (Date pOrarioApertura)
(
orarioApertura = pOrarioApertura;
)

/ **
* Returns the value of orarioChiusura
*
* @ Return value orarioChiusura.
* /
public Date getOrarioChiusura ()
(
orarioChiusura return;
)

/ **
* Sets the new value of orarioChiusura
*
* @ Param value pOrarioChiusura New orarioChiusura.
* /
public void setOrarioChiusura (Date pOrarioChiusura)
(
orarioChiusura = pOrarioChiusura;
)

/ **
* Returns the value of PartitaIva
*
* @ Return value of a political party.
* /
public String getPartitaIva ()
(
PartitaIva return;
)

/ **
* Sets the new value of PartitaIva
*
* @ Param pPartitaIva New value of political parties.
* /
public void setPartitaIva (String pPartitaIva)
(
PartitaIva = pPartitaIva;
)

/ **
* Returns the value of position
*
* @ Return value of position.
* /
public Punto3D getPosizione ()
(
return position;
)

/ **
* Sets the new position value
*
* @ Param pPosizione New position value.
* /
public void setPosizione (Punto3D pPosizione)
(
position = pPosizione;
)

/ **
* Returns the value of the province
*
* @ Return value of the province.
* /
public String getProvincia ()
(
return province;
)

/ **
* Sets the new value of the province
*
* @ Param pProvincia New value for the province.
* /
public void setProvincia (String pProvincia)
(
province = pProvincia;
)

/ **
* Returns the value of telephone
*
* @ Return Value of the phone.
* /
public String getTelefono ()
(
return phone;
)

/ **
* Sets the new value of telephone
*
* @ Param value New pTelefono phone.
* /
public void setTelefono (String pTelefono)
(
phone = pTelefono;
)

/ **
* Returns the value of street
*
* @ Return value on.
* /
public String getVar ()
(
return path;
)

/ **
* Sets the new value via
*
* @ Param value New pVia on.
* /
public void setvar (String pVia)
(
via = pVia;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanTag</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;

/ **
* Bean that contains the data for a Tag
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

import java.io.Serializable;

public class BeanTag implements Serializable
(
private static final long serialVersionUID =-6320421006595188597L;
private int id;
private String name;
private String description;

/ **
* Parameterized constructor
*
* @ Param pId
* @ Param Pnom
* @ Param pDescrizione
* /
public BeanTag (int pid, Phnom String, String pDescrizione)
(
setId (PID);
setNome (Phnom);
setDescrizione (pDescrizione);
)

/ **
* Empty Constructor
* /
public BeanTag ()
(

)

/ **
* Returns the value of description
*
* @ Return value of description.
* /
public String getDescrizione ()
(
return description;
)

/ **
* Sets the new value of description
*
* @ Param pDescrizione New value of description.
* /
public void setDescrizione (String pDescrizione)
(
description = pDescrizione;
)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getName ()
(
return name;
)

/ **
* Sets the new value of name
*
* @ Param Phnom New value for name.
* /
public void setNome (String Pnom)
(
name = Pnom;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

/ **
* Sets the new value of id
*
* @ Param pId New value for id.
* /
public void setId (int pid)
(
id = pid;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanTurista</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;
import java.util.Date;
/ **
* Bean containing information relating to a tourist
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class BeanTurista implements Serializable
(
private static final long serialVersionUID = 4214744963263090577L;
private int id;
private String username;
private String name;
private String name;
private String cittaNascita;
private String cittaResidenza;
private String phone;
private String cap;
private String street;
private String province;
private String email;
private String password;
private Date dob;
private Date dataRegistrazione;
private boolean active;

/ **
* Parameterized constructor
*
* @ Param pid
* @ Param pUsername
* @ Param Pnom
* @ Param pCognome
* @ Param pCittaNascita
* @ Param pCittaResidenza
* @ Param pTelefono
* @ Param pcap
* @ Param pVia
* @ Param pProvincia
* @ Param pEmail
* @ Param pPassword
* @ Param pDataNascita
* @ Param pDataRegistrazione
* @ Param pacts
* /
public BeanTurista (int pid, String pUsername, String Pnom,
PCognome String, String pCittaNascita, String pCittaResidenza,
PTelefono String, String pcap, pVia String, String pProvincia,
PEmail String, String pPassword, Date pDataNascita,
Date pDataRegistrazione, boolean Patti)
(
setId (pid);
setUsername (pUsername);
setNome (Phnom);
setCognome (pCognome);
setCittaNascita (pCittaNascita);
setCittaResidenza (pCittaResidenza);
setTelefono (pTelefono);
setCap (PCAP);
setvar (pVia);
setProvincia (pProvincia);
setEmail (pEmail);
setPassword (pPassword);
setDataNascita (pDataNascita);
setDataRegistrazione (pDataRegistrazione);
setAttiva (Patti);
)

/ **
* Empty Constructor
* /
public BeanTurista ()
(

)

/ **
* Returns the value of cap
*
* @ Return value cap.
* /
public String getCap ()
(
return cap;
)

/ **
* Sets the new value of cap
*
New pcap * @ param value cap.
* /
public void setCap (String PCAP)
(
ch = pcap;
)

/ **
* Returns the value of cittaNascita
*
* @ Return value cittaNascita.
* /
public String getCittaNascita ()
(
cittaNascita return;
)

/ **
* Sets the new value of cittaNascita
*
* @ Param value pCittaNascita New cittaNascita.
* /
public void setCittaNascita (String pCittaNascita)
(
cittaNascita = pCittaNascita;
)

/ **
* Returns the value of cittaResidenza
*
* @ Return value cittaResidenza.
* /
public String getCittaResidenza ()
(
cittaResidenza return;
)

/ **
* Sets the new value of cittaResidenza
*
* @ Param value pCittaResidenza New cittaResidenza.
* /
public void setCittaResidenza (String pCittaResidenza)
(
cittaResidenza = pCittaResidenza;
)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getCognome ()
(
return name;
)

/ **
* Sets the new value of name
*
* @ Param value New pCognome surname.
* /
public void setCognome (String pCognome)
(
last = pCognome;
)

/ **
* Returns the value of dob
*
* @ Return value dob.
* /
public Date getDataNascita ()
(
return dob;
)

/ **
* Sets the new value of dob
*
* @ Param value New pDataNascita dob.
* /
public void setDataNascita (Date pDataNascita)
(
dob = pDataNascita;
)

/ **
* Returns the value of dataRegistrazione
*
* @ Return value dataRegistrazione.
* /
public Date getDataRegistrazione ()
(
dataRegistrazione return;
)

/ **
* Sets the new value of dataRegistrazione
*
* @ Param value pDataRegistrazione New dataRegistrazione.
* /
public void setDataRegistrazione (Date pDataRegistrazione)
(
dataRegistrazione = pDataRegistrazione;
)

/ **
* Returns the value of email
*
* @ Return value of email.
* /
public String getEmail ()
(
return email;
)

/ **
* Sets the new value of email
*
* @ Param pEmail New value of email.
* /
public void setEmail (String pEmail)
(
email = pEmail;
)

/ **
* Returns the value of name
*
* @ Return value of name.
* /
public String getName ()
(
return name;
)

/ **
* Sets the new name value
*
* @ Param name New value Pnom.
* /
public void setNome (String Pnom)
(
name = Pnom;
)

/ **
* Returns the value of password
*
* @ Return value of password.
* /
public String getPassword ()
(
return password;
)

/ **
* Sets the new password value
*
* @ Param pPassword new password value.
* /
public void setPassword (String pPassword)
(
password = pPassword;
)

/ **
* Returns the value of the province
*
* @ Return value of the province.
* /
public String getProvincia ()
(
return province;
)

/ **
* Sets the new value of the province
*
* @ Param pProvincia New value for the province.
* /
public void setProvincia (String pProvincia)
(
province = pProvincia;
)

/ **
* Returns the value of telephone
*
* @ Return Value of the phone.
* /
public String getTelefono ()
(
return phone;
)

/ **
* Sets the new value of telephone
*
* @ Param value New pTelefono phone.
* /
public void setTelefono (String pTelefono)
(
phone = pTelefono;
)

/ **
* Returns the value of street
*
* @ Return value on.
* /
public String getVar ()
(
return path;
)

/ **
* Sets the new value via
*
* @ Param value New pVia on.
* /
public void setvar (String pVia)
(
via = pVia;
)

/ **
* Returns the value of username
*
* @ Return value of username.
* /
public String GetUserName ()
(
return username;
)

/ **
Returns to be 1 or 0, indicating whether a tourist or not
* Active
*
* @ Return value of activation
* /
public boolean isAttiva ()
(
return active;
)

/ **
* Sets the new value of active
*
* @ Param new value terms of assets.
* /
public void setAttiva (boolean Patti)
(
active = Pact;
)

/ **
* Sets the new value of username
*
* @ Param pUsername New value for username.
* /
public void setUsername (String pUsername)
(
username = pUsername;
)

/ **
* Sets the new value of id
*
* @ Param new value of id pid.
* /
public void setId (int pid)
(
id = pid;
)

/ **
* Returns the value of id
*
* @ Return value id.
* /
public int getId ()
(
return id;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanVisitaBC</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;
import java.util.Date;
/ **
* Bean containing information relating to the feedback of a cultural
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class BeanVisitaBC implements Serializable
(
private static final long serialVersionUID = 3331567128449243852L;
private int rating;
private int idBeneCulturale;
private String comment;
private int IdTurista;
private Date dataVisita;

/ **
* Parameterized constructor
*
* @ Param pVoto
* @ Param pIdBeneCulturale
* @ Param pCommento
* @ Param pIdTurista
* @ Param pDataVisita
* /
public BeanVisitaBC (pVoto int, int pIdBeneCulturale,
PCommento String, int pIdTurista, Date pDataVisita)
(
setVoto (pVoto);
setIdBeneCulturale (pIdBeneCulturale);
setCommento (pCommento);
setIdTurista (pIdTurista);
setDataVisita (pDataVisita);
)

/ **
* Empty Constructor
* /
public BeanVisitaBC ()
(

)

/ **
* Returns the value of comment
*
* @ Return value of comment.
* /
public String getCommento ()
(
return comment;
)

/ **
* Sets the new value of comment
*
* @ Param value New pCommento comment.
* /
public void setCommento (String pCommento)
(
comment = pCommento;
)

/ **
* Returns the value of dataVisita
*
* @ Return value dataVisita.
* /
public Date getDataVisita ()
(
dataVisita return;
)

/ **
* Sets the new value of dataVisita
*
* @ Param value pDataVisita New dataVisita.
* /
public void setDataVisita (Date pDataVisita)
(
dataVisita = pDataVisita;
)

/ **
* Returns the value of idBeneCulturale
*
* @ Return value idBeneCulturale.
* /
public int getIdBeneCulturale ()
(
idBeneCulturale return;
)

/ **
* Sets the new value of idBeneCulturale
*
* @ Param value pIdBeneCulturale New idBeneCulturale.
* /
public void setIdBeneCulturale (int pIdBeneCulturale)
(
idBeneCulturale = pIdBeneCulturale;
)

/ **
* Returns the value of IdTurista
*
* @ Return value IdTurista.
* /
public int getIdTurista ()
(
IdTurista return;
)

/ **
* Sets the new value of IdTurista
*
* @ Param value pIdTurista New IdTurista.
* /
public void setIdTurista (int pIdTurista)
(
IdTurista = pIdTurista;
)

/ **
* Returns the value of voting
*
* @ Return value of vote.
* /
public int getVoto ()
(
return rating;
)

/ **
* Sets the new value of voting
*
New value * @ param pVoto to vote.
* /
public void setVoto (int pVoto)
(
vote = pVoto;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeanVisitaPR</id>
      <content>ï&gt;¿package unisa.gps.etour.bean;
import java.io.Serializable;
import java.util.Date;
/ **
* Bean that contains the data for feedback to a refreshment
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class BeanVisitaPR implements Serializable
(

private static final long serialVersionUID =-4065240072283418782L;
private int rating;
private int idPuntoDiRistoro;
private String comment;
private int IdTurista;
private Date dataVisita;

/ **
* Parameterized constructor
*
* @ Param pVoto
* @ Param pIdPuntoDiRistoro
* @ Param pCommento
* @ Param pIdTurista
* @ Param pDataVisita
* /
public BeanVisitaPR (pVoto int, int pIdPuntoDiRistoro,
PCommento String, int pIdTurista, Date pDataVisita)
(
setVoto (pVoto);
setIdPuntoDiRistoro (pIdPuntoDiRistoro);
setCommento (pCommento);
setIdTurista (pIdTurista);
setDataVisita (pDataVisita);
)

/ **
* Empty Constructor
* /
public BeanVisitaPR ()
(

)

/ **
* Returns the value of comment
*
* @ Return value of comment.
* /
public String getCommento ()
(
return comment;
)

/ **
* Sets the new value of comment
*
* @ Param value New pCommento comment.
* /
public void setCommento (String pCommento)
(
comment = pCommento;
)

/ **
* Returns the value of dataVisita
*
* @ Return value dataVisita.
* /
public Date getDataVisita ()
(
dataVisita return;
)

/ **
* Sets the new value of dataVisita
*
* @ Param value pDataVisita New dataVisita.
* /
public void setDataVisita (Date pDataVisita)
(
dataVisita = pDataVisita;
)

/ **
* Returns the value of idPuntoDiRistoro
*
* @ Return value idPuntoDiRistoro.
* /
public int getIdPuntoDiRistoro ()
(
idPuntoDiRistoro return;
)

/ **
* Sets the new value of idPuntoDiRistoro
*
* @ Param value pIdPuntoDiRistoro New idPuntoDiRistoro.
* /
public void setIdPuntoDiRistoro (int pIdPuntoDiRistoro)
(
idPuntoDiRistoro = pIdPuntoDiRistoro;
)

/ **
* Returns the value of IdTurista
*
* @ Return value IdTurista.
* /
public int getIdTurista ()
(
IdTurista return;
)

/ **
* Sets the new value of IdTurista
*
* @ Param value pIdTurista New IdTurista.
* /
public void setIdTurista (int pIdTurista)
(
IdTurista = pIdTurista;
)

/ **
* Returns the value of voting
*
* @ Return value of vote.
* /
public int getVoto ()
(
return rating;
)

/ **
* Sets the new value of voting
*
New value * @ param pVoto to vote.
* /
public void setVoto (int pVoto)
(
vote = pVoto;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_BeniCulturali</id>
      <content>ï&gt;¿	
package unisa.gps.etour.gui.operatoreagenzia;

import java.awt .*;
import java.awt.event .*;
import javax.swing .*;
import java.util .*;
import javax.swing.border .*;
import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia;
import unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune;
import unisa.gps.etour.control.GestioneTag.IGestioneTagComune;
import unisa.gps.etour.gui.DeskManager;
import unisa.gps.etour.gui.HelpManager;
import unisa.gps.etour.gui.operatoreagenzia.tables.MediaVotiRenderer;
import unisa.gps.etour.gui.operatoreagenzia.tables.Punto3DRenderer;
import unisa.gps.etour.gui.operatoreagenzia.tables.ScrollableTable;
import unisa.gps.etour.gui.operatoreagenzia.tables.SitoTableModel;
import unisa.gps.etour.util.Punto3D;
import java.io.FileNotFoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;

/ **
* Class that implements the interface for the management of cultural side
* Operator Agency.
*
* @ Author Mario Gallo
* @ Version 0.8
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class JInternalFrame extends Beniculturali
(
Private JDesktopPane JDesktopPane;
private JPanel jContentPane = null;
Private JToolBar BCToolbar = null;
private JButton btnNuovoBC = null;
private JButton btnSchedaBC = null;
private JButton btnEliminaBC = null;
private JButton btnModificaBC = null;
private JPanel rightPanel = null;
private JPanel searchPanel = null;
private JPanel helpPanel = null;
private JScrollPane JScrollPane = null;
private JTable tableBC = null;
Private TagPanel pannelloTag = null;
private JTextPane textGuida = null;
private JTextField nomeBC = null;
private JButton btnRicerca = null;
private JButton btnAzzera = null;
Private DeskManager desktopManager;
&lt;SchedaBC&gt; private ArrayList children;
private SitoTableModel TableModel;
Private HelpManager bcHelp;
Private IGestioneBeniCulturaliAgenzia gestioneBC;
Private IGestioneTagComune tags;
protected IGestioneBeniCulturaliComune ricercaBC;

/ **
* This is the default constructor.
* /
public Beniculturali ()
(
super ( &quot;Cultural Heritage&quot;);
setPreferredSize (Home.CHILD_SIZE);
frameIcon = new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;BC.png&quot;));
setDefaultCloseOperation (JInternalFrame.DO_NOTHING_ON_CLOSE);
closable = true;
resizable = true;
iconable = true;
maximizable = true;

/ / Setting up dell'help manager for cultural.
textGuida = new JTextPane ();
TRY
(
bcHelp = new HelpManager (Home.URL_HELP + &quot;BeniCulturali.txt&quot;
textGuida);
)
catch (FileNotFoundException e)
(
textGuida
. setText ( &quot;&lt;html&gt; &lt;b&gt; Help not available &lt;/ b&gt; &lt;/ html&gt;&quot;);
)
setContentPane (getJContentPane ());
&lt;SchedaBC&gt; children = new ArrayList ();
addInternalFrameListener (new InternalFrameAdapter ()
(
/ *
* Inclusion of the frame on the desktop desktop retrieves bread bread
* And desktop manager and initializes the remote objects
* Management of cultural heritage.
* /

public void internalFrameOpened (InternalFrameEvent pEvent)
(
PEvent.getInternalFrame JInternalFrame frame = ();
JDesktopPane frame.getDesktopPane = ();
desktopManager = (DeskManager) jDesktopPane.getDesktopManager ();

/ / Setting up objects for remote asset management
/ / Cultural.
TRY
(
Registry reg = LocateRegistry.getRegistry (Home.HOST);
gestioneBC = (IGestioneBeniCulturaliAgenzia) reg
. lookup ( &quot;GestioneBeniCulturaliAgenzia&quot;);
tag = (IGestioneTagComune) reg.lookup (GestioneTagComune &quot;);
ricercaBC = (IGestioneBeniCulturaliComune) reg
. lookup ( &quot;GestioneBeniCulturaliComune&quot;);
/ / Load data.
caricaTabella (false);
caricaTags ();
)
/ *
* Two exceptions: RemoteException and NotBoundException. The
* Result is the same. The management is not operable and
* After the error message window closes.
* /
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; The dialog management request is closed. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; &lt;b&gt; Possible Causes: &lt;/ b&gt;&quot;
+ &quot;&lt;ul&gt; &lt;li&gt; No connection to the network. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; inactive. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; clogged. &lt;/ Li&gt; &lt;/ ul&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (JDesktopPane, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
frame.dispose ();
)
)

/ *
* At the end of the frame displays the dialog
* Confirmation.
* /
public void internalFrameClosing (InternalFrameEvent pEvent)
(
/ / Create the confirmation dialog.
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Are you sure you want to close the management of cultural heritage?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;NB will be closed all the windows opened by this administration.&quot;
SwingConstants.CENTER);
avviso.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Close&quot;, &quot;Cancel&quot;);
int choice = JOptionPane.showInternalOptionDialog (jContentPane,
root, &quot;Confirm closing of Cultural Heritage&quot;,
JOptionPane.OK_CANCEL_OPTION,
JOptionPane.QUESTION_MESSAGE, frameIcon, options,
options [1]);
/ *
* If it is confirmed the closing of management, all
* Classes &quot;daughters&quot; are closed.
* /
if (choice == JOptionPane.OK_OPTION)
(
for (int i = 0; i &lt;figli.size (); i + +)
(
figli.get (i). dispose ();
)
pEvent.getInternalFrame (). dispose ();
)
)

));
)

/ **
* Update the current model of the table of cultural property with the bean
* Of the cultural supplied input.
*
* @ Param pbc BeanBeneCulturale - the bean with which to update the
* Model.
* /
protected void updateTableModel (BeanBeneCulturale PBC)
(
tableModel.updateBC (PBC);
)

/ **
* Closes the tab cultural selected.
*
* @ Param pScheda SchedaBC - the cultural card to close.
* /
protected void closeScheda (SchedaBC pScheda)
(
figli.remove (pScheda);
pScheda.dispose ();
)

/ **
* This method initializes the content pane of the frame.
*
* @ Return javax.swing.JPanel - the content pane.
* /
private JPanel getJContentPane ()
(
if (null == jContentPane)
(
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());
jContentPane.add (getBCToolbar (), BorderLayout.NORTH);
jContentPane.add (getPannelloDestro (), BorderLayout.EAST);
jContentPane.add (getJScrollPane (), BorderLayout.CENTER);
)
jContentPane return;
)

/ **
* This method initializes the toolbar for features on
* Management of cultural heritage.
*
* @ Return javax.swing.JToolBar - the toolbar for managing assets
* Cultural.
* /
Private JToolBar getBCToolbar ()
(
if (null == BCToolbar)
(
BCToolbar JToolBar = new ();
BCToolbar.setPreferredSize (new Dimension (1, 50));
BCToolbar.setFloatable (false);
BCToolbar.setOrientation (JToolBar.HORIZONTAL);
BCToolbar.setLayout (null);
BCToolbar.add (getBtnNuovoBC ());
BCToolbar.addSeparator ();
BCToolbar.add (getBtnModificaBC ());
BCToolbar.addSeparator ();
BCToolbar.add (getBtnSchedaBC ());
BCToolbar.addSeparator ();
BCToolbar.add (getBtnEliminaBC ());
)
BCToolbar return;
)

/ **
* This method initializes the button to insert a new good
* Cultural.
*
* @ Return javax.swing.JButton - the button for the insertion.
* /
private JButton getBtnNuovoBC ()
(
if (null == btnNuovoBC)
(
btnNuovoBC = new JButton ();
btnNuovoBC.setText ( &quot;&lt;html&gt; New &lt;br&gt; Cultural Heritage &lt;/ html&gt;&quot;);
btnNuovoBC.setBounds (5, 5, 140, 40);
btnNuovoBC.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;nuovoBC.png &quot;)));
btnNuovoBC.setName (btnNuovoBC &quot;);
btnNuovoBC.addMouseListener (bcHelp);
btnNuovoBC
. setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
btnNuovoBC.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent pEvent)
(
/ / Opens a form for entering a new good
/ / Cultural.
OpenOffice.org Messenger MSN Gaim (null, false);
)
));
)
btnNuovoBC return;
)

/ **
* This method initializes the button to access to details of property
* Cultural selected.
*
* @ Return javax.swing.JButton - the button for the card.
* /
private JButton getBtnSchedaBC ()
(
if (null == btnSchedaBC)
(
btnSchedaBC = new JButton ();
btnSchedaBC.setBounds (305, 5, 140, 40);
btnSchedaBC.setText ( &quot;&lt;html&gt; Card &lt;br&gt; Cultural Heritage &lt;/ html&gt;&quot;);
btnSchedaBC.setVerticalTextPosition (SwingConstants.TOP);
btnSchedaBC.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;scheda.png &quot;)));
btnSchedaBC.setEnabled (false);
btnSchedaBC.setCursor (Cursor
. getPredefinedCursor (Cursor.HAND_CURSOR));
btnSchedaBC.setName (btnSchedaBC &quot;);
btnSchedaBC.addMouseListener (bcHelp);
btnSchedaBC.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent pEvent)
(
int selectedRow = tableBC.getSelectedRow ();
BeanBeneCulturale todo = null;
TRY
(
todo = gestioneBC.ottieniBeneCulturale (TableModel
. getID (selectedRow));
/ / Open the card with the change of the cultural
/ / Disabled.
OpenOffice.org Messenger MSN Gaim (todo, false);
)
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;The card &lt;h3&gt; &lt;u&gt; request can not be loaded. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (JDesktopPane, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
)
)
));
)
btnSchedaBC return;
)

/ **
* This method initializes the button to access the modification of a
* Cultural.
*
* @ Return javax.swing.JButton - the button for the card.
* /
private JButton getBtnModificaBC ()
(
if (null == btnModificaBC)
(
btnModificaBC = new JButton ();
btnModificaBC.setBounds (155, 5, 140, 40);
btnModificaBC
. setText ( &quot;Edit Data &lt;html&gt; &lt;br&gt; Cultural Heritage &lt;/ html&gt;&quot;);
btnModificaBC.setEnabled (false);
btnModificaBC.setCursor (Cursor
. getPredefinedCursor (Cursor.HAND_CURSOR));
btnModificaBC.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;ModificaBC32.png &quot;)));
btnModificaBC.setName (btnModificaBC &quot;);
btnModificaBC.addMouseListener (bcHelp);
btnModificaBC.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent pEvent)
(
int selectedRow = tableBC.getSelectedRow ();
BeanBeneCulturale todo = null;
TRY
(
todo = gestioneBC.ottieniBeneCulturale (TableModel
. getID (selectedRow));
/ / Open the card with the change of the cultural
/ / Enabled.
OpenOffice.org Messenger MSN Gaim (todo, true);
)
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;The card &lt;h3&gt; &lt;u&gt; request can not be loaded. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (JDesktopPane, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
)

)
));
)
btnModificaBC return;
)

/ **
* This method initializes the button for the elimination of property
* Cultural selected.
*
* @ Return javax.swing.JButton - the delete button for.
* /
private JButton getBtnEliminaBC ()
(
if (null == btnEliminaBC)
(
btnEliminaBC = new JButton ();
btnEliminaBC.setBounds (455, 5, 140, 40);
btnEliminaBC.setText ( &quot;Delete &lt;html&gt; &lt;br&gt; Cultural Heritage &lt;/ html&gt;&quot;);
btnEliminaBC.setVerticalTextPosition (SwingConstants.TOP);
btnEliminaBC.setCursor (Cursor
. getPredefinedCursor (Cursor.HAND_CURSOR));
btnEliminaBC.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;EliminaBC32.png &quot;)));
btnEliminaBC.setCursor (Cursor
. getPredefinedCursor (Cursor.HAND_CURSOR));
btnEliminaBC.setEnabled (false);
btnEliminaBC.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent pEvent)
(
int selectedRow = tableBC.getSelectedRow ();
String name = (String) TableModel
. getValueAt (selectedRow, 0);

/ / Create the delete confirmation dialog.
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Are you sure you want to delete the cultural heritage&quot;
+ Name + &quot;?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;The deleted data can not be filled again.&quot;
SwingConstants.CENTER);
avviso.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Delete&quot;, &quot;Cancel&quot;);
int choice = JOptionPane.showInternalOptionDialog (
jContentPane, root, &quot;Confirm Delete&quot;,
JOptionPane.YES_NO_OPTION,
JOptionPane.QUESTION_MESSAGE,
new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;EliminaBC48.png&quot;)),
options, options [1]);
/ / If the deletion is confirmed, remove the well
/ / Cultural selected.
if (choice == JOptionPane.YES_OPTION)
(
TRY
(
gestioneBC.cancellaBeneCulturale (TableModel
. getID (selectedRow));
tableModel.removeSito (selectedRow);
JLabel confirm = new JLabel ( &quot;The cultural heritage&quot;
+ Name + &quot;was deleted.&quot;);
confirm.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JOptionPane.showInternalMessageDialog (jContentPane,
confirm, &quot;Cultural Heritage&quot;
JOptionPane.OK_OPTION, new ImageIcon (
getClass (). getResource (
Home.URL_IMAGES
+ &quot;Ok32.png &quot;)));
)
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; Delete operation request can not be completed. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass ()
. getResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (JDesktopPane, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
)
)
)
));
btnEliminaBC.setName (btnEliminaBC &quot;);
btnEliminaBC.addMouseListener (bcHelp);

)
btnEliminaBC return;

)

/ **
* This method initializes the right side of the interface.
*
* @ Return javax.swing.JPanel - the right pane of the interface.
* /
private JPanel getPannelloDestro ()
(
if (null == rightPanel)
(
rightPanel = new JPanel ();
rightPanel.setLayout (new BorderLayout ());
rightPanel.add (getHelpPanel (), BorderLayout.CENTER);
rightPanel.add (getSearchPanel (), BorderLayout.CENTER);
)
rightPanel return;
)

/ **
* This method initializes the panel for finding property
* Cultural.
*
* @ Return javax.swing.JPanel - the search panel.
* /
private JPanel getSearchPanel ()
(
if (null == searchPanel)
(
GridBagConstraints g = new GridBagConstraints ();
searchPanel = new JPanel (new GridBagLayout ());
searchPanel.setBorder (BorderFactory.createTitledBorder (
BorderFactory.createLineBorder (new Color (51, 102, 255), 3),
&quot;Search for Cultural Heritage&quot;
TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
g.anchor = GridBagConstraints.CENTER;
/ / Top - Left - Bottom - Right
g.insets = new Insets (5, 5, 5, 5);
g.gridwidth = 2;
g.gridx = 0;
g.gridy = 0;
searchPanel.add (new JLabel ( &quot;Name of Cultural Heritage&quot;), g);
g.gridy = 1;
nomeBC = new JTextField ();
nomeBC.setColumns (12);
nomeBC.setName (nomeBC &quot;);
nomeBC.addMouseListener (bcHelp);
searchPanel.add (nomeBC, g);
g.gridy = 2;
searchPanel.add (new JLabel ( &quot;Select search tags:&quot;), g);
g.fill = GridBagConstraints.VERTICAL;
g.gridy = 3;
g.weightx = 1.0;
g.weighty = 1.0;
g.insets = new Insets (5, 5, 10, 5);
pannelloTag = new TagPanel ();
pannelloTag.setPreferredSize (new Dimension (180, 40));
pannelloTag.setName (pannelloTag &quot;);
pannelloTag.addMouseListener (bcHelp);
searchPanel.add (pannelloTag, g);
g.insets = new Insets (5, 5, 5, 5);
g.weightx = 0;
g.weighty = 0;
g.gridwidth = 1;
g.gridy = 4;
g.fill = GridBagConstraints.NONE;
searchPanel.add (getBtnRicerca (), g);
g.gridx = 1;
searchPanel.add (getBtnAzzera (), g);

)
searchPanel return;
)

/ **
* This method initializes the panel containing the online help.
*
* @ Return javax.swing.JPanel - the panel of the guide.
* /
private JPanel getHelpPanel ()
(
if (null == helpPanel)
(
helpPanel = new JPanel ();
helpPanel.setLayout (new BorderLayout ());
helpPanel.setBorder (BorderFactory.createTitledBorder (BorderFactory
. createLineBorder (new Color (51, 102, 255), 3),
&quot;Help&quot;, TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
textGuida.setPreferredSize (new Dimension (100, 80));
textGuida.setContentType ( &quot;text / html&quot;);
textGuida
. setText ( &quot;&lt;html&gt; Move your mouse pointer over a control&quot;
+ &quot;Of interest to display the context-sensitive help. &lt;/ Html&gt;&quot;);
textGuida.setEditable (false);
textGuida.setOpaque (false);
helpPanel.add (textGuida, BorderLayout.CENTER);
)
helpPanel return;
)

/ **
* This method initializes the bread and table scroll of cultural heritage.
*
* @ Return javax.swing.JScrollPane - the scrollPane.
* /
private JScrollPane getJScrollPane ()
(
if (JScrollPane == null)
(
if (null == tableBC)
(
SitoTableModel = new TableModel ();
tableBC = new ScrollableTable (TableModel);
tableBC.setRowHeight (32);
tableBC.setDefaultRenderer (Double.class,
New MediaVotiRenderer ());
tableBC
. setDefaultRenderer (Punto3D.class,
New Punto3DRenderer ());
tableBC.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
tableBC.setSelectionForeground (Color.RED);
tableBC.setSelectionBackground (Color.white);
tableBC.setShowVerticalLines (false);
tableBC.setColumnSelectionAllowed (false);
tableBC.addMouseListener (bcHelp);
tableBC.setName (tableBC &quot;);
/ *
* SelectionListener - if a selected row, the buttons
* Tab, edit and delete are active. Otherwise, are
* Disabled.
* /
ListSelectionModel selectionModel = tableBC.getSelectionModel ();
selectionModel
. addListSelectionListener (new ListSelectionListener ()
(
public void ValueChanged (ListSelectionEvent pEvent)
(
if (tableBC.getSelectedRow ()! = -1)
(
btnEliminaBC.setEnabled (true);
btnSchedaBC.setEnabled (true);
btnModificaBC.setEnabled (true);
)
else
(
btnEliminaBC.setEnabled (false);
btnSchedaBC.setEnabled (false);
btnModificaBC.setEnabled (false);
)
)
));
/ *
* KeyListener &lt;ENTER&gt; - Details of the cultural selected.
* &lt;Backspace&gt; - Delete the selected cultural. &lt;space&gt; --
* Modify the cultural selected.
* /
tableBC.addKeyListener (new KeyAdapter ()
(
public void keyPressed (KeyEvent pEvent)
(
int keyCode = pEvent.getKeyCode ();
if (keyCode == KeyEvent.VK_ENTER)
(
btnSchedaBC.doClick ();
)
else if (keyCode == KeyEvent.VK_BACK_SPACE)
(
btnEliminaBC.doClick ();
)
else if (keyCode == KeyEvent.VK_SPACE)
(
btnModificaBC.doClick ();
)
)
));
)

JScrollPane = new JScrollPane (tableBC);
JScrollPane
. setHorizontalScrollBarPolicy (JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
JScrollPane
. setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
)
JScrollPane return;
)

/ **
* This method initializes the button to search for a good
* Cultural.
*
* @ Return javax.swing.JButton - the search button.
* /
private JButton getBtnRicerca ()
(
if (null == btnRicerca)
(
btnRicerca = new JButton ();
btnRicerca.setText ( &quot;Search&quot;);
btnRicerca.setPreferredSize (new Dimension (98, 26));
btnRicerca.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;Ricerca16.png &quot;)));
btnRicerca
. setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
btnRicerca.setName (btnRicerca &quot;);
btnRicerca.addMouseListener (bcHelp);
)
btnRicerca return;
)

/ **
* This method initializes the button to clear the form
* Cultural research.
*
* @ Return javax.swing.JButton - the button to reset the form.
* /
private JButton getBtnAzzera ()
(
if (null == btnAzzera)
(
btnAzzera = new JButton ();
btnAzzera.setText ( &quot;Clear&quot;);
btnAzzera.setHorizontalTextPosition (SwingConstants.LEADING);
btnAzzera.setPreferredSize (new Dimension (98, 26));
btnAzzera.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;Azzera16.png &quot;)));
btnAzzera.setName (btnAzzera &quot;);
btnAzzera.setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
btnAzzera.addMouseListener (bcHelp);
btnAzzera.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent arg0)
(
nomeBC.setText (&quot;&quot;);
pannelloTag.azzera ();
)

));
)
btnAzzera return;
)

/ **
* This method opens a tab of the selected cultural or opens the
* Window for entering a new cultural object.
*
* @ Param pbc BeanBeneCulturale - the bean of the cultural property of which
* Want to see the card.
* @ Param boolean pModifica --
* &lt;ul&gt;
* &lt;li&gt; &lt;i&gt; True &lt;/ i&gt; - indicates that you are making a change
* Data cultural.
* &lt;li&gt; &lt;i&gt; False &lt;/ i&gt; indicates that you are viewing the card
* The cultural property.
* /
private void OpenOffice.org Messenger MSN Gaim (BeanBeneCulturale PBC, boolean pModifica)
(
SchedaBC new;
if (pbc == null)
(
new = new SchedaBC (this);

)
else
(
for (int i = 0; i &lt;figli.size (); i + +)
(
SchedaBC current = figli.get (i);
if (pBc.getId () == corrente.getId ())
(
desktopManager.activateFrame (current);
return;
)
)
new = new SchedaBC (this, PBC, pModifica);
)
jDesktopPane.add (new, Integer.MAX_VALUE);
desktopManager.centerFrame (new);
nuova.setVisible (true);
figli.add (new);
)

/ **
* This method imports the cultural downloaded from the server in
* Table.
*
* @ Param boolean pRicerca
* &lt;ul&gt;
* &lt;li&gt; &lt;i&gt; True &lt;/ i&gt; - include the search parameters.
* &lt;li&gt; &lt;i&gt; False &lt;/ i&gt; otherwise.
* &lt;/ Ul&gt;
* /
private void caricaTabella (boolean pRicerca)
(
ArrayList &lt;BeanBeneCulturale&gt; Beniculturali = null;
TRY
(
if (pRicerca)
(

)
else
(
Beniculturali gestioneBC.ottieniBeniCulturali = ();
)
)
/ / If an error displays an error message.
catch (RemoteException e)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; The list of cultural goods has been loaded. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showInternalMessageDialog (this, error, &quot;Error!&quot;
JOptionPane.ERROR_MESSAGE, err);
)
finally
(
SitoTableModel = new TableModel (Beniculturali);
tableBC.setModel (TableModel);
organizzaRiga ();
)
)

/ **
* This method loads the tags available in the system and import them into
* Panel tag.
* /
private void caricaTags ()
(
ArrayList &lt;BeanTag&gt; beanTags = null;
TRY
(
beanTags = tag.ottieniTags ();
for (BeanTag b: beanTags)
(
pannelloTag.insertTag (b);
)
pannelloTag.repaint ();
)
/ / If an error panel tag remains blank.
catch (RemoteException e)
(
)
)

/ **
* This method sets the size of columns for the data assets
* Cultural.
* /
private void organizzaRiga ()
(
/ / Name
tableBC.getColumnModel (). GetColumn (0). setPreferredWidth (120);
/ / Address
tableBC.getColumnModel (). GetColumn (1). setPreferredWidth (120);
/ / Phone
tableBC.getColumnModel (). GetColumn (2). setPreferredWidth (80);
/ / Location
tableBC.getColumnModel (). GetColumn (3). setPreferredWidth (80);
/ / City
tableBC.getColumnModel (). GetColumn (4). setPreferredWidth (80);
/ / CAP
tableBC.getColumnModel (). GetColumn (5). setPreferredWidth (50);
/ / Test
tableBC.getColumnModel (). GetColumn (6). setPreferredWidth (30);
/ / RATINGS
tableBC.getColumnModel (). GetColumn (7). setPreferredWidth (80);
/ / POSGEO
tableBC.getColumnModel (). GetColumn (8). setPreferredWidth (120);
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_Categoria</id>
      <content>ï&gt;¿package unisa.gps.etour.control.fuzzy;

import java.io.Serializable;
import java.util.Hashtable;

public class Category implements Serializable
(

/ **
* Class that describes the characteristics of a Category
* Contains a Hashtable that represents the dictionary on
* The category that contains and for each term associated
* In the category values of frequency, distance and relevance.
* Provides methods to access, modify and auxiliary methods.
* /
private static final long serialVersionUID =-8652232946927756089L;
private String name; / / name of the category
private Hashtable &lt;string, float[]&gt; terms, / / list of terms and their frequencies and distance rilavanza

/ *
* Manufacturer:
* Get the category name as a parameter to create
* /
public Category (String Pnom)
(
name = Pnom;
terms &lt;String,float[]&gt; = new Hashtable ();
)

/ *
* Returns the output Hashtable containing the terms
* With the respective values of frequency, relevance and distance
* /
&lt;string, float[]&gt; getTermini public Hashtable ()
(
return terms;
)

/ *
* Returns the name of the output category
* /
public String getName ()
(
return name;
)

/ *
* Get the string as a parameter representing the term
* Of which you want to pick the values of frequency, range and bearing
* /
public float [] getval (pTermine String) throws NullPointerException
(
if (esisteTermine (pTermine))
return termini.get (pTermine);

return null;
)

/ *
* Agiunge an end to dizinario category
* /
public void addTermine (String pTermine)
(
termini.put (pTermine, new float [3]);
)

/ *
* Agiunge an end to dizinario category
* Seven also the values of frequency, distance and rilavanza
* /
public boolean addTermine (String pTermine, float [] pVal)
(
if ((pVal == null) | | (pTermine.equals (&quot;&quot;)))
return false;
termini.put (pTermine, pVal);

return true;
)

/ *
* Set the values for the period pTermine
* /
public boolean setValTermine (String pTermine, float [] pVal)
throws NullPointerException
(
if (esisteTermine (pTermine))
(
termini.put (pTermine, pVal);
return true;
)

return false;
)

public void setTermini (Hashtable &lt;String,float[]&gt; pTermini)
(
Term = pTermini;
)

/ *
* Returns True if the term is present in
* Dictionary of Category False otherwise
* /
public boolean esisteTermine (String pTermine)
(
TRY
(
float [] ret = termini.get (pTermine);
if (ret! = null)
return true;
)
catch (NullPointerException e)
(
return false;
)

return false;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_ControlServerLauncher</id>
      <content>ï&gt;¿package unisa.gps.etour.control;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import unisa.gps.etour.control.GestioneBeniCulturali.GestioneBeniCulturaliComune;
import unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune;

/ **
* This is the entry point of the control server. This class is responsible for
* Make the deployment of services on the RMI registry, thus rendering the
* Some services are available and usable.
*
* @ Author Michelangelo De Simone
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
public class ControlServerLauncher
(
/ **
* Entry point of ControlServer
*
* @ Param args The command line parameters
* /
public static void main (String [] args)
(
/ / *** WARNING *** *** WARNING *** EXPERIMENTAL EXPERIMENTAL

TRY
(
/ / GestioneBeniCulturaliComune is the class that implements the interface IGestioneBeniCulturaliComune,
/ / This interface on both the client, both the server
GestioneBeniCulturaliComune gBCC = new GestioneBeniCulturaliComune ();

/ / Here you create the stub for the registry, making it clear to the RMI system you are exporting the object on a gBCC
/ / Anonymous port
IGestioneBeniCulturaliComune stubGBCC = (IGestioneBeniCulturaliComune) UnicastRemoteObject.exportObject (gBCC, 0);

/ / There shall call the register (default is on localhost) and &quot;bind&quot; (alloy)
Registry registry = LocateRegistry.getRegistry ();
registry.bind (IGestioneBeniCulturaliComune &quot;stubGBCC);
)
catch (Exception e)
(
System.out.println ( &quot;Exception:&quot; + e.getLocalizedMessage ());
)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_ControlloBeniCulturali</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneBeniCulturali;

import java.util.Date;
import unisa.gps.etour.bean.BeanBeneCulturale;

/ **
* This class has the task of checking the data of a cultural object.
* Various consistency checks are performed, such as length of strings,
* Null reference, dynamic types incorrect.
*
* @ Author Michelangelo De Simone
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
public class ControlloBeniCulturali
(
/ **
*
* Please consistency check by calling the appropriate methods.
* This method wrappa &quot;all other methods of control with a single call.
* At the first false value the flow is interrupted.
*
* @ Param bean The PBC of the cultural object to be inspected
* @ Return boolean The result of the check: true if OK, false otherwise
* /
public static boolean controllaDatiBeneCulturale (BeanBeneCulturale PBC)
(
/ / This method checks the input parameter in the cases
/ / Null reference or dynamic Wrong
if (PBC == null | |! (PBC instanceof BeanBeneCulturale))
return false;

/ / This method checks if the ID passed as a parameter BeanBeneCulturale
/ / Is valid or not
if (! controllaIdBeneCulturale (pBC.getId ()))
return false;

/ / This method checks the objects contained in BeanBeneCulturale Date
/ / As such, a check is made null and reference checks
/ / On the dynamic.
if (! controllaDateBeneCulturale (PBC))
return false;

/ / This method checks all the fields in BeanBeneCulturale, research
/ / Any null references
if (! controllaDatiNulli (PBC))
return false;

/ / Check the correct length of string, in this case the CAP must
/ / To force of circumstances than five digits, while the province of two.
/ / TODO: To be completed
if (pBC.getCap (). length ()! = 5 | | pBC.getProvincia (). length ()! = 2)
return false;

return true;
)

/ **
*
* Check for null data in a bean cultural property.
* The check is performed on all fields of the bean.
*
* @ Param bean The PBC cultural property to be checked
* @ Return boolean The result of the check: true if there are no null references, false otherwise
* /
public static boolean controllaDatiNulli (BeanBeneCulturale PBC)
(
if (pBC.getCap () == null | | pBC.getCitta () == null | | pBC.getDescrizione () == null | | pBC.getGiornoChiusura () == null | |
pBC.getLocalita () == null | | pBC.getNome () == null | | pBC.getOrarioApertura () == null | |
pBC.getOrarioChiusura () == null | | pBC.getProvincia () == null | | pBC.getTelefono () == null | | pBC.getVia () == null)
return false;

return true;
)

/ **
*
* Check the consistency of dates within this BeanBeneCulturale.
* The check is performed only on objects, while not carried out
* No validity check 'on a date as a cultural object may also have
* Dates later than today (see for example on open exhibitions).
*
* @ Param The PBC BeanBeneCulturale which check the dates
* @ Return boolean The result of the check: true if the dates have consistency; false otherwise
* /
public static boolean controllaDateBeneCulturale (BeanBeneCulturale PBC)
(
if (pBC.getOrarioApertura () == null | |! (pBC.getOrarioApertura () instanceof Date) | |
pBC.getOrarioChiusura () == null | |! (pBC.getOrarioChiusura () instanceof Date))
return false;

return true;
)

/ **
*
* Check the ID of BeanBeneCulturale
*
* @ Param pId Id BeanBeneCulturale be checked
* @ Return boolean The result of the check: true if the ID is correct, false otherwise
* /
public static boolean controllaIdBeneCulturale (int pid)
(
return (pid&gt; 0);
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_ControlloDati</id>
      <content>ï&gt;¿package unisa.gps.etour.util;

import java.awt.image.BufferedImage;
import java.util.Date;

import javax.swing.ImageIcon;

import unisa.gps.etour.bean.BeanBanner;
import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanConvenzione;
import unisa.gps.etour.bean.BeanMenu;
import unisa.gps.etour.bean.BeanNews;
import unisa.gps.etour.bean.BeanOperatorePuntoDiRistoro;
import unisa.gps.etour.bean.BeanPiatto;
import unisa.gps.etour.bean.BeanPreferenzaDiRicerca;
import unisa.gps.etour.bean.BeanPreferenzeGeneriche;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.bean.BeanVisitaPR;

/ **
* Class for managing the control of the correctness of the strings
*
* @ Author Joseph Penna
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class ControlloDati
(

private static final String letter = &quot;abcdefghijklmnopqrstuvxywz&quot;
+ &quot;ABCDEFGHIJKLMNOPQRSTUVXYWZ&quot;;
private final static String numbers = &quot;0123456789&quot;;

public final static int max_length = 64;

/ **
* Static method for verifying correctness of a string
*
* @ Param string to check pStringa
* @ Param letterePermesse Boolean: True if it is allowed to be present
* Letters in the string, False otherwise
* @ Param numeriPermessi Boolean: True if it is allowed to be present
* Numbers in the string, False otherwise
CaratteriPermessi * @ param string containing all characters
* Allowed in the string
* @ Param string contentente all caratteriNecessari characters
* Must be present in the string
* @ Param numeroCaratteriMin integer representing the minimum number of
* Characters allowed in string
* @ Param numeroCaratteriMax integer representing the maximum number of
* Characters allowed in string
* @ Return Boolean: True if the witch meets the conditions, False
* Otherwise
* /
public static boolean controllaStringa (String pStringa,
letterePermesse boolean, boolean numeriPermessi,
CaratteriPermessi String, String caratteriNecessari,
numeroCaratteriMin int, int numeroCaratteriMax)
(
Chance pStringa == null: the function returns false
if (null == pStringa)
return false;

int lunghezzaStringa = pStringa.length ();
CarattereCorrente character;

/ / Check the length of the string
if (lunghezzaStringa &lt;numeroCaratteriMin
| | LunghezzaStringa&gt; numeroCaratteriMax)
(
return false;
)

/ / Check the presence of the necessary characters in the string
if (caratteriNecessari = null)
(
if (! caratteriNecessari.equals (&quot;&quot;))
for (int i = 0; i &lt;caratteriNecessari.length (); i + +)
(
carattereCorrente = caratteriNecessari.charAt (i);
if (! pStringa.contains (carattereCorrente.toString ()))
(
return false;
)
)
)

/ / Create the string containing all characters allowed
String stringaCaratteriPermessi = caratteriPermessi
CaratteriNecessari + + (letterePermesse? Letters: &quot;&quot;)
+ (NumeriPermessi? Numbers: &quot;&quot;);

/ / Loop for the inspection of the characters of the string to check
for (int i = 0; i &lt;lunghezzaStringa i + +)
(

carattereCorrente = pStringa.charAt (i);

/ / Condition: If the character you are watching is not
/ / In the string of characters allowed
/ / The string is incorrect and out of the loop.
if (! (stringaCaratteriPermessi.contains (carattereCorrente
. toString ())))
(

return false;
)
)

return true;
)

public static String correggiStringa (String pStringa,
letterePermesse boolean, boolean numeriPermessi,
CaratteriPermessi String, int numeroCaratteriMax)
(

if (null == pStringa)
return null;

String stringaCaratteriPermessi = caratteriPermessi
+ (LetterePermesse? Letters: &quot;&quot;)
+ (NumeriPermessi? Numbers: &quot;&quot;);

CarattereCorrente character;
int lunghezzaStringa = pStringa.length ();
int i = 0;

while (i &lt;lunghezzaStringa)
(
carattereCorrente = pStringa.charAt (i);

if (! (stringaCaratteriPermessi.contains (carattereCorrente
. toString ())))
(
pStringa = pStringa.replaceAll ( &quot;\ \&quot;
CarattereCorrente.toString + (), &quot;&quot;);
lunghezzaStringa = pStringa.length ();

)
else
i + +;
)
if (lunghezzaStringa&gt; numeroCaratteriMax)
(

pStringa = pStringa.substring (0, numeroCaratteriMax);
)

pStringa return;
)

public static boolean controllaData (String pData)
(
/ / Still I have no idea how I will spend the time
return true;
)

public static boolean controllaDate (Date pDataInizio, Date pDataFine)
(

boolean back = false;
if (pDataInizio! = null &amp; &amp; pDataFine = null)
(

if (pDataInizio.before (pDataFine))
return = true;
)

return receipt;
)

public static boolean checkBeanTurista (BeanTurista pTurista)
(
if (pTurista = null &amp; &amp; pTurista instanceof BeanTurista)
return true;
return false;
)

public static boolean checkBeanPreferenzaDiRicerca (
BeanPreferenzaDiRicerca pPreferenzaDiRicerca)
(
if (pPreferenzaDiRicerca = null
&amp; &amp; PPreferenzaDiRicerca instanceof BeanPreferenzaDiRicerca)
return true;
return true;
)

public static boolean checkBeanPreferenzeGeneriche (
BeanPreferenzeGeneriche pPreferenzeGeneriche)
(
if (pPreferenzeGeneriche = null
&amp; &amp; PPreferenzeGeneriche instanceof BeanPreferenzeGeneriche)
return true;
return false;
)

public static boolean checkBeanBeneCulturale (
BeanBeneCulturale pBeneCulturale)
(
if (pBeneCulturale = null
&amp; &amp; PBeneCulturale instanceof BeanBeneCulturale)
return true;
return false;
)

public static boolean checkBeanPuntoDiRistoto (
BeanPuntoDiRistoro pPuntoDiRistoro)
(
if (pPuntoDiRistoro = null
&amp; &amp; PPuntoDiRistoro instanceof BeanPuntoDiRistoro)
return true;
return false;
)

public static boolean checkBeanOperatorePuntoDiRistoro (
BeanOperatorePuntoDiRistoro pOperaotorePuntoDiRistoro)
(
if (pOperaotorePuntoDiRistoro = null
&amp; &amp; POperaotorePuntoDiRistoro instanceof BeanOperatorePuntoDiRistoro)
return true;
return false;
)

/ **
* Please formal control and consistency on the data of the banner
* Content in the bean passed by parameter.
*
* @ Author Fabio Palladino
* @ Param pBanner bean contains the data of the banner.
* @ Return True if the data of the banner is correct false otherwise.
* /
public static boolean checkBeanBanner (BeanBanner pBanner)
(
toReturn boolean = false;

if (pBanner = null &amp; &amp; pBanner instanceof BeanBanner)
(
toReturn = (pBanner.getId ()&gt; 0 &amp; &amp; pBanner.getPercorsoFile ()! = &quot;&quot; &amp; &amp; pBanner
. getIdPuntoDiRistoro ()&gt; 0);
)

toReturn return;
)

/ **
* Method which controls the image contained in the object ImageIcon past
* Per parameter.
*
* @ Author Fabio Palladino
* @ Param image ImageIcon object containing the image to be checked
* @ Return true if the image contained in the object is an instance ImageIcon
* Class BufferedImage.
* /
public static boolean checkImmagine (ImageIcon image)
(

if (image! = null)
(
return (immagine.getImage () instanceof BufferedImage);
)
return false;
)

/ **
* Function that checks the data in a news;
*
* @ Author Fabio Palladino
* @ Param bean Pnews containing details of a news.
* @ Return
* /
public static boolean checkBeanNews (BeanNews Pnews)
(
toReturn boolean = false;

/ * Check the validity of the general method parameter * /
if (Pnews = null)
(

PNews.getDataPubblicazione Date dataPubb = () / / Date of
/ / Publishing
Date dataScad = pNews.getDataScadenza () / / Due Date
PNews.getNews String news = (), / / Text of News
int priority = pNews.getPriorita ();

/ * Checking the invalidity of the fields * /
if (dataPubb! dataScad = null &amp; &amp;! = null &amp; &amp; news = null)
(
/ * Check the consistency of the dates * /
toReturn = dataPubb.before (dataScad);
/ * Check that the text is not empty * /
toReturn = toReturn &amp; &amp; (news! = &quot;&quot;);
/ * Check that the ID is greater than 0 * /
toReturn = toReturn &amp; &amp; (pNews.getId ()&gt; 0);
/ * Check the priority value * /
toReturn = toReturn
&amp; &amp; (Priority &lt;= CostantiGlobali.MAX_PRIORITY_NEWS)
&amp; &amp; (Priority&gt; = CostantiGlobali.MIN_PRIORITY_NEWS);
)
)
toReturn return;
)

public static boolean checkBeanTag (BeanTag ptagi)
(
if (ptagi! = null &amp; &amp; instanceof ptagi BeanTag)
return true;
return false;
)

public static boolean checkBeanConvenzione (BeanConvenzione pConvenzione)
(
if (pConvenzione = null &amp; &amp; pConvenzione instanceof BeanConvenzione)
return true;
return false;
)

public static boolean checkBeanMenu (BeanMenu pMenu)
(
if (pMenu = null &amp; &amp; instanceof pMenu BeanMenu)
return true;
return false;
)

public static boolean checkBeanPiatto (BeanPiatto pPiatto)
(
if (pPiatto = null &amp; &amp; pPiatto instanceof BeanPiatto)
return true;
return false;
)

public static boolean checkBeanVisitaBC (BeanVisitaBC pVisitaBC)
(
if (pVisitaBC = null &amp; &amp; pVisitaBC instanceof BeanVisitaBC)
return true;
return false;
)

public static boolean checkBeanVisitaPR (BeanVisitaPR pVisitaPR)
(
if (pVisitaPR = null &amp; &amp; pVisitaPR instanceof BeanVisitaPR)
return true;
return false;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_ControlloDatiAdvertisement</id>
      <content>ï&gt;¿/ **
* Class that contains static methods that perform
* Consistency checks on the data bean banner
* And news.
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
package com.trapan.spg.control.GestioneAdvertisement;

import java.util.Date;

import com.trapan.spg.bean.BeanBanner;
import com.trapan.spg.bean.BeanNews;

public class ControlloDatiAdvertisement
(
/ **
* Please formal control and consistency on
* Data content of the banner in the bean passed by parameter.
* @ Param pBanner bean contains the data of the banner.
* @ Return
* /
public static boolean controlloBanner (BeanBanner pBanner) (
toReturn boolean = false;

if (pBanner = null) (
toReturn = (pBanner.getId ()&gt; 0 &amp; &amp; &amp; &amp; pBanner.getPercorsoFile ()!=&quot;&quot;
pBanner.getIdPuntoDiRistoro ()&gt; 0);
)

toReturn return;
)
/ **
* Method that performs consistency checks and
* Correctness of the information contained in the bean past
* Per parameter, in particular check that the dates
* Publication and expiration of the news are consistent,
* Or that the second is the later.
*
* @ Param Pnews bean containing data news
* @ Return Returns true if the bean contains consistent data
* /
public static boolean controlloNews (BeanNews Pnews) (
toReturn boolean = false;

/ * Check the validity of the general method parameter * /
if (Pnews = null) (

Date dataPubb = pNews.getDataPubblicazione () / / Released
Date dataScad = pNews.getDataScadenza () / / Due Date
PNews.getNews String news = (), / / Text of News

/ * Checking the invalidity of the fields * /
if (dataPubb! dataScad = null &amp; &amp;! = null &amp; &amp; news = null) (
/ * Check the consistency of the dates * /
toReturn = dataPubb.before (dataScad);

/ * Check that the text is not empty * /
toReturn = toReturn &amp; &amp; (news! = &quot;&quot;);

/ * Check that the ID is greater than 0 * /
toReturn = toReturn &amp; &amp; (pNews.getId ()&gt; 0);

/ * Check the priority value * /
)

)

toReturn return;

)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_ControlloVisiteBeniCulturali</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneBeniCulturali;

import unisa.gps.etour.bean.BeanVisitaBC;

/ **
* This class has the task of monitoring data from a cultural visit.
* Various consistency checks are performed, such as length of strings,
* Null reference, dynamic types incorrect.
*
* @ Author Michelangelo De Simone
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
public class ControlloVisiteBeniCulturali
(
/ **
*
* Please consistency check by calling the appropriate methods
*
* @ Param bean The pVBC cultural visit to check
* @ Return boolean The result of the check: true if OK, false otherwise
* /
public static boolean controllaDatiVisitaBeneCulturale (BeanVisitaBC pVBC)
(
/ / If the bean is null
if (pVBC == null | |! (pVBC instanceof BeanVisitaBC))
return false;

/ / Check the ID of a cultural visit
/ / And the id of its tourist
if (! (pVBC.getIdBeneCulturale ()&gt; 0) | |! (pVBC.getIdTurista ()&gt; 0))
return false;

/ / Check the vote (of course ratings are accepted only between 1 and 5
if (! (pVBC.getVoto ()&gt; = 1 &amp; &amp; pVBC.getVoto () &lt;= 5))
return false;

/ / Check for null references in the bean
if (! controllaDatiNulli (pVBC))
return false;

/ / Check the correct length of string
if (! (pVBC.getCommento (). length ()&gt; 0))
return false;

return true;
)

/ **
*
* Check for null data in a bean cultural visit
*
* @ Param bean The PBC cultural visit to check
* @ Return boolean The result of the check: true if there are no null references, false otherwise
* /
public static boolean controllaDatiNulli (BeanVisitaBC PBC)
(
/ / Check the nullity of the fields of feedback
if (pBC.getCommento () == null | | pBC.getDataVisita () == null)
return false;

return true;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_CostantiGlobali</id>
      <content>ï&gt;¿package unisa.gps.etour.util;

import java.io.File;

/ **
* Class that contains the constants of the environmental system.
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
public class CostantiGlobali
(
/ ** Highest precedence of news. * /
public static final int MAX_PRIORITY_NEWS = 5;
/ ** Priority least one news. * /
public static final int MIN_PRIORITY_NEWS = 1;
/ ** Maximum number of news on the machine. * /
public static final int MAX_NEWS_ATTIVE = 10;
/ ** Path to directory containing the images
* Banners stored on the server. * /
public static final String SERVER_IMAGE_PATH = &quot;c:&quot;
File.separator + + &quot;ImmaginiBanner&quot; + file.separator;
/ ** URL of the server for RMI calls * /
public static final String server_url = &quot;localhost /&quot;;
/ ** Milliseconds of 30 days * /
public static final long TRENTA_GIORNI = 2592000000L;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBBanner</id>
      <content>/ **
* Stubs for dynamic class DBBanner. Is used for testing
* Class package GestioneAdvertisement.
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
package unisa.gps.etour.control.GestioneAdvertisement.test.stubs;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanBanner;
import unisa.gps.etour.repository.IDBBanner;

public class DBBanner implements IDBBanner
(

private static int NUM_TEST = 0;

public boolean cancellaBanner (int pIdBanner) throws SQLException
(
if (NUM_TEST == 5)
(
throw new SQLException ();
)
else
(
return true;
)
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBBanner # inserisciBanner (unisa.gps.etour.bean.BeanBanner)
* /
public boolean inserisciBanner (BeanBanner pBanner) throws SQLException
(
if (NUM_TEST == 1 | | NUM_TEST == 2)
(
return true;
) else
(
return false;
)
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBBanner # modificaBanner (unisa.gps.etour.bean.BeanBanner)
* /
public boolean modificaBanner (BeanBanner pBanner) throws SQLException
(
return true;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBBanner # ottieniBanner (int)
* /
&lt;BeanBanner&gt; ottieniBanner public ArrayList (int pIdPuntoDiRistoro)
throws SQLException
(
&lt;BeanBanner&gt; ToReturn ArrayList &lt;BeanBanner&gt; = new ArrayList ();

if (NUM_TEST == 1 | | NUM_TEST == 2)
(
/ * Must return an ArrayList with 3 elements * /
toReturn.add (new BeanBanner ());
toReturn.add (new BeanBanner ());
toReturn.add (new BeanBanner ());
toReturn return;
)
else if (NUM_TEST == 4)
(
toReturn.add (new BeanBanner (3, &quot;c: \ \ ProvaBannerInserimento.jpg&quot;, 55));
toReturn.add (new BeanBanner (4, &quot;c: \ \ ProvaBannerInserimento.jpg&quot;, 55));
toReturn.add (new BeanBanner (5, &quot;c: \ \ ProvaBannerInserimento.jpg&quot;, 55));
toReturn.add (new BeanBanner (5, &quot;c: \ \ ProvaBannerInserimento.jpg&quot;, 55));
toReturn return;
) else
(
return null;
)
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBBanner # ottieniBannerDaID (int)
* /
public BeanBanner ottieniBannerDaID (int pIdBanner) throws SQLException
(
if (NUM_TEST == 7)
(
return null;
)
else
(
return new BeanBanner (55, &quot;c: / / ProvaBanner.jpg&quot;, 3);
)
)

public static void setNUM_TEST (int num_test)
(
NUM_TEST = num_test;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBBeneCulturale</id>
      <content>package unisa.gps.etour.control.GestioneBeniCulturali.test.stub;

import java.sql.SQLException;
import java.util.ArrayList;
import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.repository.IDBBeneCulturale;
import unisa.gps.etour.util.Punto3D;

public class DBBeneCulturale implements IDBBeneCulturale
(
private ArrayList &lt;BeanBeneCulturale&gt; b;

public DBBeneCulturale ()
(
b = new ArrayList &lt;BeanBeneCulturale&gt; (0);
)

public boolean cancellaBeneCulturale (int pIdBene) throws SQLException
(
boolean res = false;

for (int i = 0; i &lt;b.size (); i + +)
if (b.get (i). getId () == pIdBene)
(
b.remove (i);
res = true;
)

return res;
)

public boolean inserisciBeneCulturale (BeanBeneCulturale pBene)
throws SQLException
(
return (b.add (pBene));
)

public boolean modificaBeneCulturale (BeanBeneCulturale pBene)
throws SQLException
(
boolean res = false;

for (int i = 0; i &lt;b.size (); i + +)
if (b.get (i). getId () == pBene.getId ())
(
b.set (i, pBene);
return true;
)

return res;
)

public BeanBeneCulturale ottieniBeneCulturale (int pid) throws SQLException
(
BeanBeneCulturale res = null;

for (int i = 0; i &lt;b.size (); i + +)
if (b.get (i). getId () == pid)
res = b.get (i);

return res;
)

&lt;BeanBeneCulturale&gt; ottieniListaBC public ArrayList () throws SQLException
(
return b;
)

public int ottieniNumeroElementiRicerca (String pKeyword,
ArrayList &lt;BeanTag&gt; pTags, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException
(
/ / TODO Auto-generated method stub
return 0;
)

public int ottieniNumeroElementiRicercaAvanzata (int pIdTurista,
PKeyword String, ArrayList &lt;BeanTag&gt; pTags, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException
(
/ / TODO Auto-generated method stub
return 0;
)

public ArrayList &lt;BeanBeneCulturale&gt; search (String pKeyword,
ArrayList &lt;BeanTag&gt; pTags, int pNumPagina,
int pNumeroElementiPerPagina, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException
(
/ / TODO Auto-generated method stub
return null;
)

&lt;BeanBeneCulturale&gt; ricercaAvanzata public ArrayList (int pIdTurista,
PKeyword String, ArrayList &lt;BeanTag&gt; pTags, int pNumPagina,
int pNumeroElementiPerPagina, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException
(
/ / TODO Auto-generated method stub
return null;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBConnessionePool</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/ **
* Class that creates the connection to the database using JDBC and
* Allows you to query both read and edit the contents of
* Database. E 'implemented to provide a pool of connections to
* Provide a connection to each thread.
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class DBConnessionePool
(
private final static String driver = &quot;com.mysql.jdbc.Driver&quot;;
private final static String urlConnessione = &quot;jdbc: mysql: / / localhost / eTour? user = &amp; password = mauro mauro&quot;;
private static List &lt;Connection&gt; connessioniLibere;

/ * Private constructor that initiates the connection to the database * /

/ *
* Static initialization block is used to load the driver
* Memory
* /
static
(
connessioniLibere = &lt;Connection&gt; new ArrayList ();
TRY
(
Class.forName (driver);
)
catch (ClassNotFoundException e)
(
e.printStackTrace ();
)
)

/ **
* Method to get the connection to the server.
*
* @ Return Returns the database connection
* @ Throws SQLException
* /
public static synchronized Connection ottieniConnessione ()
throws SQLException
(
Connection connection;

if (! connessioniLibere.isEmpty ())
(
/ / Extract a connection from the free db connection queue
connection = connessioniLibere.get (0);
DBConnessionePool.connessioniLibere.remove (0);

TRY
(
/ / If the connection is not valid, a new connection will be
/ / Analyzed
if (connection.isClosed ())
DBConnessionePool.ottieniConnessione connection = ();
)
catch (SQLException e)
(
DBConnessionePool.ottieniConnessione connection = ();
)
)
else
/ / The free db connection queue is empty, so a new connection will
/ / Be created
DBConnessionePool.creaDBConnessione connection = ();

return connection;
)

public static void rilasciaConnessione (Connection pReleasedConnection)
(
/ / Add the connection to the free db connection queue
DBConnessionePool.connessioniLibere.add (pReleasedConnection);
)

private static Connection creaDBConnessione () throws SQLException
(
Connection nuovaConnessione = null;
/ / Create a new db connection using the db properties
nuovaConnessione = DriverManager.getConnection (urlConnessione);
nuovaConnessione.setAutoCommit (true);
nuovaConnessione return;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBConvenzione</id>
      <content>/ **
Attribute_Definition
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
package unisa.gps.etour.control.GestioneAdvertisement.test.stubs;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;

import unisa.gps.etour.bean.BeanConvenzione;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.repository.IDBConvenzione;

public class DBConvenzione implements IDBConvenzione
(
private static int NUM_TEST = 1;
/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBConvenzione # cancellaConvenzione (int)
* /
public boolean cancellaConvenzione (int pIdConvenzione) throws SQLException
(
/ / TODO Auto-generated method stub
return false;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBConvenzione # getStoricoConvenzione (int)
* /
&lt;BeanConvenzione&gt; ottieniStoricoConvenzione public ArrayList (int idPuntoDiRistoro)
throws SQLException
(
/ / TODO Auto-generated method stub
return null;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBConvenzione # inserisciConvenzione (unisa.gps.etour.bean.BeanConvenzione)
* /
public boolean inserisciConvenzione (BeanConvenzione pConvenzione)
throws SQLException
(
/ / TODO Auto-generated method stub
return false;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBConvenzione # modificaConvenzione (unisa.gps.etour.bean.BeanConvenzione)
* /
public boolean modificaConvenzione (BeanConvenzione pConvenzione)
throws SQLException
(
/ / TODO Auto-generated method stub
return false;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBConvenzione # ottieniConvezioneAttiva (int)
* /
public BeanConvenzione ottieniConvezioneAttiva (int pIdPuntoDiRistoro)
throws SQLException
(
BeanConvenzione Convention BeanConvenzione = new ();
convenzione.setAttiva (true);
convenzione.setDataFine (new Date ());
convenzione.setDataInizio (new Date ());
convenzione.setId (12);
convenzione.setIdPuntoDiRistoro (3);
convenzione.setPrezzo (100);

if (NUM_TEST == 1)
(
/ * Test banners allowed * /
convenzione.setMaxBanner (4);
return agreement;
)
else if (NUM_TEST == 2)
(
/ * Test banners not allowed * /
convenzione.setMaxBanner (3);
return agreement;
) else (
return null;
)
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBConvenzione # ottieniListaConvenzioneAttivaPR ()
* /
&lt;BeanPuntoDiRistoro&gt; ottieniListaConvenzioneAttivaPR public ArrayList ()
throws SQLException
(
/ / TODO Auto-generated method stub
return null;
)

public static void setNUM_TEST (int num_test)
(
NUM_TEST = num_test;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBMenu</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanMenu;

/ **
* Class that implements the interface Menu
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class DBMenu implements IDBMenu
(
/ / Empty constructor
public DBMenu ()
(

)

public boolean cancellaMenu (int pIdMenu) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query cancellation
String query = &quot;DELETE FROM menu WHERE id =&quot; + pIdMenu;
/ / You run the query Cancellation
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Is always done and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

public boolean inserisciMenu (BeanMenu pMenu) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the insertion
String query = &quot;INSERT INTO menu (Day, IdPuntoDiRistoro) VALUES ( '&quot;
+ PMenu.getGiorno ()
+ &quot; ',&quot;
+ PMenu.getIdPuntoDiRistoro ()
+ &quot;)&quot;;
/ / You run the insert query
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean modificaMenu (BeanMenu pMenu) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for amendment
String query = &quot;UPDATE menu SET&quot; + &quot;Date = '&quot;
PMenu.getGiorno + () + &quot; 'WHERE Id =&quot; + pMenu.getId ();
/ / You run the query for Change
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Is always done and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

&lt;BeanMenu&gt; ottieniMenu public ArrayList (int pIdPuntoDiRistoro)
throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to extract the list of Menu
String query = &quot;SELECT * FROM menu WHERE IdPuntoDiRistoro =&quot;
+ PIdPuntoDiRistoro;
/ / The query is executed
result = stat.executeQuery (query);
/ / List that will contain all BeanMenu obtained
&lt;BeanMenu&gt; ArrayList list = new ArrayList &lt;BeanMenu&gt; ();
/ / We extract the results from the result set and moves in
/ / List
/ / To be returned
while (result.next ())
(
/ / Fill the list
list
. add (new BeanMenu (result.getInt ( &quot;Id&quot;), result
. getString ( &quot;Day&quot;), result
. getInt ( &quot;IdPuntoDiRistoro &quot;)));
)
/ / Return the list
return list;
)
/ / Is always done and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

public BeanMenu ottieniMenuDelGiorno (int pIdPuntoDiRistoro, String pGiorno)
throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the extraction of Daily Menu
String query = &quot;SELECT * FROM menu WHERE IdPuntoDiRistoro =&quot;
PIdPuntoDiRistoro + + &quot;AND day = '&quot; + pGiorno + &quot;'&quot;;
/ / The query is executed
result = stat.executeQuery (query);
/ / Get the bean of the daily menu based on the ID of the point of
/ / Dining and a day
BeanMenu beanTemp = null;
if (result.next ())
(
/ / Create the proceeds Bean
beanTemp = new BeanMenu (result.getInt ( &quot;Id&quot;), result
. getString ( &quot;Day&quot;), result.getInt ( &quot;IdPuntoDiRistoro&quot;));
)
/ / Return the Bean obtained
beanTemp return;
)
/ / Is always done and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBNews</id>
      <content>/ **
* Stubs used for testing the class GestioneAdvertisementAgenzia
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
package unisa.gps.etour.control.GestioneAdvertisement.test.stubs;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanNews;
import unisa.gps.etour.repository.IDBNews;
import unisa.gps.etour.util.CostantiGlobali;

public class DBNews implements IDBNews
(
/ ** Static field that stores the number of test * /
private static int NUM_TEST = 0;

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBNews # cancellaNews (int)
* /
public boolean cancellaNews (int pIdNews) throws SQLException
(
if (NUM_TEST == 1) (
return true;
) else if (NUM_TEST == 2) (
throw new SQLException ();
)
return true;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBNews # inserisciNews (unisa.gps.etour.bean.BeanNews)
* /
public boolean inserisciNews (BeanNews Pnews) throws SQLException
(
if (NUM_TEST == 7) (
return false;
) else (
return true;
)
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBNews # modificaNews (unisa.gps.etour.bean.BeanNews)
* /
public boolean modificaNews (BeanNews Pnews) throws SQLException
(
return true;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBNews # ottieniNews ()
* /
&lt;BeanNews&gt; ottieniNews public ArrayList () throws SQLException
(
&lt;BeanNews&gt; ToReturn ArrayList &lt;BeanNews&gt; = new ArrayList ();

if (NUM_TEST == 5) (
for (int i = 1; i &lt;= CostantiGlobali.MAX_NEWS_ATTIVE i + +) (
toReturn.add (new BeanNews ());
)
toReturn return;
) else (
toReturn.add (new BeanNews ());
toReturn return;
)
)

/ **
* Set the number of tests in progress
*
* @ Param num_test
* /
public static void setNUM_TEST (int num_test)
(
NUM_TEST = num_test;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBOperatoreAgenzia</id>
      <content>/ **
* Class that implements the Agency's Operator
*
* @ Author Joseph Martone
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import unisa.gps.etour.bean.BeanOperatoreAgenzia;

public class DBOperatoreAgenzia implements IDBOperatoreAgenzia
(

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBOperatoreAgenzia # ottieniOperatoreAgenzia (int)
* /
public BeanOperatoreAgenzia ottieniOperatoreAgenzia (String pUsername)
throws SQLException
(
/ / Connect to database
Connection conn = null;
/ / Statement for running queries
Statement stat = null;
/ / Resut set where the output of the query is inserted
ResultSet result = null;
/ / Try block which performs the query and the database connection
TRY
(
/ / You get the database connection from the pool
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the statement
stat = conn.createStatement ();
/ / Query
String query = &quot;SELECT * FROM operatoreagenzia WHERE Username = '&quot;
PUsername + + &quot; '&quot;;
result = stat.executeQuery (query);
Or BeanOperatoreAgenzia = null;
if (result.next ())
(
/ / Build the bean when the query returns a
/ / Value
/ / Otherwise will return null
or BeanOperatoreAgenzia = new ();
oa.setId (result.getInt ( &quot;Id&quot;));
oa.setUsername (result.getString ( &quot;Username&quot;));
oa.setNome (result.getString ( &quot;Name&quot;));
oa.setCognome (result.getString ( &quot;Name&quot;));
oa.setPassword (result.getString ( &quot;Password&quot;));
)
or return;
)
/ / Finally block that contains the instructions to close the connections
/ / Hyenas run in any case
finally
(
/ / This closes the result set only if and 'the query was made
if (result! = null)
(
result.close ();
)
/ / This closes the if statement and 'opened
if (stat = null)
(
stat.close ();
)
/ / It returns the connection to the pool if and 'opened
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.repository.IDBOperatoreAgenzia # modificaPassword (java.lang.String)
* /
public boolean modificaPassword (BeanOperatoreAgenzia poa) throws SQLException
(
/ / Connect to database
Connection conn = null;
/ / Statement for running queries
Statement stat = null;
/ / Try block which performs the query and the database connection
TRY
(
/ / You get the database connection from the pool
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the statement
stat = conn.createStatement ();

/ / Query
String query = &quot;UPDATE operatoreagenzia SET&quot; + &quot;Password = '&quot;
POa.getPassword + () + &quot; 'WHERE Id =&quot; + pOa.getId ();
/ / You run the query
int i = stat.executeUpdate (query);

return (i == 1);
)
/ / Finally block that contains the instructions to close the connections
/ / Hyenas run in any case
finally
(
/ / This closes the if statement and 'opened
if (stat = null)
(
stat.close ();
)
/ / It returns the connection to the pool if and 'opened
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBOperatorePuntoDiRistoro</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import unisa.gps.etour.bean.BeanOperatorePuntoDiRistoro;

/ **
* Class that implements the interface Operator Refreshment
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class DBOperatorePuntoDiRistoro implements IDBOperatorePuntoDiRistoro
(
/ / Empty constructor
public DBOperatorePuntoDiRistoro ()
(

)

public boolean cancellaOperatorePuntoDiRistoro (int pIdOperatore)
throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query cancellation
String query = &quot;DELETE FROM operatorepuntodiristoro WHERE Id =&quot;
+ PIdOperatore;
/ / You run the query Cancellation
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean inserisciOperatorePuntoDiRistoro (
BeanOperatorePuntoDiRistoro popera) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
Single ResultSet = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the insertion
String query = &quot;INSERT INTO operatorepuntodiristoro (Name, Surname,&quot;
+ &quot;Username, Password, Email, IdPuntoDiRistoro) VALUES ( '&quot;
POperatore.getNome + () + &quot;','&quot; + pOperatore.getCognome ()
POperatore.getUsername + &quot;','&quot; + () + &quot;','&quot;
POperatore.getPassword + () + &quot;','&quot; + pOperatore.getEmail ()
+ &quot; ',&quot; + POperatore.getIdPuntoDiRistoro () + &quot;)&quot;;
/ / Query for checking the ID of the PuntoDiRistoro as
/ / The association is 1 to 1 between OPPR and PR
Unique string = &quot;SELECT IdPuntoDiRistoro FROM operatorepuntodiristoro WHERE IdPuntoDiRistoro =&quot;
+ POperatore.getIdPuntoDiRistoro ();
/ / Execute the query to control
single = stat.executeQuery (shops);
int j = 0;
/ / Check if there are tuples
while (unico.next ())
j + +;
/ / If it is empty
if (j == 0)
(
/ / You run the insert query
int i = stat.executeUpdate (query);
/ / This returns the backup
System.out.println ( &quot;If you include the PR&quot;);
return (i == 1);
)
/ / If not already exist
else
(
System.out.println ( &quot;Operator PR already exists for the PR&quot;);
return false;
)
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
if (unique! = null)
(
unico.close ();
)
)
)

public boolean modificaOperatorePuntoDiRistoro (
BeanOperatorePuntoDiRistoro popera) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for amendment
String query = &quot;UPDATE operatorepuntodiristoro SET&quot; + &quot;Name = '&quot;
POperatore.getNome + () + &quot; ', Name ='&quot;
POperatore.getCognome + () + &quot; ', password ='&quot;
POperatore.getPassword + () + &quot; ', Email ='&quot;
POperatore.getEmail + () + &quot; 'WHERE IdPuntoDiRistoro =&quot;
+ POperatore.getIdPuntoDiRistoro ();
/ / You run the query for Change
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public BeanOperatorePuntoDiRistoro ottieniOperatorePuntoDiRistoro (
pIdOperatore int) throws SQLException
(

/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the extraction of the dot Refreshments required
String query = &quot;SELECT * FROM WHERE id = operatorepuntodiristoro&quot;
+ PIdOperatore;
/ / The query is executed
result = stat.executeQuery (query);
/ / Get the bean Operator refreshment passing the id
BeanOperatorePuntoDiRistoro beanTemp = null;
if (result.next ())
(
/ / Built on BeanOPR
beanTemp = new BeanOperatorePuntoDiRistoro (result.getInt ( &quot;Id&quot;)
result.getString ( &quot;Name&quot;), result.getString ( &quot;Name&quot;),
result.getString ( &quot;Username&quot;), result
. getString ( &quot;Password&quot;), result
. getString ( &quot;Email&quot;), result
. getInt ( &quot;IdPuntoDiRistoro&quot;));
)
beanTemp return;
)
/ / Exception if there is an error
catch (Exception e)
(
throw new SQLException ();
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBPiatto</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanPiatto;

/ **
* Class that implements the interface plate
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class DBPiatto implements IDBPiatto
(
/ / Empty constructor
public DBPiatto ()
(

)

public boolean cancellaPiatto (int pIdPiatto) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query cancellation
String query = &quot;DELETE FROM courses WHERE ID =&quot; + pIdPiatto;
/ / You run the query Cancellation
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean inserisciPiatto (BeanPiatto pPiatto) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the insertion
String query = &quot;INSERT INTO courses (Name, Price, IdMenu) VALUES ( '&quot;
PPiatto.getNome + () + &quot; ',&quot; + pPiatto.getPrezzo () + &quot;'
PPiatto.getIdMenu + () + &quot;)&quot;;
/ / You run the insert query
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean modificaPiatto (BeanPiatto pPiatto) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for amendment
String query = &quot;UPDATE courses SET&quot; + &quot;Name = '&quot;
PPiatto.getNome + () + &quot; ', Price =&quot; + pPiatto.getPrezzo ()
+ &quot;, IdMenu =&quot; + pPiatto.getIdMenu () + &quot;WHERE Id =&quot;
+ PPiatto.getId ();
/ / You run the query for Change
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

&lt;BeanPiatto&gt; ottieniPiatto public ArrayList (int pIdMenu) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to extract the list of dishes given the id of the Menu
String query = &quot;SELECT * FROM courses WHERE IdMenu =&quot; + pIdMenu;
/ / The query is executed
result = stat.executeQuery (query);
/ / List that contains all the plates obtained
&lt;BeanPiatto&gt; ArrayList list = new ArrayList &lt;BeanPiatto&gt; ();
/ / We extract the results from the result set and moves in
/ / List
/ / To be returned
while (result.next ())
(
/ / Add the list BeanPiatto
lista.add (new BeanPiatto (result.getInt ( &quot;Price&quot;), result
. getString ( &quot;Name&quot;), result.getInt ( &quot;IdMenu&quot;), result
. getInt ( &quot;id &quot;)));
)
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBPreferenzeDiRicerca</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanPreferenzaDiRicerca;

/ **
* Class that implements the interface PreferenzeDiRicerca
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class DBPreferenzeDiRicerca implements IDBPreferenzeDiRicerca
(
/ / Empty constructor
public DBPreferenzeDiRicerca ()
(
)

public boolean cancellaPreferenzaDiRicerca (int pIdPreferenza)
throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query cancellation
String query = &quot;DELETE FROM preferenzediricerca WHERE Id =&quot;
+ PIdPreferenza;
/ / You run the query Cancellation
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean cancellaPreferenzaDiRicercaBC (int pIdBeneCulturale,
pIdPreferenzaDiRicerca int) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query cancellation
String query = &quot;DELETE FROM associazionebc WHERE IdPreferenzeDiRicerca =&quot;
+ PIdPreferenzaDiRicerca
+ &quot;AND IdBeneCulturale =&quot;
+ PIdBeneCulturale;
/ / You run the query Cancellation
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean cancellaPreferenzaDiRicercaPR (int pIdPuntoDiRistoro,
pIdPreferenza int) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query cancellation
String query = &quot;DELETE FROM associazionepr WHERE IdPreferenzeDiRicerca =&quot;
+ PIdPreferenza
+ &quot;AND IdPuntoDiRistoro =&quot;
+ PIdPuntoDiRistoro;
/ / You run the query Cancellation
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

public boolean cancellaPreferenzaDiRicercaTurista (int pIdTurista,
pIdPreferenza int) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query cancellation
String query = &quot;DELETE FROM rating WHERE IdTurista =&quot;
PIdTurista + + &quot;AND IdPreferenzeDiRicerca =&quot;
+ PIdPreferenza;
/ / You run the query Cancellation
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

public boolean inserisciPreferenzaDiRicercaDelBC (int pIdBeneCulturale,
pIdPreferenzaDiRicerca int) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the insertion
String query = &quot;INSERT INTO associazionebc (IdPreferenzeDiRicerca, IdBeneCulturale) VALUES (&quot;
PIdPreferenzaDiRicerca + + &quot;,&quot; + pIdBeneCulturale + &quot;)&quot;;
/ / You run the insert query
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

public boolean inserisciPreferenzaDiRicerca (
BeanPreferenzaDiRicerca pPreferenza) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the insertion
String query = &quot;INSERT INTO preferenzediricerca (Id, Name) VALUES (&quot;
PPreferenza.getId + () + &quot; '&quot; + pPreferenza.getNome ()
+ &quot;')&quot;;
/ / You run the insert query
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean inserisciPreferenzaDiRicercaDelPR (int pIdPuntoDiRistoro,
pIdPreferenzaDiRicerca int) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the insertion
String query = &quot;INSERT INTO associazionepr (IdPreferenzeDiRicerca, IdPuntoDiRistoro) VALUES (&quot;
PIdPreferenzaDiRicerca + + &quot;,&quot; + pIdPuntoDiRistoro + &quot;)&quot;;
/ / You run the insert query
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean inserisciPreferenzaDiRicercaDelTurista (int pIdTurista,
pIdPreferenzaDiRicerca int) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the insertion
String query = &quot;INSERT INTO rating (IdTurista, IdPreferenzeDiRicerca) VALUES (&quot;
PIdTurista + + &quot;,&quot; + pIdPreferenzaDiRicerca + &quot;)&quot;;
/ / You run the insert query
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public ArrayList &lt;BeanPreferenzaDiRicerca&gt; ottieniPreferenzeDiRicercaDelBC (
pIdBeneCulturale int) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to extract the list of search preferences
/ / A cultural
String query = &quot;SELECT * FROM associazionebc, preferenzediricerca WHERE IdBeneCulturale =&quot;
+ PIdBeneCulturale
+ &quot;AND IdPreferenzeDiRicerca preferenzediricerca.Id =&quot;;
/ / The query is executed
result = stat.executeQuery (query);
/ / List that will contain the BeanPreferenzaDiRicerca
&lt;BeanPreferenzaDiRicerca&gt; ArrayList list = new ArrayList &lt;BeanPreferenzaDiRicerca&gt; ();
/ / We extract the results from the result set and moves in
/ / List
/ / To be returned
while (result.next ())
(
/ / Add to the list BeanPreferenzaDiRicerca
lista.add (new BeanPreferenzaDiRicerca (result.getInt ( &quot;Id&quot;)
result.getString ( &quot;Name &quot;)));
)
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

public ArrayList &lt;BeanPreferenzaDiRicerca&gt; ottieniPreferenzeDiRicercaDelPR (
pIdPuntoDiRistoro int) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to extract the list of search preferences
/ / A refreshment
String query = &quot;SELECT * FROM associazionepr, preferenzediricerca WHERE IdPuntoDiRistoro =&quot;
+ PIdPuntoDiRistoro
+ &quot;AND IdPreferenzeDiRicerca preferenzediricerca.Id =&quot;;
/ / The query is executed
result = stat.executeQuery (query);
/ / List that will contain the BeanPreferenzaDiRicerca
&lt;BeanPreferenzaDiRicerca&gt; ArrayList list = new ArrayList &lt;BeanPreferenzaDiRicerca&gt; ();
/ / We extract the results from the result set and moves in
/ / List
/ / To be returned
while (result.next ())
(
/ / Add to the list BeanPreferenzaDiRicerca
lista.add (new BeanPreferenzaDiRicerca (result.getInt ( &quot;Id&quot;)
result.getString ( &quot;Name &quot;)));
)
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

public ArrayList &lt;BeanPreferenzaDiRicerca&gt; ottieniPreferenzeDiRicercaDelTurista (
pIdTurista int) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to extract the list of search preferences
/ / A Turista
String query = &quot;SELECT * FROM liking preferenzediricerca WHERE IdTurista =&quot;
+ PIdTurista
+ &quot;AND IdPreferenzeDiRicerca preferenzediricerca.Id =&quot;;
/ / The query is executed
result = stat.executeQuery (query);
/ / List that will contain the BeanPreferenzaDiRicerca
&lt;BeanPreferenzaDiRicerca&gt; ArrayList list = new ArrayList &lt;BeanPreferenzaDiRicerca&gt; ();
/ / We extract the results from the result set and moves in
/ / List
/ / To be returned
while (result.next ())
(
/ / Add to the list BeanPreferenzaDiRicerca
lista.add (new BeanPreferenzaDiRicerca (result.getInt ( &quot;Id&quot;)
result.getString ( &quot;Name &quot;)));
)
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

&lt;BeanPreferenzaDiRicerca&gt; ottieniPreferenzeDiRicerca public ArrayList ()
throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to extract the list of search preferences
/ / A Turista
String query = &quot;SELECT * FROM preferenzediricerca&quot;;
/ / The query is executed
result = stat.executeQuery (query);
/ / List that will contain the BeanPreferenzaDiRicerca
&lt;BeanPreferenzaDiRicerca&gt; ArrayList list = new ArrayList &lt;BeanPreferenzaDiRicerca&gt; ();
/ / We extract the results from the result set and moves in
/ / List
/ / To be returned
while (result.next ())
(
/ / Add to the list BeanPreferenzaDiRicerca
lista.add (new BeanPreferenzaDiRicerca (result.getInt ( &quot;Id&quot;)
result.getString ( &quot;Name &quot;)));
)
/ / Return the list of search preferences in the DB
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBPreferenzeGeneriche</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import unisa.gps.etour.bean.BeanPreferenzeGeneriche;

/ **
* Implementing the IDBPreferenzeGeneriche
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class DBPreferenzeGeneriche implements IDBPreferenzeGeneriche
(
/ / Constructor without parameters
public DBPreferenzeGeneriche ()
(

)

public boolean cancellaPreferenzaGenerica (int pIdPreferenza)
throws SQLException
(
/ / Connect to database
Connection conn = null;
/ / Statement for running queries
Statement stat = null;
/ / Try block which performs the query and the database connection
TRY
(
/ / You get the database connection from the pool
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the statement
stat = conn.createStatement ();
/ / Query
String query = &quot;DELETE FROM preferenzegeneriche WHERE Id =&quot;
+ PIdPreferenza;
/ / You run the query
int i = stat.executeUpdate (query);

return (i == 1);
)
/ / Finally block that contains the instructions to close the connections
/ / Hyenas run in any case
finally
(
/ / This closes the if statement and 'opened
if (stat = null)
(
stat.close ();
)
/ / It returns the connection to the pool if and 'opened
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean inserisciPreferenzaGenenerica (
BeanPreferenzeGeneriche pPreferenza) throws SQLException
(
/ / Connect to database
Connection conn = null;
/ / Statement for running queries
Statement stat = null;
/ / Try block which performs the query and the database connection
TRY
(
/ / You get the database connection from the pool
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the statement
stat = conn.createStatement ();
/ / Query
String query = &quot;INSERT INTO preferenzegeneriche (IdTurista, Font, Tema, DimensioneFont)&quot;
+ &quot;VALUES (&quot;
+ PPreferenza.getIdTurista ()
+ &quot; '&quot;
+ PPreferenza.getFont ()
+ &quot;','&quot;
+ PPreferenza.getTema ()
+ &quot; ',&quot; + PPreferenza.getDimensioneFont () + &quot;)&quot;;
/ / You run the query
int i = stat.executeUpdate (query);
return (i == 1);
)
/ / Finally block that contains the instructions to close the connections
/ / Hyenas run in any case
finally
(
/ / This closes the if statement and 'opened
if (stat = null)
(
stat.close ();
)
/ / It returns the connection to the pool if and 'opened
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean modificaPreferenzaGenerica (
BeanPreferenzeGeneriche pPreferenza) throws SQLException
(
/ / Connect to database
Connection conn = null;
/ / Statement for running queries
Statement stat = null;
/ / Try block which performs the query and the database connection
TRY
(
/ / You get the database connection from the pool
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the statement
stat = conn.createStatement ();
/ / Query
String query = &quot;UPDATE preferenzegeneriche SET&quot; + &quot;= IdTurista&quot;
PPreferenza.getIdTurista + () + &quot;, font = '&quot;
PPreferenza.getFont + () + &quot; ', theme ='&quot;
PPreferenza.getTema + () + &quot; ', DimensioneFont =&quot;
PPreferenza.getDimensioneFont + () + &quot;WHERE Id =&quot;
+ PPreferenza.getId ();
/ / You run the query
int i = stat.executeUpdate (query);

return (i == 1);
)
/ / Finally block that contains the instructions to close the connections
/ / Hyenas run in any case
finally
(
/ / This closes the if statement and 'opened
if (stat = null)
(
stat.close ();
)
/ / It returns the connection to the pool if and 'opened
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public BeanPreferenzeGeneriche ottieniPreferenzaGenerica (int pIdTurista)
throws SQLException
(
/ / Connect to database
Connection conn = null;
/ / Statement for running queries
Statement stat = null;
/ / Resut set where the output of the query is inserted
ResultSet result = null;
/ / Try block which performs the query and the database connection
TRY
(
/ / You get the database connection from the pool
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the statement
stat = conn.createStatement ();
/ / Query
String query = &quot;SELECT * FROM preferenzegeneriche WHERE IdTurista =&quot;
+ PIdTurista;
/ / Run the query
result = stat.executeQuery (query);
BeanPreferenzeGeneriche pref = null;
/ / Check that the query returns at least one result
if (result.next ())
(
BeanPreferenzeGeneriche pref = new ();
pref.setId (result.getInt ( &quot;Id&quot;));
pref.setIdTurista (result.getInt (IdTurista &quot;));
pref.setDimensioneFont (result.getInt (DimensioneFont &quot;));
pref.setFont (result.getString ( &quot;Font&quot;));
pref.setTema (result.getString ( &quot;Theme&quot;));
)
return pref;
)
/ / Finally block that contains the instructions to close the connections
/ / Hyenas run in any case
finally
(
/ / This closes the result set only if and 'the query was made
if (result! = null)
(
result.close ();
)
/ / This closes the if statement and 'opened
if (stat = null)
(
stat.close ();
)
/ / It returns the connection to the pool if and 'opened
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBPuntoDiRistoro</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.util.ArrayList;
import java.util.Date;

import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.util.Punto3D;

/ **
* Class that implements the interface of Refreshment
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class DBPuntoDiRistoro implements IDBPuntoDiRistoro
(
/ / Empty constructor
public DBPuntoDiRistoro ()
(

)

public boolean cancellaPuntoDiRistoro (int pIdPuntoDiRistoro)
throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query cancellation
String query = &quot;DELETE FROM puntodiristoro WHERE Id =&quot;
+ PIdPuntoDiRistoro;
/ / You run the query Cancellation
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

public boolean inserisciPuntoDiRistoro (BeanPuntoDiRistoro pPuntoDiRistoro)
throws SQLException
(
/ / Create the organization of the Opening and Closing
java.sql.Time orarioApertura = new Time (pPuntoDiRistoro
. getOrarioApertura (). getTime ());
java.sql.Time orarioChiusura = new Time (pPuntoDiRistoro
. getOrarioChiusura (). getTime ());
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the insertion of a refreshment
String query = &quot;INSERT INTO puntodiristoro (Name,&quot;
+ &quot;Description, Telephone, Latitude, Longitude,&quot;
+ &quot;Altitude, OrarioApertura, OrarioChiusura, GiornoChiusura&quot;
+ &quot;Town, city, street, postcode, Province, MediaVoti, NumeroVoti&quot;
+ &quot;PartitaIva) VALUES ( '&quot; + pPuntoDiRistoro.getNome ()
PPuntoDiRistoro.getDescrizione + &quot;','&quot; + () + &quot;','&quot;
PPuntoDiRistoro.getTelefono + () + &quot; ',&quot;
PPuntoDiRistoro.getPosizione + (). GetLatitudine () + &quot;&quot;
PPuntoDiRistoro.getPosizione + (). GetLongitudine () + &quot;&quot;
PPuntoDiRistoro.getPosizione + (). GetAltitudine () + &quot; '&quot;
OrarioApertura.toString + () + &quot;','&quot;
OrarioChiusura.toString + () + &quot;','&quot;
PPuntoDiRistoro.getGiornoChiusura + () + &quot;','&quot;
PPuntoDiRistoro.getLocalita + () + &quot;','&quot;
PPuntoDiRistoro.getCitta + () + &quot;','&quot;
PPuntoDiRistoro.getVia + () + &quot;','&quot;
PPuntoDiRistoro.getCap + () + &quot;','&quot;
PPuntoDiRistoro.getProvincia + () + &quot; ',&quot;
PPuntoDiRistoro.getMediaVoti + () + &quot;&quot;
PPuntoDiRistoro.getNumeroVoti + () + &quot; '&quot;
PPuntoDiRistoro.getPartitaIva + () + &quot;');&quot;;
/ / You run the insert query
int i = stat.executeUpdate (query);
return (i == 1);
)
/ / Is always done and takes care of closing the statement, and
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean modificaPuntoDiRistoro (BeanPuntoDiRistoro pPuntoDiRistoro)
throws SQLException
(
/ / Create the organization of the Opening and Closing
java.sql.Time orarioApertura = new Time (pPuntoDiRistoro
. getOrarioApertura (). getTime ());
java.sql.Time orarioChiusura = new Time (pPuntoDiRistoro
. getOrarioChiusura (). getTime ());
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for amendment
String query = &quot;UPDATE puntodiristoro SET&quot; + &quot;Name = '&quot;
PPuntoDiRistoro.getNome + () + &quot; ', Description ='&quot;
PPuntoDiRistoro.getDescrizione + () + &quot; ', Phone ='&quot;
PPuntoDiRistoro.getTelefono + () + &quot; ', Latitude =&quot;
PPuntoDiRistoro.getPosizione + (). GetLatitudine ()
+ &quot;Longitude =&quot;
PPuntoDiRistoro.getPosizione + (). GetLongitudine ()
+ &quot;, Height =&quot;
PPuntoDiRistoro.getPosizione + (). GetAltitudine ()
+ &quot;, OrarioApertura = '&quot; + orarioApertura.toString ()
+ &quot; ', OrarioChiusura ='&quot; + orarioChiusura.toString ()
+ &quot; ', GiornoChiusura ='&quot;
PPuntoDiRistoro.getGiornoChiusura + () + &quot; ', Location ='&quot;
PPuntoDiRistoro.getLocalita + () + &quot; ', City ='&quot;
PPuntoDiRistoro.getCitta + () + &quot; ', Via ='&quot;
PPuntoDiRistoro.getVia + () + &quot; ', postcode ='&quot;
PPuntoDiRistoro.getCap + () + &quot; ', State ='&quot;
PPuntoDiRistoro.getProvincia + () + &quot; ', MediaVoti =&quot;
PPuntoDiRistoro.getMediaVoti + () + &quot;, NumeroVoti =&quot;
PPuntoDiRistoro.getNumeroVoti + () + &quot;, party = '&quot;
PPuntoDiRistoro.getPartitaIva + () + &quot; 'WHERE Id =&quot;
+ PPuntoDiRistoro.getId ();
/ / You run the query for Change
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Is always done and takes care of closing the Statement and the
/ / Connect
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public int ottieniNumeroElementiRicerca (String pKeyword,
ArrayList &lt;BeanTag&gt; pTags, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to get the number of pages
String query = &quot;&quot;;
if (pTags.size () == 0)
(
/ / Query without the control tag
query = &quot;SELECT count (number) FROM (SELECT count (puntodiristoro.Id) AS number&quot;
+ &quot;FROM puntodiristoro&quot;
+ &quot;WHERE (puntodiristoro.Nome LIKE '%&quot;
+ PKeyword
+ &quot;% 'OR puntodiristoro.Descrizione LIKE'%&quot;
+ PKeyword
+ '%') &quot;
+ &quot;AND distance (puntodiristoro.Latitudine, puntodiristoro.Longitudine&quot;
+ PPosizione.getLatitudine ()
+ &quot;&quot;
+ PPosizione.getLongitudine ()
+ &quot;) &lt;&quot;
+ PDistanzaMassima
+ &quot;GROUP BY puntodiristoro.Id&quot;
+ &quot;ORDER BY count (puntodiristoro.Id) DESC) AS table&quot;;
)
else
(
/ / Query with tags
query = &quot;SELECT count (number) FROM (SELECT count (puntodiristoro.Id) AS number&quot;
+ &quot;FROM puntodiristoro&quot;
+ &quot;JOIN (appartenenzapr JOIN tag ON IdTag = Id)&quot;
+ &quot;ON puntodiristoro.Id = appartenenzapr.IdPuntoDiRistoro&quot;
+ &quot;WHERE (puntodiristoro.Nome LIKE '%&quot;
+ PKeyword
+ &quot;% 'OR puntodiristoro.Descrizione LIKE'%&quot;
+ PKeyword
+ '%') AND (tag.Nome = ' &quot;+ pTags.get (0). GetName ();
if (pTags.size ()&gt; = 2)
(
query = query + &quot; 'OR tag.Nome ='&quot;
PTags.get + (1). GetName ();
)
if (pTags.size ()&gt; = 3)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (2). GetName ();
)
if (pTags.size ()&gt; = 4)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (3). GetName ();
)
if (pTags.size ()&gt; = 5)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (4). GetName ();
)
query = query
+ &quot; ')&quot;
+ &quot;AND distance (puntodiristoro.Latitudine, puntodiristoro.Longitudine&quot;
PPosizione.getLatitudine + () + &quot;&quot;
PPosizione.getLongitudine + () + &quot;) &lt;&quot;
PDistanzaMassima + + &quot;GROUP BY puntodiristoro.Id&quot;
+ &quot;ORDER BY count (puntodiristoro.Id) DESC) AS table&quot;;

)
/ / You run the query
result = stat.executeQuery (query);
/ / It returns the value of count () that contains the number of
/ / Tuple
int i = 0;
if (result.next ())
(
i = result.getInt (1);
)
return i;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public int ottieniNumeroElementiRicercaAvanzata (int pIdTurista,
PKeyword String, ArrayList &lt;BeanTag&gt; pTags, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to get the number of pages of advanced
String query = &quot;&quot;;
if (pTags.size () == 0)
(
/ / Query without the control tag
query = &quot;SELECT count (number) FROM (SELECT count (puntodiristoro.Id) AS number&quot;
+ &quot;FROM (puntodiristoro LEFT JOIN&quot;
+ &quot;(SELECT IdPuntoDiRistoro&quot;
+ &quot;FROM associazionepr, (&quot;
+ &quot;SELECT IdPreferenzeDiRicerca&quot;
+ &quot;FROM rating&quot;
+ &quot;WHERE IdTurista =&quot;
+ PIdTurista
+ &quot;) AS pref&quot;
+ &quot;WHERE associazionepr.IdPreferenzeDiRicerca = pref.IdPreferenzeDiRicerca)&quot;
+ Preferences AS ON puntodiristoro.Id preferenze.IdPuntoDiRistoro =) &quot;
+ &quot;WHERE (puntodiristoro.Nome LIKE '%&quot;
+ PKeyword
+ &quot;% 'OR puntodiristoro.Descrizione LIKE'%&quot;
+ PKeyword
+ '%') &quot;
+ &quot;AND distance (puntodiristoro.Latitudine, puntodiristoro.Longitudine&quot;
+ PPosizione.getLatitudine ()
+ &quot;&quot;
+ PPosizione.getLongitudine ()
+ &quot;) &lt;&quot;
+ PDistanzaMassima
+ &quot;GROUP BY puntodiristoro.Id&quot;
+ &quot;ORDER BY count (puntodiristoro.Id) DESC) AS table&quot;;
)
else
(
/ / Query with tags
query = &quot;SELECT count (number) FROM (SELECT count (puntodiristoro.Id) AS number&quot;
+ &quot;FROM (puntodiristoro LEFT JOIN&quot;
+ &quot;(SELECT IdPuntoDiRistoro&quot;
+ &quot;FROM associazionepr, (&quot;
+ &quot;SELECT IdPreferenzeDiRicerca&quot;
+ &quot;FROM rating&quot;
+ &quot;WHERE IdTurista =&quot;
+ PIdTurista
+ &quot;) AS pref&quot;
+ &quot;WHERE associazionepr.IdPreferenzeDiRicerca = pref.IdPreferenzeDiRicerca)&quot;
+ Preferences AS ON puntodiristoro.Id preferenze.IdPuntoDiRistoro =) &quot;
+ &quot;JOIN (appartenenzapr JOIN tag ON IdTag = Id)&quot;
+ &quot;ON puntodiristoro.Id = appartenenzapr.IdPuntoDiRistoro&quot;
+ &quot;WHERE (puntodiristoro.Nome LIKE '%&quot;
+ PKeyword
+ &quot;% 'OR puntodiristoro.Descrizione LIKE'%&quot;
+ PKeyword
+ '%') AND (tag.Nome = ' &quot;+ pTags.get (0). GetName ();
if (pTags.size ()&gt; = 2)
(
query = query + &quot; 'OR tag.Nome ='&quot;
PTags.get + (1). GetName ();
)
if (pTags.size ()&gt; = 3)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (2). GetName ();
)
if (pTags.size ()&gt; = 4)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (3). GetName ();
)
if (pTags.size ()&gt; = 5)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (4). GetName ();
)
query = query
+ &quot; ')&quot;
+ &quot;AND distance (puntodiristoro.Latitudine, puntodiristoro.Longitudine&quot;
PPosizione.getLatitudine + () + &quot;&quot;
PPosizione.getLongitudine + () + &quot;) &lt;&quot;
PDistanzaMassima + + &quot;GROUP BY puntodiristoro.Id&quot;
+ &quot;ORDER BY count (puntodiristoro.Id) DESC) AS table&quot;;
)
/ / You run the query
result = stat.executeQuery (query);
/ / It returns the value of count () that contains the number of
/ / Tuple
int i = 0;
if (result.next ())
(
i = result.getInt (1);
)
return i;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public BeanPuntoDiRistoro ottieniPuntoDiRistoro (int pid)
throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query
String query = &quot;SELECT * FROM puntodiristoro WHERE Id =&quot; + pid;
/ / You run the query
result = stat.executeQuery (query);
if (result.next ())
(
/ / We create the objects to be returned
Punto3D point = new Punto3D (result.getDouble ( &quot;Latitude&quot;)
result.getDouble ( &quot;Longitude&quot;), result
. getDouble ( &quot;Elevation&quot;));
Date orarioApertura = new Date (result.getTime (OrarioApertura &quot;)
. getTime ());
Date orarioChiusura = new Date (result.getTime (OrarioChiusura &quot;)
. getTime ());
/ / This generates the resting spot of bean
BeanPuntoDiRistoro puntoTemp = new BeanPuntoDiRistoro (result
. getInt ( &quot;Id&quot;), result.getInt ( &quot;NumeroVoti&quot;), result
. getDouble ( &quot;MediaVoti&quot;), result.getString ( &quot;Name&quot;)
result.getString ( &quot;Description&quot;), result
. getString ( &quot;Phone&quot;), result
. getString ( &quot;Location&quot;), result
. getString ( &quot;City&quot;), result.getString ( &quot;Way&quot;),
result.getString ( &quot;Cap&quot;), result.getString ( &quot;Province&quot;),
result.getString ( &quot;PartitaIva&quot;), point, orarioApertura,
orarioChiusura, result.getString ( &quot;GiornoChiusura&quot;));
/ / It returns the refreshment
puntoTemp return;
)
else
(
return null;
)
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public ArrayList &lt;BeanPuntoDiRistoro&gt; search (String pKeyword,
ArrayList &lt;BeanTag&gt; pTags, int pNumeroPagina,
int pNumeroElementiPerPagina, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for search
String query = &quot;&quot;;
if (pTags.size () == 0)
(
/ / Query without the control tag
query = &quot;SELECT *&quot;
+ &quot;FROM puntodiristoro&quot;
+ &quot;WHERE (puntodiristoro.Nome LIKE '%&quot;
+ PKeyword
+ &quot;% 'OR puntodiristoro.Descrizione LIKE'%&quot;
+ PKeyword
+ '%') &quot;
+ &quot;AND distance (puntodiristoro.Latitudine, puntodiristoro.Longitudine&quot;
PPosizione.getLatitudine + () + &quot;&quot;
PPosizione.getLongitudine + () + &quot;) &lt;&quot;
PDistanzaMassima + + &quot;GROUP BY puntodiristoro.Id&quot;
+ &quot;ORDER BY count (puntodiristoro.Id) DESC LIMIT&quot;
+ (PNumeroPagina * pNumeroElementiPerPagina) + &quot;&quot;
+ PNumeroElementiPerPagina;
)
else
(
/ / Query with tags
query = &quot;SELECT *&quot;
+ &quot;FROM puntodiristoro&quot;
+ &quot;JOIN (appartenenzapr JOIN tag ON IdTag = Id)&quot;
+ &quot;ON puntodiristoro.Id = appartenenzapr.IdPuntoDiRistoro&quot;
+ &quot;WHERE (puntodiristoro.Nome LIKE '%&quot; + pKeyword
+ &quot;% 'OR puntodiristoro.Descrizione LIKE'%&quot; + pKeyword
+ '%') AND (tag.Nome = ' &quot;+ pTags.get (0). GetName ();
if (pTags.size ()&gt; = 2)
(
query = query + &quot; 'OR tag.Nome ='&quot;
PTags.get + (1). GetName ();
)
if (pTags.size ()&gt; = 3)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (2). GetName ();
)
if (pTags.size ()&gt; = 4)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (3). GetName ();
)
if (pTags.size ()&gt; = 5)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (4). GetName ();
)
query = query
+ &quot; ')&quot;
+ &quot;AND distance (puntodiristoro.Latitudine, puntodiristoro.Longitudine&quot;
PPosizione.getLatitudine + () + &quot;&quot;
PPosizione.getLongitudine + () + &quot;) &lt;&quot;
PDistanzaMassima + + &quot;GROUP BY puntodiristoro.Id&quot;
+ &quot;ORDER BY count (puntodiristoro.Id) DESC LIMIT&quot;
+ (PNumeroPagina * pNumeroElementiPerPagina) + &quot;&quot;
+ PNumeroElementiPerPagina;
)
/ / You run the query
result = stat.executeQuery (query);
/ / List that will contain the BeanPuntoDiRistoro
&lt;BeanPuntoDiRistoro&gt; ArrayList list = new ArrayList &lt;BeanPuntoDiRistoro&gt; ();
while (result.next ())
(
/ / We create the objects to be returned
Punto3D point = new Punto3D (result.getDouble ( &quot;Latitude&quot;)
result.getDouble ( &quot;Longitude&quot;), result
. getDouble ( &quot;Elevation&quot;));
Date orarioApertura = new Date (result.getTime (OrarioApertura &quot;)
. getTime ());
Date orarioChiusura = new Date (result.getTime (OrarioChiusura &quot;)
. getTime ());
/ / Build the refreshment
BeanPuntoDiRistoro puntoTemp = new BeanPuntoDiRistoro (result
. getInt ( &quot;Id&quot;), result.getInt ( &quot;NumeroVoti&quot;), result
. getDouble ( &quot;MediaVoti&quot;), result.getString ( &quot;Name&quot;)
result.getString ( &quot;Description&quot;), result
. getString ( &quot;Phone&quot;), result
. getString ( &quot;Location&quot;), result
. getString ( &quot;City&quot;), result.getString ( &quot;Way&quot;),
result.getString ( &quot;Cap&quot;), result.getString ( &quot;Province&quot;),
result.getString ( &quot;PartitaIva&quot;), point, orarioApertura,
orarioChiusura, result.getString ( &quot;GiornoChiusura&quot;));
/ / Insert the bean in the list
lista.add (puntoTemp);
)
/ / It returns the list
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

&lt;BeanPuntoDiRistoro&gt; ricercaAvanzata public ArrayList (int pIdTurista,
PKeyword String, ArrayList &lt;BeanTag&gt; pTags, int pNumeroPagina,
int pNumeroElementiPerPagina, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for advanced search
String query = &quot;&quot;;
if (pTags.size () == 0)
(
/ / Query without tags
query = &quot;SELECT *&quot;
+ &quot;FROM (puntodiristoro LEFT JOIN&quot;
+ &quot;(SELECT IdPuntoDiRistoro&quot;
+ &quot;FROM associazionepr, (&quot;
+ &quot;SELECT IdPreferenzeDiRicerca&quot;
+ &quot;FROM rating&quot;
+ &quot;WHERE IdTurista =&quot;
+ PIdTurista
+ &quot;) CI pref&quot;
+ &quot;WHERE associazionepr.IdPreferenzeDiRicerca = pref.IdPreferenzeDiRicerca)&quot;
+ Preferences AS ON puntodiristoro.Id preferenze.IdPuntoDiRistoro =) &quot;
+ &quot;WHERE (puntodiristoro.Nome LIKE '%&quot;
+ PKeyword
+ &quot;% 'OR puntodiristoro.Descrizione LIKE'%&quot;
+ PKeyword
+ &quot;%')&quot;
+ &quot;AND distance (puntodiristoro.Latitudine, puntodiristoro.Longitudine&quot;
PPosizione.getLatitudine + () + &quot;&quot;
PPosizione.getLongitudine + () + &quot;) &lt;&quot;
PDistanzaMassima + + &quot;GROUP BY puntodiristoro.Id&quot;
+ &quot;ORDER BY count (puntodiristoro.Id) DESC LIMIT&quot;
+ (PNumeroPagina * pNumeroElementiPerPagina) + &quot;&quot;
+ PNumeroElementiPerPagina;
)
else
(
/ / Query with tags
query = &quot;SELECT *&quot;
+ &quot;FROM (puntodiristoro LEFT JOIN&quot;
+ &quot;(SELECT IdPuntoDiRistoro&quot;
+ &quot;FROM associazionepr, (&quot;
+ &quot;SELECT IdPreferenzeDiRicerca&quot;
+ &quot;FROM rating&quot;
+ &quot;WHERE IdTurista =&quot;
+ PIdTurista
+ &quot;) AS pref&quot;
+ &quot;WHERE associazionepr.IdPreferenzeDiRicerca = pref.IdPreferenzeDiRicerca)&quot;
+ Preferences AS ON puntodiristoro.Id preferenze.IdPuntoDiRistoro =) &quot;
+ &quot;JOIN (appartenenzapr JOIN tag ON IdTag = Id)&quot;
+ &quot;ON puntodiristoro.Id = appartenenzapr.IdPuntoDiRistoro&quot;
+ &quot;WHERE (puntodiristoro.Nome LIKE '%&quot; + pKeyword
+ &quot;% 'OR puntodiristoro.Descrizione LIKE'%&quot; + pKeyword
+ '%') AND (tag.Nome = ' &quot;+ pTags.get (0). GetName ();
if (pTags.size ()&gt; = 2)
(
query = query + &quot; 'OR tag.Nome ='&quot;
PTags.get + (1). GetName ();
)
if (pTags.size ()&gt; = 3)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (2). GetName ();
)
if (pTags.size ()&gt; = 4)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (3). GetName ();
)
if (pTags.size ()&gt; = 5)
(
query = query + &quot; 'OR tag.Nome ='&quot;
+ PTags.get (4). GetName ();
)
query = query
+ &quot; ')&quot;
+ &quot;AND distance (puntodiristoro.Latitudine, puntodiristoro.Longitudine&quot;
PPosizione.getLatitudine + () + &quot;&quot;
PPosizione.getLongitudine + () + &quot;) &lt;&quot;
PDistanzaMassima + + &quot;GROUP BY puntodiristoro.Id&quot;
+ &quot;ORDER BY count (puntodiristoro.Id) DESC LIMIT&quot;
+ (PNumeroPagina * pNumeroElementiPerPagina) + &quot;&quot;
+ PNumeroElementiPerPagina;
)
/ / You run the query
result = stat.executeQuery (query);

&lt;BeanPuntoDiRistoro&gt; ArrayList list = new ArrayList &lt;BeanPuntoDiRistoro&gt; ();
while (result.next ())
(
/ / We create the objects to be returned
Punto3D point = new Punto3D (result.getDouble ( &quot;Latitude&quot;)
result.getDouble ( &quot;Longitude&quot;), result
. getDouble ( &quot;Elevation&quot;));
Date orarioApertura = new Date (result.getTime (OrarioApertura &quot;)
. getTime ());
Date orarioChiusura = new Date (result.getTime (OrarioChiusura &quot;)
. getTime ());
/ / This creates the cultural
BeanPuntoDiRistoro beneTemp = new BeanPuntoDiRistoro (result
. getInt ( &quot;Id&quot;), result.getInt ( &quot;NumeroVoti&quot;), result
. getDouble ( &quot;MediaVoti&quot;), result.getString ( &quot;Name&quot;)
result.getString ( &quot;Description&quot;), result
. getString ( &quot;Phone&quot;), result
. getString ( &quot;Location&quot;), result
. getString ( &quot;City&quot;), result.getString ( &quot;Way&quot;),
result.getString ( &quot;Cap&quot;), result.getString ( &quot;Province&quot;),
result.getString ( &quot;PartitaIva&quot;), point, orarioApertura,
orarioChiusura, result.getString ( &quot;GiornoChiusura&quot;));
/ / Insert the bean in the list
lista.add (beneTemp);
)
/ / It returns the list
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

&lt;BeanPuntoDiRistoro&gt; ottieniListaPR public ArrayList () throws SQLException
(
/ / Variables for database connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for a list of all the refreshment
String query = &quot;SELECT * FROM puntodiristoro&quot;;
/ / You run the query
result = stat.executeQuery (query);
/ / List that will contain the BeanPuntoDiRistoro
&lt;BeanPuntoDiRistoro&gt; ArrayList list = new ArrayList &lt;BeanPuntoDiRistoro&gt; ();
while (result.next ())
(
/ / We create the objects to be returned
Punto3D point = new Punto3D (result.getDouble ( &quot;Latitude&quot;)
result.getDouble ( &quot;Longitude&quot;), result
. getDouble ( &quot;Elevation&quot;));
Date orarioApertura = new Date (result.getTime (OrarioApertura &quot;)
. getTime ());
Date orarioChiusura = new Date (result.getTime (OrarioChiusura &quot;)
. getTime ());
/ / Build the refreshment
BeanPuntoDiRistoro puntoTemp = new BeanPuntoDiRistoro (result
. getInt ( &quot;Id&quot;), result.getInt ( &quot;NumeroVoti&quot;), result
. getDouble ( &quot;MediaVoti&quot;), result.getString ( &quot;Name&quot;)
result.getString ( &quot;Description&quot;), result
. getString ( &quot;Phone&quot;), result
. getString ( &quot;Location&quot;), result
. getString ( &quot;City&quot;), result.getString ( &quot;Way&quot;),
result.getString ( &quot;Cap&quot;), result.getString ( &quot;Province&quot;),
result.getString ( &quot;PartitaIva&quot;), point, orarioApertura,
orarioChiusura, result.getString ( &quot;GiornoChiusura&quot;));
/ / Insert the bean in the list
lista.add (puntoTemp);
)
/ / It returns the list
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBStatisticheLocalita</id>
      <content>ï&gt;¿	
package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

/ **
* Class that implements the local statistical
*
* @ Author Joseph Martone
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class DBStatisticheLocalita implements IDBStatisticheLocalita
(
/ / Empty constructor
public DBStatisticheLocalita ()
(

)

&lt;String&gt; ottieniListaLocalita public ArrayList () throws SQLException
(
/ / Variable for the connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the extraction of location between the PR and BC
String query = &quot;(SELECT DISTINCT Locations&quot;
+ &quot;FROM beneculturale) UNION&quot;
+ &quot;(SELECT DISTINCT FROM Localita puntodiristoro)&quot;;
/ / The query is executed
result = stat.executeQuery (query);
/ / We extract the results from the result set and moves in
/ / List
/ / To be returned
/ / List that includes the results obtained
ArrayList list = new ArrayList &lt;String&gt; &lt;String&gt; ();
while (result.next ())
(
/ / Add to the list the locations obtained
lista.add (result.getString ( &quot;Location&quot;));
)
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public double ottieniMedieVotiLocalita (String plocalita)
throws SQLException
(
/ / Variable for the connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to extract the average of the votes of catering outlets
/ / According to a Passo
String query = &quot;SELECT avg (MediaVoti) as MediaVoti FROM puntodiristoro WHERE Location = '&quot;
Plocalita + + &quot; '&quot;;
/ / The query is executed
result = stat.executeQuery (query);
/ / We extract the results from the result set
double point = 0.0;
if (result.next ())
(
point = result.getDouble ( &quot;MediaVoti&quot;);
)
/ / Query to extract the average of the votes of cultural
/ / According to a Passo
query = &quot;SELECT avg (MediaVoti) AS MediaVoti FROM beneculturale WHERE Location = '&quot;
Plocalita + + &quot; '&quot;;
/ / The query is executed
result = stat.executeQuery (query);
/ / We extract the results from the result set
double good = 0.0;
if (result.next ())
(
well result.getDouble = ( &quot;MediaVoti&quot;);
)
/ / It returns the average of the refreshment and heritage
return (good point +) / 2;

)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)

)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBTag</id>
      <content>package unisa.gps.etour.control.GestioneBeniCulturali.test.stub;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.repository.IDBTag;

public class DBTag implements IDBTag
(
private ArrayList &lt;BeanTag&gt; b;

public DBTag ()
(
b = new ArrayList &lt;BeanTag&gt; (0);
)

public boolean aggiungeTagBeneCulturale (pIdBeneCulturale int, int pIdTag)
throws SQLException
(
return true;
)

public boolean aggiungeTagPuntoDiRistoro (pIdPuntoDiRistoro int, int pIdTag)
throws SQLException
(
return true;
)

public boolean cancellaTag (int pIdTag) throws SQLException
(
return true;
)

public boolean cancellaTagBeneCulturale (pIdBeneCulturale int, int pIdTag)
throws SQLException
(
return true;
)

public boolean cancellaTagPuntoDiRistoro (pIdPuntoDiRistoro int, int pIdTag)
throws SQLException
(
return true;
)

public boolean inserisciTag (BeanTag ptagi) throws SQLException
(
return true;
)

public boolean modificaTag (BeanTag ptagi) throws SQLException
(
/ / TODO Auto-generated method stub
return false;
)

&lt;BeanTag&gt; ottieniListaTag public ArrayList () throws SQLException
(
/ / TODO Auto-generated method stub
return null;
)

public BeanTag ottieniTag (int pid) throws SQLException
(
/ / TODO Auto-generated method stub
return null;
)

&lt;BeanTag&gt; ottieniTagBeneCulturale public ArrayList (int pIdBeneCulturale)
throws SQLException
(
/ / TODO Auto-generated method stub
return null;
)

&lt;BeanTag&gt; ottieniTagPuntoDiRistoro public ArrayList (int pIdPuntoDiRistoro)
throws SQLException
(
/ / TODO Auto-generated method stub
return null;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBTurista</id>
      <content>package unisa.gps.etour.control.GestioneBeniCulturali.test.stub;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;

import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.repository.IDBTurista;

public class DBTurista implements IDBTurista
(

public boolean cancellaBeneCulturalePreferito (int pIdTurista,
pIdBeneCulturale int) throws SQLException
(
return false;
)

public boolean cancellaPuntoDiRistoroPreferito (int pIdTurista,
pIdPuntoDiRistoro int) throws SQLException
(
return false;
)

public boolean delete (int pIdTurista) throws SQLException
(
return false;
)

public boolean inserisciBeneCulturalePreferito (int pIdTurista,
pIdBeneCulturale int) throws SQLException
(
return false;
)

public boolean inserisciPuntoDiRistoroPreferito (int pIdTurista,
pIdPuntoDiRistoro int) throws SQLException
(
return false;
)

public boolean inserisciTurista (BeanTurista pTurista) throws SQLException
(
return false;
)

public boolean modificaTurista (BeanTurista pTurista) throws SQLException
(
return false;
)

public BeanTurista ottieniTurista (String pUsername) throws SQLException
(
return null;
)

public BeanTurista ottieniTurista (int pIdTurista) throws SQLException
(
/ / ArrayList &lt;BeanTurista&gt; t = new ArrayList &lt;BeanTurista&gt; (0);
/ / T.add (New BeanTurista (1, &quot;username&quot;, &quot;Astrubale&quot;, &quot;Silberschatz&quot;, &quot;Naples&quot;, &quot;Naples&quot;, &quot;0111111&quot;, &quot;80100th&quot;, &quot;Way of the systems, 1&quot;, &quot;NA&quot; ,
/ / &quot;Trapano@solitario.it&quot;, &quot;passwordsolomia&quot;, new Date (), new Date (), true));
/ /
/ / T.add (new BeanTurista (1, &quot;username&quot;, &quot;Astrubale&quot;, &quot;Silberschatz&quot;, &quot;Naples&quot;, &quot;Naples&quot;, &quot;0111111&quot;, &quot;80100th&quot;, &quot;Way of the systems, 1&quot;, &quot;NA&quot; ,
/ / &quot;Trapano@solitario.it&quot;, &quot;passwordsolomia&quot;, new Date (), new Date (), true));
/ /
/ / Return t;

return (new BeanTurista (1, &quot;username&quot;, &quot;Astrubale&quot;, &quot;Silberschatz&quot;, &quot;Naples&quot;, &quot;Naples&quot;, &quot;0111111&quot;, &quot;80100th&quot;, &quot;Way of the systems, 1&quot;, &quot;NA&quot;,
&quot;trapano@solitario.it&quot;, &quot;passwordsolomia&quot;, new Date (), new Date (), true));
)

public ArrayList &lt;BeanTurista&gt; ottieniTuristi (String pUsernameTurista)
throws SQLException
(
return null;
)

public ArrayList &lt;BeanTurista&gt; ottieniTuristi (boolean condition)
throws SQLException
(
return null;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBVisitaBC</id>
      <content>package unisa.gps.etour.control.GestioneBeniCulturali.test.stub;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.bean.BeanVisitaPR;
import unisa.gps.etour.repository.IDBVisitaBC;

public class DBVisitaBC implements IDBVisitaBC
(
public boolean inserisciVisitaBC (BeanVisitaBC PVIS) throws SQLException
(
return false;
)

public boolean modificaVisitaBC (BeanVisitaBC PVIS) throws SQLException
(
return false;
)

&lt;BeanVisitaBC&gt; ottieniListaVisitaBC public ArrayList (int pIdBeneCulturale)
throws SQLException
(
&lt;BeanVisitaBC&gt; FinteVisite ArrayList = new ArrayList &lt;BeanVisitaBC&gt; (0);

finteVisite.add (new BeanVisitaBC (4, 1, &quot;beautiful exhibition&quot;, 1, new Date ()));
finteVisite.add (new BeanVisitaBC (3, 1, &quot;show particular but interesting&quot;, 1, new Date ()));
finteVisite.add (new BeanVisitaBC (4, 1, &quot;beautiful exhibition&quot;, 1, new Date ()));
finteVisite.add (new BeanVisitaBC (3, 1, &quot;show particular but interesting&quot;, 1, new Date ()));
finteVisite.add (new BeanVisitaBC (4, 1, &quot;beautiful exhibition&quot;, 1, new Date ()));
finteVisite.add (new BeanVisitaBC (3, 1, &quot;show particular but interesting&quot;, 1, new Date ()));
finteVisite.add (new BeanVisitaBC (4, 1, &quot;beautiful exhibition&quot;, 1, new Date ()));
finteVisite.add (new BeanVisitaBC (3, 1, &quot;show particular but interesting&quot;, 1, new Date ()));
finteVisite.add (new BeanVisitaBC (4, 1, &quot;beautiful exhibition&quot;, 1, new Date ()));
finteVisite.add (new BeanVisitaBC (3, 1, &quot;show particular but interesting&quot;, 1, new Date ()));

/ / FinteVisite.add (new BeanVisitaBC (5, 1, &quot;This show is not 'evil', 1, new Date (new Date (). GetTime () - (unisa.gps.etour.util.CostantiGlobali.TRENTA_GIORNI * 1 ))));
finteVisite.add (new BeanVisitaBC (5, 1, &quot;This show is not 'evil', 1, new Date (new Date (). getTime () - 2591000000L)));
finteVisite.add (new BeanVisitaBC (3, 1, &quot;This show is not 'evil', 1, new Date (new Date (). getTime () - (unisa.gps.etour.util.CostantiGlobali.TRENTA_GIORNI * 2)) ));

/ / FinteVisite.add (new BeanVisitaBC (1, 1, &quot;E 'nice but you pay so much!&quot;, 2, new Date (106, 0, 23)));
/ / FinteVisite.add (new BeanVisitaBC (3, 1, &quot;The food is pretty good!&quot;, 1, new Date (106, 3, 23)));
/ / FinteVisite.add (new BeanVisitaBC (4, 1, &quot;We eat very well!&quot;, 2, new Date (107, 4, 4)));
/ / FinteVisite.add (new BeanVisitaBC (1, 1, &quot;We eat!&quot;, 3, new Date (107, 5, 24)));
/ / FinteVisite.add (new BeanVisitaBC (5, 1, &quot;Beautiful place&quot;, 4, new Date (107, 4, 25)));
/ / FinteVisite.add (new BeanVisitaBC (4, 1, &quot;Excellent views of the sea&quot;, 5, new Date (107, 4, 25)));
/ / FinteVisite.add (new BeanVisitaBC (3, 1, &quot;Bell&quot;, 6, new Date (107, 4, 25)));
/ / FinteVisite.add (new BeanVisitaBC (3, 1, &quot;I think it's a bad place&quot;, 7, new Date (107, 4, 26)));
/ / FinteVisite.add (new BeanVisitaBC (3, 1, &quot;W open air&quot;, 8, new Date (107, 4, 27)));
/ / FinteVisite.add (new BeanVisitaBC (5, 1, &quot;better than others&quot;, 9, new Date (107, 5, 2)));
/ / FinteVisite.add (new BeanVisitaBC (3, 1, &quot;Forza Napoli&quot;, 10, new Date (107, 5, 8)));
/ / FinteVisite.add (new BeanVisitaBC (4, 1, &quot;The food is pretty good!&quot;, 11, new Date (107, 5, 9)));
/ / FinteVisite.add (new BeanVisitaBC (5, 1, &quot;We eat very well!&quot;, 12, new Date (107, 5, 11)));
/ / FinteVisite.add (new BeanVisitaBC (4, 1, &quot;very good&quot;, 13, new Date (107, 5, 12)));
/ / FinteVisite.add (new BeanVisitaBC (5, 1, &quot;very good&quot;, 14, new Date (107, 5, 13)));
/ / FinteVisite.add (new BeanVisitaBC (5, 1, &quot;I was really good&quot;, 15, new Date (107, 5, 13)));
/ / FinteVisite.add (new BeanVisitaBC (4, 1, &quot;good place&quot;, 16, new Date (107, 5, 14)));
/ / FinteVisite.add (new BeanVisitaBC (3, 1, &quot;I guess I'm not going back&quot;, 17, new Date (107, 5, 23)));
/ / FinteVisite.add (new BeanVisitaBC (3, 1, &quot;I think there is better&quot;, 18, new Date (107, 5, 24)));
/ / FinteVisite.add (new BeanVisitaBC (2, 1, &quot;sucks&quot;, 19, new Date (107, 5, 24)));
/ / FinteVisite.add (new BeanVisitaBC (5, 1, &quot;Too beautiful&quot;, 20, new Date (107, 5, 25)));

finteVisite return;
)

&lt;BeanVisitaBC&gt; ottieniListaVisitaBCTurista public ArrayList (int pIdTurista)
throws SQLException
(
return null;
)

public BeanVisitaBC ottieniVisitaBC (pIdBeneCulturale int, int pIdTurista)
throws SQLException
(
return null;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DBVisitaPR</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import Java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanVisitaPR;

/ **
* Class that implements the interface IDBVisitaPR
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class DBVisitaPR implements IDBVisitaPR
(
/ / Empty constructor
public DBVisitaPR ()
(

)

public boolean inserisciVisitaPR (BeanVisitaPR PVIS) throws SQLException
(
/ / Variable for the connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Create the date of visit
java.sql.Date dataVisita = new Date (pVisita.getDataVisita ()
. getTime ());
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to get the average rating of a property
QueryMediaVoti String = &quot;SELECT MediaVoti, NumeroVoti FROM puntodiristoro WHERE Id =&quot;
+ PVisita.getIdPuntoDiRistoro ();
result = stat.executeQuery (queryMediaVoti);
/ / Variable for the average rating
double average = 0;
/ / Variable for the number of votes
numeroVoti int = 0;
if (result.next ())
(
average = result.getDouble ( &quot;MediaVoti&quot;);
numeroVoti = result.getInt (NumeroVoti &quot;);
average = ((average * numeroVoti) + pVisita.getVoto ())
/ + + NumeroVoti;
)
/ / Query for the insertion
String query = &quot;INSERT INTO visitapr (IdTurista, IdPuntoDiRistoro, DataVisita, Vote, Comment) VALUES (&quot;
+ PVisita.getIdTurista ()
+ &quot;&quot;
+ PVisita.getIdPuntoDiRistoro ()
+ &quot; '&quot;
+ DataVisita
+ &quot; ',&quot;
PVisita.getVoto + () + &quot; '&quot; + pVisita.getCommento () + &quot;')&quot;;
String query2 = &quot;UPDATE puntodiristoro September MediaVoti =&quot; + media
+ &quot;, NumeroVoti =&quot; + numeroVoti + &quot;WHERE Id =&quot;
+ PVisita.getIdPuntoDiRistoro ();
/ / You run the insert query
stat.executeQuery ( &quot;BEGIN&quot;);
int i = stat.executeUpdate (query);
i = i * stat.executeUpdate (query2);
stat.executeQuery ( &quot;COMMIT&quot;);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

public boolean modificaVisitaPR (BeanVisitaPR PVIS) throws SQLException
(
/ / Variable for the connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
TRY
(
/ / Create the date of visit
java.sql.Date dataVisita = new Date (pVisita.getDataVisita ()
. getTime ());
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for amendment
String query = &quot;UPDATE visitapr SET&quot; + &quot;DataVisita = '&quot;
DataVisita + + &quot; ', Comment ='&quot; + pVisita.getCommento ()
+ &quot; 'WHERE IdPuntoDiRistoro =&quot;
PVisita.getIdPuntoDiRistoro + () + &quot;AND IdTurista =&quot;
+ PVisita.getIdTurista ();
/ / You run the query for Change
int i = stat.executeUpdate (query);
/ / This returns the backup
return (i == 1);
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

&lt;BeanVisitaPR&gt; ottieniListaVisitaPR public ArrayList (int pIdPuntoDiRistoro)
throws SQLException
(
/ / Variable for the connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to extract the list of requests for a
/ / Refreshment
String query = &quot;SELECT * FROM visitapr WHERE IdPuntoDiRistoro =&quot;
+ PIdPuntoDiRistoro;
/ / The query is executed
result = stat.executeQuery (query);
&lt;BeanVisitaPR&gt; ArrayList list = new ArrayList &lt;BeanVisitaPR&gt; ();
/ / We extract the results from the result set and moves in
/ / List
/ / To be returned
while (result.next ())
(
java.util.Date dataVisita = new java.util.Date (result.getDate (
&quot;DataVisita&quot;). GetTime ());
lista.add (new BeanVisitaPR (result.getInt ( &quot;Customer&quot;), result
. getInt ( &quot;IdPuntoDiRistoro&quot;), result
. getString ( &quot;Comment&quot;), result.getInt ( &quot;IdTurista&quot;),
dataVisita));
)
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

&lt;BeanVisitaPR&gt; ottieniListaVisitaPRTurista public ArrayList (int pIdTurista)
throws SQLException
(
/ / Variable for the connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query to extract the list of requests for a
/ / Eating place for tourists
String query = &quot;SELECT * FROM visitapr WHERE IdTurista =&quot;
+ PIdTurista;
/ / The query is executed
result = stat.executeQuery (query);
/ / List that will contain the BeanVisitaPR
&lt;BeanVisitaPR&gt; ArrayList list = new ArrayList &lt;BeanVisitaPR&gt; ();
/ / We extract the results from the result set and moves in
/ / List
/ / To be returned
while (result.next ())
(
/ / Add to the list BeanVisitaPR
java.util.Date dataVisita = new java.util.Date (result.getDate (
&quot;DataVisita&quot;). GetTime ());
lista.add (new BeanVisitaPR (result.getInt ( &quot;Customer&quot;), result
. getInt ( &quot;IdPuntoDiRistoro&quot;), result
. getString ( &quot;Comment&quot;), result.getInt ( &quot;IdTurista&quot;),
dataVisita));
)
/ / Return the list
return list;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)

)

public BeanVisitaPR ottieniVisitaPR (pIdPuntoDiRistoro int, int pIdTurista)
throws SQLException
(
/ / Variable for the connection
Connection conn = null;
/ / Variable for the query
Statement stat = null;
/ / Variable for the query results
ResultSet result = null;
TRY
(
/ / Get the connection
DBConnessionePool.ottieniConnessione conn = ();
/ / Create the Statement
stat = conn.createStatement ();
/ / Query for the extraction of the visit made by a tourist to
/ / A given point of comfort
String query = &quot;SELECT * FROM visitapr WHERE IdPuntoDiRistoro =&quot;
PIdPuntoDiRistoro + + &quot;AND IdTurista =&quot; + pIdTurista;
/ / The query is executed
result = stat.executeQuery (query);
/ / Get the bean's visit sought based on the ID of the tourist and
/ / Of refreshment
BeanVisitaPR beanTemp = null;
if (result.next ())
(
/ / Create the BeanVisitaPR
java.util.Date dataVisita = new java.util.Date (result.getDate (
&quot;DataVisita&quot;). GetTime ());
beanTemp = new BeanVisitaPR (result.getInt ( &quot;Customer&quot;), result
. getInt ( &quot;IdPuntoDiRistoro&quot;), result
. getString ( &quot;Comment&quot;), result.getInt ( &quot;IdTurista&quot;),
dataVisita);
)
/ / Return the BeanTemp
beanTemp return;
)
/ / Always runs and takes care to close the Result, the Statement
/ / And Connection
finally
(
if (result! = null)
(
result.close ();
)
if (stat = null)
(
stat.close ();
)
if (conn! = null)
(
DBConnessionePool.rilasciaConnessione (conn);
)
)
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_DeskManager</id>
      <content>ï&gt;¿package unisa.gps.etour.gui;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.DefaultDesktopManager;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import unisa.gps.etour.gui.operatoreagenzia.IScheda;

/ **
* Class for handling custom internal frame inserted in a
* JDesktopPane.
*
* @ Version 0.1
* @ Author Mario Gallo
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class DeskManager extends DefaultDesktopManager
(
private static final String URL_IMAGES = &quot;/ unisa / gps / eTour / gui / images /&quot;;
private JPopupMenu deskMenu;
private JMenuItem riduciTutti;
private JMenuItem ripristinaTutti;
private JMenuItem Closeall;
private Vector &lt;JInternalFrame&gt; iconifiedFrames;
private int locationX;
private int locationY;

/ **
* Default Constructor.
* /
public DeskManager ()
(
super ();
iconifiedFrames = &lt;JInternalFrame&gt; new Vector ();
initializeDeskMenu ();
locationX = 0;
locationY = -1;
)

/ **
* Manages the movement of JInternalFrame inside the area of
* JDesktopPane, preventing the frames are brought out of the visible area.
*
* @ Param javax.swing.JComponent AComponent - the component of which
* Manage the move.
* @ Param int x - x cordinate the point where it was moved
* Component.
* @ Param int y - y cordinate the point where it was moved
* Component.
* /
public void dragFrame (AComponent JComponent, int x, int y)
(
if (AComponent instanceof JInternalFrame)
(
JInternalFrame frame = (JInternalFrame) AComponent;
if (frame.isIcon ())
(
x = frame.getLocation (). x;
y = frame.getLocation (). y;
)
else
(
JDesktopPane desk frame.getDesktopPane = ();
Dimension d = desk.getSize ();
if (x &lt;0)
(
x = 0;
)

else
(
if (x + frame.getWidth ()&gt; d.width)
(
x = d.width - frame.getWidth ();
)
)

if (y &lt;0)
(
y = 0;
)
else
(
if (y + frame.getHeight ()&gt; d.height)
(
y = d.height - frame.getHeight ();
)
)
)
)

super.dragFrame (AComponent, x, y);
)

/ **
* Customize the action of reducing the JInternalFrame an icon, creating
* Clickable bars on the bottom of JDesktopPane.
*
* @ Param JInternalFrame frame - a frame inside a
* JDesktopPane.
* /
public void iconifyFrame (JInternalFrame frame)
(
TRY
(
JDesktopPane desk frame.getDesktopPane = ();
Dimension d = desk.getSize ();
frame.setClosable (false);
frame.setMaximizable (true);
frame.setIconifiable (false);
Rectangle features;
if (frame.isMaximum ())
(
features frame.getNormalBounds = ();
)
else
features frame.getBounds = ();
frame.setSize (200, 30);
setPreviousBounds (frame, features);
if (iconifiedFrames.isEmpty ())
(
locationX = 0;
)
else
(
locationX + = 200;
)
if (locationY == -1)
(
locationY d.height = - 30;
)
if (locationX + 200&gt; d.width)
(
locationX = 0;
locationY -= 30;
)
frame.setLocation (locationX, locationY);
frame.setResizable (false);
iconifiedFrames.add (frame);
)
catch (Exception ex)
(
ex.printStackTrace ();
)
)

/ **
* Restore the frame from the effect of minimizing, resetting the
* Position and size it had before.
*
* @ Param javax.swing.JInternalFrame frame - a frame inside a
* JDesktopPane.
* /
public void deiconifyFrame (JInternalFrame frame)
(
TRY
(
JDesktopPane desk frame.getDesktopPane = ();
Dimension deskSize = desk.getSize ();
iconifiedFrames.remove (frame);
Rectangle features getPreviousBounds = (frame);
if (caratteristiche.width&gt; deskSize.width)
(
caratteristiche.width = deskSize.width;
caratteristiche.x = 0;
)
if (caratteristiche.width + caratteristiche.x&gt; deskSize.width)
(
caratteristiche.x = (deskSize.width - caratteristiche.width) / 2;
)
if (caratteristiche.height&gt; deskSize.height)
(
caratteristiche.height = deskSize.height;
caratteristiche.y = 0;
)
if (caratteristiche.height + caratteristiche.y&gt; deskSize.height)
(
caratteristiche.y = (deskSize.height - caratteristiche.height) / 2;
)
frame.setSize (caratteristiche.width, caratteristiche.height);
frame.setLocation (caratteristiche.x, caratteristiche.y);
frame.setIconifiable (true);
frame.setClosable (true);
if (frame instanceof IScheda)
(
frame.setMaximizable (false);
frame.setResizable (false);
)
else
(
frame.setMaximizable (true);
frame.setResizable (true);
)
locationX -= 200;
if (locationX &lt;0)
(
locationX = deskSize.width / 200 - 200;
if (locationY! = deskSize.height - 30)
(
locationY -= 30;
)
)
repaintIconifiedFrames (desk);
)
catch (Exception ex)
(
ex.printStackTrace ();
)
)

/ **
* Return the focus to a selected frame, and, if the frame
* Is iconificato, the deiconifica.
*
* @ Param JInternalFrame frame - a frame within a
* JDesktopPane
* /
public void activateFrame (JInternalFrame frame)
(
TRY
(
if (frame.isIcon ())
frame.setIcon (false);
frame.setSelected (true);
super.activateFrame (frame);
)
catch (PropertyVetoException s)
(
e.printStackTrace ();
)

)

/ **
* Center the frame supplied as a parameter in JDesktopPane.
*
* @ Param javax.swing.JInternalFrame frame - a frame inside a
* JDesktopPane.
* @ Return void
* /
public void centerFrame (JInternalFrame frame)
(
JDesktopPane desk frame.getDesktopPane = ();
Dimension d = desk.getSize ();
F = Dimension frame.getSize ();
frame.setLocation (d.width / 2 - f.width / 2, d.height / 2 - f.height
/ 2);
)

/ **
* Redraw the frames in the desktop iconificati bread provided.
*
* @ Param javax.swing.JDesktopPane Desk - a desktop bread associated with a
* Desk manager.
* @ Throws IllegalArgumentException - was supplied as a parameter
* JDesktopPane which is not associated with a Desk Manager.
* /
public void repaintIconifiedFrames (JDesktopPane desk)
throws IllegalArgumentException
(
if (desk.getDesktopManager ()! = this)
throw new IllegalArgumentException (
&quot;I found no object&quot;
+ &quot;Type DeskManager associated&quot;);
&lt;JInternalFrame&gt; Iconificati = iconifiedFrames.iterator iterator ();
int i = 0;
int xLocation;
int yLocation = desk.getHeight () - 30;
while (iconificati.hasNext ())
(
Current = iconificati.next JInternalFrame ();
xLocation = 200 * i;
if (xLocation + 200&gt; = desk.getWidth ())
(
xLocation = 0;
yLocation -= 30;
i = 0;
)
corrente.setLocation (xLocation, yLocation);
i + +;
)
)

/ **
* Redraw (and resize if necessary) all the frames contained in a
* Since JDesktopPane.
*
* @ Param javax.swing.JDesktopPane Desk - a desktop pane.
* @ Throws IllegalArgumentException - if the desktop bread supply is not
* Associated with a desktop manager like DeskManager.
* /
public void repaintAllFrames (JDesktopPane desk)
throws IllegalArgumentException
(
if (desk.getDesktopManager ()! = this)
throw new IllegalArgumentException (
&quot;I found no object&quot;
+ &quot;Type DeskManager associated&quot;);
JInternalFrame [] frames = desk.getAllFrames ();
Dimension deskSize = desk.getSize ();
for (int i = 0; i &lt;frames.length i + +)
(
JInternalFrame current = frames [i];
if (! corrente.isIcon ())
(
Rectangle frameBounds = corrente.getBounds ();
if (frameBounds.width&gt; deskSize.width)
frameBounds.width = deskSize.width;
if (frameBounds.height&gt; deskSize.height)
frameBounds.height = deskSize.height;
if (frameBounds.x + frameBounds.width&gt; deskSize.width)
frameBounds.x = deskSize.width - frameBounds.width;
if (frameBounds.y + frameBounds.height&gt; deskSize.height)
frameBounds.y = deskSize.height - frameBounds.height;
corrente.setBounds (frameBounds);
)

)
repaintIconifiedFrames (desk);
)

/ **
* Open a frame of the class specified using the display
* Waterfall. If you already have a frame of classes given, the frame is
* Activated.
*
* @ Param class class - a class type that extends JInternalFrame.
* @ Param javax.swing.JDesktopPane Desk - a desktop pane.
* @ Throws IllegalArgumentException - The class provided is not a
* JInternalFrame.
* /
public void openFrame (Class class, JDesktopPane desk)
throws IllegalArgumentException
(
if (classe.getSuperclass ()! = JInternalFrame.class)
throw new IllegalArgumentException (
&quot;The class provided input has&quot;
+ &quot;As a superclass javax.swing.JInternalFrame.&quot;);
TRY
(
JInternalFrame [] frames = desk.getAllFrames ();
int i;
for (i = 0; i &lt;frames.length i + +)
if (frames [i]. getClass (). equals (class))
break;
if (i == frames.length)
(
JInternalFrame new = (JInternalFrame) classe.newInstance ();
desk.add (new, Integer.MAX_VALUE);
Dimension frameSize = nuovo.getPreferredSize ();
nuovo.setSize (frameSize);
Dimension deskSize = desk.getSize ();
PosNuovo Point = new Point (10, 10);
for (i = frames.length - 1, i&gt; = 0; i -)
(
if (frames [i]. getLocation (). equals (posNuovo))
(
posNuovo.x = frames [i]. getLocation (). x + 30;
posNuovo.y = frames [i]. getLocation (). y + 30;
)
)
if ((posNuovo.x + frameSize.width&gt; deskSize.width)
| | (PosNuovo.y + frameSize.height&gt; deskSize.height))
centerFrame (new);
else
nuovo.setLocation (posNuovo);
nuovo.setVisible (true);
)
else
(
activateFrame (frames [i]);

)
)
catch (Exception ex)
(
ex.printStackTrace ();
)
)

/ **
* Displays a popup menu with options for frames of a desktop bread
* The selected location.
*
* @ Param java.awt.Point Pointe - the point where to place the menu.
* @ Param javax.swing.JDesktopPane desk - a JDesktopPane which &amp;grave; an associated
* Instance of DeskManager.
* @ Throws IllegalArgumentException - &amp;grave; was provided as a parameter
* JDesktopPane that &amp;grave; not associated with a Desk Manager.
* /
public void showPopupMenu (Point Pointe, JDesktopPane desk)
(
if (desk.getDesktopManager ()! = this)
throw new IllegalArgumentException (
&quot;I found no object&quot;
+ &quot;Type DeskManager associated&quot;);
ripristinaTutti.setEnabled (true);
chiudiTutti.setEnabled (true);
riduciTutti.setEnabled (true);
JInternalFrame [] frames = desk.getAllFrames ();
if (frames.length == 0)
(
ripristinaTutti.setEnabled (false);
chiudiTutti.setEnabled (false);
riduciTutti.setEnabled (false);
)
if (iconifiedFrames.size () == 0)
(
ripristinaTutti.setEnabled (false);

)
if (iconifiedFrames.size () == frames.length)
(
riduciTutti.setEnabled (false);
)
deskMenu.show (desk, aPoint.x, aPoint.y);
)

/ **
* Deiconifica all frames previously iconificati.
*
* /
public void deiconifyAll ()
(
if (iconifiedFrames.size ()! = 0)
(
&lt;JInternalFrame&gt; Vector copy = (Vector &lt;JInternalFrame&gt;) iconifiedFrames
. clone ();
&lt;JInternalFrame&gt; Frames = copia.iterator iterator ();
while (frames.hasNext ())
(
TRY
(
frames.next (). setIcon (false);
)
catch (PropertyVetoException s)
(
e.printStackTrace ();
)

)
copy = null;
iconifiedFrames.removeAllElements ();

)
)

/ **
* Minimize all frames of a JDesktopPane provided in &amp;grave; an associated
* DeskManager.
*
* @ Param JDesktopPane Desk - a desktop pane.
* @ Throws IllegalArgumentException - &amp;grave; was provided as a parameter
* JDesktopPane that &amp;grave; not associated with a Desk Manager.
* /
public void iconifyAll (JDesktopPane desk)
(
if (desk.getDesktopManager ()! = this)
throw new IllegalArgumentException (
&quot;I found no object&quot;
+ &quot;Type DeskManager associated&quot;);
JInternalFrame [] frames = desk.getAllFrames ();
for (int i = 0; i &lt;frames.length i + +)
TRY
(
frames [i]. setIcon (true);
)
catch (PropertyVetoException s)
(
e.printStackTrace ();
)
)

/ **
* Close all frames in a given JDesktopPane.
*
* @ Param javax.swing.JDesktopPane Desk - a desktop &amp;grave; bread in an associated
* DeskManager.
* @ Throws IllegalArgumentException - &amp;grave; was provided as a parameter
* JDesktopPane that &amp;grave; not associated with a Desk Manager.
* /
public void closeAll (JDesktopPane desk)
(
if (desk.getDesktopManager ()! = this)
throw new IllegalArgumentException (
&quot;I found no object&quot;
+ &quot;Type DeskManager associated&quot;);
JInternalFrame [] frames = desk.getAllFrames ();
if (frames.length! = 0)
(
for (int i = 0; i &lt;frames.length i + +)
frames [i]. dispose ();
iconifiedFrames.removeAllElements ();
)
)

/ **
* Initialize the DeskMenu.
*
* /
public void initializeDeskMenu ()
(
deskMenu = new JPopupMenu ();
riduciTutti = new JMenuItem ( &quot;Collapse All&quot;);
riduciTutti.setIcon (new ImageIcon (getClass (). getResource (
URL_IMAGES + &quot;reduceAll.png &quot;)));
ripristinaTutti = new JMenuItem ( &quot;Reset All&quot;);
ripristinaTutti.setIcon (new ImageIcon (getClass (). getResource (
URL_IMAGES + &quot;activateall.png &quot;)));
Closeall = new JMenuItem ( &quot;Close All&quot;);
chiudiTutti.setIcon (new ImageIcon (getClass (). getResource (
URL_IMAGES + &quot;closeall.png &quot;)));
deskMenu.add (riduciTutti);
deskMenu.addSeparator ();
deskMenu.add (ripristinaTutti);
deskMenu.addSeparator ();
deskMenu.add (Closeall);
ActionListener menuListener = new ActionListener ()
(
public void actionPerformed (ActionEvent aEvent)
(
if (aEvent.getSource () == ripristinaTutti)
deiconifyAll ();
if (aEvent.getSource () == Closeall)
closeAll ((JDesktopPane) deskMenu.getInvoker ());
if (aEvent.getSource () == riduciTutti)
iconifyAll ((JDesktopPane) deskMenu.getInvoker ());
)

);
riduciTutti.addActionListener (menuListener);
ripristinaTutti.addActionListener (menuListener);
chiudiTutti.addActionListener (menuListener);
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_ElencoCategorie</id>
      <content>ï&gt;¿package unisa.gps.etour.control.fuzzy;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;

public class ElencoCategorie implements Serializable
(

/ **
* Keeps track of data in each category
* /
private static final long serialVersionUID = 1L;
private Hashtable &lt;string, Categoria&gt; categories, / / hash table that keeps
/ / For each category a
/ / Class category
private Hashtable &lt;string, float[]&gt; totTermini / / hash table that keeps
/ / The terms of all
/ / Categories
maxDist float, / / contains the maximum distances

/ **
* The constructor initializes the two hash tables that contain
* Categories and terms of all categories
* /
public ElencoCategorie ()
(
categories &lt;string, Categoria&gt; = new Hashtable ();
totTermini &lt;string, float[]&gt; = new Hashtable ();
)

/ **
* Access method attribute maxDist
*
* @ Return the maximum distance of all the terms in all categories
* /
public float getMaxDist ()
(
maxDist return;
)

/ **
* Access method to the table of categories
*
* @ Return categories
* /
&lt;string, Categoria&gt; getAllCategorie public Hashtable ()
(
return categories;
)

/ **
* Method of accessing the table of total time
*
* @ Return totTermini
* /
&lt;string, float[]&gt; getTotTermini public Hashtable ()
(
totTermini return;
)

/ **
* Method to access a category in the table of
* Categories
*
* @ Param pNomeCategoria
* @ Return object categories representing the category name
* PNomeCategoria
* /
getCategoria public Category (String pNomeCategoria)
(

if (esisteCategoria (pNomeCategoria)) / / if there is the appropriate category
return categorie.get (pNomeCategoria) / / returns the
/ / Assciato to pNomeCategoria

return null, / / otherwise null
)

/ **
* Method of accessing the values of a particular term in this
* Category table
*
* @ Param pTermine
* @ Return Returns the values associated with the term pTermine
* /
public float [] getTermine (String pTermine)
(
if (esisteTermine (pTermine)) / / if the term is present in tebella
/ / Terms of total
return (float []) totTermini.get (pTermine) / / return the vaolre
/ / Associate

return null, / / null otherwise
)

/ **
* Method which allows you to add a category to the table of
* Categories
*
* @ Param pNomeCategoria category name to add
* @ Param object associated pCategoria category
* @ Return true if the operation was successfully carried out false
* Otherwise
* /
public boolean addCategoria (String pNomeCategoria, star pCategoria)
(
if (! esisteCategoria (pNomeCategoria)) / / if the category exists
return false; / / returns false

categorie.put (pNomeCategoria, pCategoria), / / otherwise load the
/ / Category in the table

return true; / / returns true
)

/ **
* Edit a category of the category table
*
* @ Param pNomeCategoria category name to edit
* @ Param object pCategoria be associated with this category
* @ Return true if the operation was successfully carried out false
* Otherwise
* /
public boolean setCategoria (String pNomeCategoria, star pCategoria)
(
if (esisteCategoria (pNomeCategoria)) / / if the category does not exist
return false; / / returns false

categorie.put (pNomeCategoria, pCategoria) / / update the table of
/ / Catogorie

return true; / / returns true
)

/ **
* Method which allows you to set the value of a term in the tables
* Total time
*
* @ Param name pTermine term
* @ Param pVal value to associate with the term
* /
public void setTermine (String pTermine, float [] pVal)
(

totTermini.put (pTermine, pVal);
)

/ **
* Method which allows the value of the seven kings of the maximum distance of
* Terms from one category
*
* @ Param pMaxDist
* /
public void setMaxDist (float pMaxDist)
(
maxDist = pMaxDist;
)

/ **
* Method which allows to derive a collection of names of iterable
* All categories in the categories tabela
*
* @ Return string iterable Collection
* /
public Iterable &lt;String&gt; Categories ()
(
List &lt;String&gt; toReturn &lt;String&gt; = new ArrayList ();// create a new list
for (Enumeration &lt;String&gt; categorie.keys val = (); val.hasMoreElements ();)// iterates
/ / N
/ / Times
/ / Where
/ / N is
/ / The
/ / Number
/ / By
/ / Categories
/ / Current
/ / In
/ / Table
(
toReturn.add (val.nextElement ());// adds to the list the name of
/ / A category
)

toReturn return;
)

/ **
* Method aids to verify the existence of a category
* In the table of categories
*
* @ Param name of the category PKEY
* @ Return true if the category exists false otherwise
* /
public boolean esisteCategoria (String PKEY)
(
TRY
(
categorie.get (PKEY), / / try to extract the category name PKEY
/ / The table of categories
return true; / / if the transaction does not raise exceptions category
/ / Exists and returns true
)
catch (NullPointerException e)
(
return false; / / false otherwise
)
)

/ **
* Method aids to verify the existence of a term
* In the table of total time
*
* @ Param PKEY term
* @ Return true if the term exists false otherwise
* /
public boolean esisteTermine (String PKEY)
(
/ / see esisteCategoria
TRY
(
if (totTermini.get (PKEY)! = null)
return true;
)
catch (NullPointerException e)
(
return false;
)

return false;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_FeedBackTableModel</id>
      <content>ï&gt;¿/ *
* FeedbackTableModel.java
*
* 1.0
*
* 21/05/2007
*
* 2007 eTour Project - Copyright by SE @ SA Lab - DMI University of Salerno
* /
package unisa.gps.etour.gui.operatoreagenzia.tables;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

table .*;

import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.bean.BeanVisitaPR;

/ **
* &lt;b&gt; FeedbackTableModel &lt;/ b&gt;
* &lt;p&gt; 'Container model of data for feedback received
* To be a cultural or a refreshment. &lt;/ P&gt;
*
* @ See javax.swing.table.AbstractTableModel
* @ See unisa.gps.etour.bean.BeanVisitaBC
* @ See unisa.gps.etour.bean.BeanVisitaPR
* @ Version 1.0
* @ Author Mario Gallo
*
* /
public class extends FeedBackTableModel AbstractTableModel
(

private static final long serialVersionUID = 1L;
private static final String [] headers = ( &quot;rating&quot;, &quot;Comment&quot;,
&quot;Release Date&quot;, &quot;Issued by&quot;);
private static final Class [] (columnClasses = Integer.class, String.class,
Date.class, String.class);
&lt;Object[]&gt; private ArrayList data;

/ **
* Default Constructor. We only provide the model but not
* Loads no data in it.
*
* /
public FeedBackTableModel ()
(
&lt;Object[]&gt; data = new ArrayList ();
)

/ **
* Constructor that takes as input an ArrayList of BeanVisitaBC or
* BeanVisitaPR and copies of the data within the model
* Preparing for display.
*
* @ Param PVIS java.util.ArrayList - the ArrayList of bean.
* /
public FeedBackTableModel (HashMap &lt;?, String&gt; pDatiFeedback)
(
this ();
if (pDatiFeedback == null | | pDatiFeedback.size () == 0)
(
return;
)
Iterator &lt;?&gt; Iter = pDatiFeedback.keySet (). Iterator ();
while (itera.hasNext ())
(
Object current = itera.next ();
if (current instanceof BeanVisitaBC)
(
insertVisitaBC ((BeanVisitaBC) current pDatiFeedback.get (current));
)
else if (current instanceof BeanVisitaPR)
(
insertVisitaPR ((BeanVisitaPR) current pDatiFeedback.get (current));
)
)
)

/ **
* Returns the number of columns provided by the model.
*
* @ Return int - the number of columns.
*
* /
public int getColumnCount ()
(
headers.length return;
)

/ **
* Returns the number of rows currently in the model.
*
* @ Return int - the number of rows.
*
* /
public int GetRowCount ()
(
data.size return ();
)

/ **
* Returns the column name from the index provided.
*
* @ Return String - the name of the column.
* @ Exception IllegalArgumentException - if the column index is not provided
* In the model.
*
* /
public String getColumnName (int pColumn) throws IllegalArgumentException
(
if (pColumn&gt; = getColumnCount () | | pColumn &lt;0)
(
throw new IllegalArgumentException (
&quot;The column index is not provided in the model.&quot;);
)
return headers [pColumn];
)

/ **
* Returns the object in the model to the row and column provided.
*
* @ Param pRow - the line number.
* @ Param pColumn - the column number.
* @ Return Object - the object contained in the selected cell.
* @ Exception IllegalArgumentException - if the index or the row or column not provided
* Are present in the model.
*
* /
public Object getValueAt (pRow int, int pColumn) throws IllegalArgumentException
(
if (pRow&gt; = GetRowCount () | | pRow &lt;0)
(
throw new IllegalArgumentException ( &quot;The row index is not provided in the model.&quot;);
)
if (pColumn&gt; = getColumnCount () | | pColumn &lt;0)
(
throw new IllegalArgumentException ( &quot;The column index is not provided in the model.&quot;);
)
return data.get (pRow) [pColumn];
)

/ **
* Returns the class of objects in the column of which is provided in the index.
*
* @ Param pColumn - the column number.
* @ Return Class - the class of objects of the selected column.
* @ Exception IllegalArgumentException - if the index column does not pro
* In the model.
*
* /
public class getColumnClass (int pColumn) throws IllegalArgumentException
(
if (pColumn&gt; = getColumnCount () | | pColumn &lt;0)
(
throw new IllegalArgumentException ( &quot;The column index is not provided in the model.&quot;);
)
return columnClasses [pColumn];
)

/ **
* Returns whether the selected cell editable.
*
* @ Return boolean - true if the cell editable
* False otherwise
* @ Param pRow - the line number.
* @ Param pColumn - the column number.
* @ Exception IllegalArgumentException - if the index or the row or column are not provided
* In the model.
*
* /
public boolean isCellEditable (pRow int, int pColumn) throws IllegalArgumentException
(
return false;
)

/ **
* The method is inherited by setValueAt TableModel does not need to SitoTableModel
* Because it provided the possibility to change a single cell.
* @ Deprecated
*
* /
public void setValueAt (Object value, int row, int col)
(

)

/ **
*
* Enter data on the feedback received from a cultural
* In the model from Bean.
*
* @ Param BeanVisitaBC PBC - the bean that contains the feedback from
* Cultural.
* @ Throws IllegalArgumentException - if the parameters supplied input not
* Are valid.
*
* /
public void insertVisitaBC (BeanVisitaBC pVisitaBC, String pUsername) throws IllegalArgumentException
(
if (pVisitaBC == null | | pUsername == null | | pUsername.equals (&quot;&quot;))
(
throw new IllegalArgumentException ( &quot;invalid parameters supplied input.&quot;);
)
Object [] aRow = new Object [6];
aRow [0] = pVisitaBC.getVoto ();
aRow [1] = pVisitaBC.getCommento ();
aRow [2] = pVisitaBC.getDataVisita ();
aRow [3] = pUsername;
aRow [4] = pVisitaBC.getIdBeneCulturale ();
aRow [5] = pVisitaBC.getIdTurista ();
data.add (aRow);
)

/ **
*
* Enter data on the feedback received from a refreshment
* In the model from Bean.
*
* @ Param BeanVisitaPR PBC - the bean that contains the feedback from
* Refreshment.
* @ Throws IllegalArgumentException - if the parameters supplied input not
* Are valid.
*
* /
public void insertVisitaPR (BeanVisitaPR pVisitaPR, String pUsername) throws IllegalArgumentException
(
if (pVisitaPR == null | | pUsername == null | | pUsername.equals (&quot;&quot;))
(
throw new IllegalArgumentException ( &quot;invalid parameters supplied input.&quot;);
)
Object [] aRow = new Object [6];
aRow [0] = pVisitaPR.getVoto ();
aRow [1] = pVisitaPR.getCommento ();
aRow [2] = pVisitaPR.getDataVisita ();
aRow [3] = pUsername;
aRow [4] = pVisitaPR.getIdPuntoDiRistoro ();
aRow [5] = pVisitaPR.getIdTurista ();
data.add (aRow);
)
/ **
*
* Updates the comment feedback contained in the table row selected.
*
PNuovoCommento * @ param String - the new comment.
* @ Param pRow - the row to update.
* @ Throws IllegalArgumentException - if &lt;ul&gt; &lt;li&gt; the row index is not present in the model.
* &lt;li&gt; New comment supplied input is zero. &lt;/ Ul&gt;
* /
public void modificaCommento (pNuovoCommento String, int pRow) throws IllegalArgumentException
(
if (pRow&gt; = GetRowCount () | | pRow &lt;0)
(
throw new IllegalArgumentException ( &quot;The row index is not provided in the model.&quot;);
)
if (null == pNuovoCommento)
(
throw new IllegalArgumentException ( &quot;The new comment can not be null.&quot;);
)
data.get (pRow) [1] = pNuovoCommento;
fireTableDataChanged ();
)

/ **
*
* Returns the id of the row receive feedback provided on input.
*
* @ Param pRow int - the row number.
* @ Return int [] - the id of the feedback.
* @ Throws IllegalArgumentException - if the row index does not pro
* In the model.
* /
public int [] getIDFeedback (int pRow) throws IllegalArgumentException
(
if (pRow&gt; = GetRowCount () | | pRow &lt;0)
(
throw new IllegalArgumentException ( &quot;The row index is not provided in the model.&quot;);
)
int [] ids = new int [2];
ids [0] = (Integer) data.get (pRow) [4];
ids [1] = (Integer) data.get (pRow) [5];
return ids;
)

/ **
*
* Returns the id of feedback to line number provided as input and removes it from the model.
*
* @ Param pRow int - the row number.
* @ Return int [] - the id of the feedback.
* @ Exception IllegalArgumentException - if the row index does not pro
* In the model.
*
* /
public int [] removeFeedback (int pRow) throws IllegalArgumentException
(
int [] ids = getIDFeedback (pRow);
data.remove (pRow);
return ids;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_Fuzzy</id>
      <content>ï&gt;¿package unisa.gps.etour.control.fuzzy;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.rmi.RemoteException;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Scanner;

public class Fuzzy
(
/ **
* Class that implements the methods used to calculate the Fuzzy
* Category of membership of a refreshment or a cultural property.
* /

/ **
* Method for calculating the relevance of a term.
*
* @ Param distance: Contains the distance of the term from category
* Analyzed
* @ Param pMaxDist: Contains distaza maximum of all terms in all
* Categories.
* @ Return Returns the relevance of the term in the category.
* /
private static float relevance (float distance, float pMaxDist)
(
return (distance / pMaxDist);

)

/ **
* Method for calculating the distance between a term and a category
*
* @ Param pTermine: Contains the period analyzed
* @ Param pTotTermini: Tables of the total frequency of terms.
* @ Param frequenzaTesto: Table of the terms of the text analyzed.
* @ Param pCategoria: Category analyzed.
* @ Return Returns the distance of the term pTermine by category
* PCategoria
* /
private static float distance (String pTermine,
Hashtable &lt;string, float[]&gt; pTotTermini, float frequenzaTesto,
Category pCategoria)
(

/ / The first variable tracks the frequency of a term
/ / Relating to a category
/ / The second keeps track of fraquenza a deadline for all
/ / Categories
float [] frequenzaCategoria = new float [3], frequenzaTotale = new float [3];

if (pCategoria.esisteTermine (pTermine)) / / if the term is
/ / In category
(
/ / Its frequency in this category is equal to the frequency
/ / KnowledgeBase
/ / More frequency in the search text
frequenzaCategoria = pCategoria.getVal (pTermine);
frequenzaCategoria [0] + = frequenzaTesto;
)
else
(

/ / Otherwise it is equal to the frequency of the term in the text
/ / Analyzed
frequenzaCategoria [0] = frequenzaTesto;
)
if (pTotTermini.get (pTermine)! = null) / / if the term exists in
/ / Table of the total time
frequenzaTotale = pTotTermini.get (pTermine) / / Get the value

frequenzaTotale [0] + = frequenzaTesto, / / the total frequency is given
/ / Frequency in the text
/ / Analizzatp
/ / Plus any frequency stored in memory in the table
/ / Total time

return (frequenzaCategoria [0] / frequenzaTotale [0 ]);// distance is
/ / Equal to
/ / Frequency in
/ / Category
/ / The total frequency Fratto

)

/ **
* Method for calculating the distance of a term from one category.
* Used for training
*
* @ Param pTermine period to analyze
* @ Param pCategoria category from which you must calculate the distance
* @ Param table pTotTermini total time
* @ Return Returns the distance of a term from one category
* /
private static float distance (String pTermine, star pCategoria,
Hashtable &lt;string, float[]&gt; pTotTermini)
(
return ((pCategoria.getVal (pTermine)) [0] / (pTotTermini.get (pTermine)) [0]);
)

/ **
* Implementation of a function T-Norm
*
* @ Param a first value
* @ Param b the second value
* @ Return returns the value calculated using a function T-Norm
* /
private static float tNorm (float a, float b)
(
return ((a * b) / ((2 - ((a + b) - (a * b )))));
/ / Return Math.min (a, b);
/ / Return a * b;
/ / Return Math.max (0, a + b-1);
)

/ **
* Implementation of a function S-Norm
*
* @ Param a first value
* @ Param b the second value
* @ Return returns the value calculated using a function S-Norm
* /
private static float sNorm (float a, float b)
(
return ((a + b) / (1 + a * b));
/ / Return Math.max (a, b);
/ / Return (a + b-(a * b));
/ / Return Math.min (1.1 + b);
)

/ **
* Calculation of similarity between a category and a given text input
*
* @ Param table pTermini worded. It must contain to
* Pgni term values of importance and belonging situated in
Vector float * in positions 1 and 2.
* @ Return returns a numeric value that indicates the similarity of a
* Text with the category on which one has calculated the values of
Importance and belonging *
* /
private static float similarity (Hashtable &lt;string, float[]&gt; pTermini)
(
float sum = 0, / / return value

for (float [] val: pTermini.values ())// for all elements of
/ / Table
(
sum + = (tNorm (val [1], val [0])) / (sNorm (val [1], val [0 ]));// performs
/ / Sum of the values given by the division of function T-Norm
/ / With the function S-Norm made
/ / Between relevance and belonging
)

return sum;
)

/ **
* Method for the calculation of membership of a text to a category
*
* @ Param val indicates the similarity of a text with a category
* @ Param maxSimilarity indicates the maximum similarity found
* @ Return restiuisce a value in the interval [0,1] that indicates the degree of
* Membership of the text to the category x
* /
private static float membership (float val, float maxSimilarity)
(
return (val / maxSimilarity);

)

/ **
* Method to delete a tense special characters and to bring
* All uppercase to lowercase
*
* @ Param string pStr transform
* @ Return restiuisce the text to lowercase characters and no special
* /
private static String replaceAndLower (String pStr)
(
pStr pStr.toLowerCase = ();
pstr = pStr.replace (&quot;,&quot;, &quot;&quot;);
pstr = pStr.replace (&quot;.&quot;, &quot;&quot;);
pStr pStr.replace (&quot;!&quot;, = &quot;&quot;);
pStr pStr.replace (&quot;?&quot;, = &quot;&quot;);
pStr pStr.replace (&quot;'&quot;, = &quot;&quot;);

pStr return;
)

/ **
* Method of retrieving the category you belong to a text
*
* @ Param pDescrizione text to analyze
Restu * @ return a string indicating the category
* @ Throws RemoteException
* /
public static String calcolaCategoria (String pDescrizione)
throws RemoteException
(
if ((pDescrizione == null) | | (pDescrizione.equals (&quot;&quot;)))
return &quot;NULL&quot;;
String text = pDescrizione;
/ / Table of terms associated with the text portion. Will contain
/ / Values of frequency, rilevamza, membership for each term
Hashtable &lt;string, float[]&gt; datiTesto &lt;string, float[]&gt; = new Hashtable ();
/ / Table of categories, each category will contain the value of
/ / Similarity and belonging Text
Hashtable &lt;string, float[]&gt; testoCategoria &lt;string, float[]&gt; = new Hashtable ();
replaceAndLower text = (text) / / delete characters and spaeciali
/ / Returns the text by replacing
/ / Uppercase with lowercase
String [] testoSplit = testo.split ( &quot;&quot;);
for (int i = 0; i &lt;testoSplit.length i + +)
(/ / For each end of the text
float [] toPut = new float [3], / / value to assign to the string
/ / In the hash table
float [] valTmp / / temporary variable containing the values
/ / Associated with the string if it already exists in the hash table
/ / If the string is present in the table picks up the values
/ / And an increase in saving them in to put
/ / Otherwise initialize the new string with frequency = 1
if (testoSplit [i]. length () &lt;= 3) / / delete undefined terms
/ / As important, the inter ...
continue;
if (exists (testoSplit [i], datiTesto)) / / if the time analyzed
/ / Is present in tebella the terms of the analyzed text
(
/ / We get the value of frequency in the table and there
/ / Adds one
valTmp = datiTesto.get (testoSplit [i]);
toPut [0] = valTmp [0];
toPut [0] + = (float) 1 / testoSplit.length;

)
else
(
toPut [0] = (float) 1 / testoSplit.length;
/ / Otherwise initialize the value of frequency to a
/ / Fratto, the total number of terms (relative frequency)
)
/ / Insert the new entry in the table
/ / System.out.println (toPut [0]);
datiTesto.put (testoSplit [i], toPut);
)

/ / You try to open the knowledge base
ElencoCategorie list;
TRY
(
apriElenco list = ();
)
catch (ClassNotFoundException e) / / error opening file kb.sbt
(
throw new RemoteException (
&quot;The knowledge base is missing or corrupt&quot;);
)
catch (Exception e)
(
throw new RemoteException (
&quot;The knowledge base is missing or corrupt&quot;);
)

/ / Is taken from the base of knowledge to the table of total time
&lt;string, Float[]&gt; totTermini = elenco.getTotTermini Hashtable ();
float maxSimilarity = -1, / / holds the value of maximum similarity
for (String CategoryName: elenco.Categorie ())
(/ / For all the categories in the knowledge base
float [] toPut = new float [3], / / value to assign to the string
/ / In the hash table
for (Enumeration &lt;String&gt; datiTesto.keys val = (); val
. hasMoreElements ();)
(/ / For all elements of the table of the terms of the text
String term = val.nextElement ();
/ / We get the value of a term
float [] tmp = datiTesto.get (term);
/ / Calculate range and bearing
tmp [1] = distance (term totTermini, tmp [0], list
. getCategoria (CategoryName));
tmp [2] = importance (tmp [1], elenco.getMaxDist ());
datiTesto.put (term, tmp);
)
/ / We calculate the similarity Once the analysis
/ / All the terms in a category
toPut [0] = similarity (datiTesto);
testoCategoria.put (CategoryName, toPut);
if (maxSimilarity &lt;toPut [0]) / / we update the value of maximum
/ / If necessary similarity
(
maxSimilarity = toPut [0];
)
)

for (String CategoryName: elenco.Categorie ())
(/ / For each category
/ / We get the value of similarity of the text with the category
/ / Analyzed
float [] tmp = testoCategoria.get (CategoryName);
tmp [1] = membership (tmp [0], maxSimilarity), / / we calculate
/ / Membership
/ / Text to the similarity
testoCategoria.put (CategoryName, tmp), / / save everything in
/ / Category table
)

return maxAppartenenza (testoCategoria) / / returns the name output
/ / Category
/ / With the maximum degree of membership
)

/ **
* Method to find the category with which the text has the highest degree of
* Membership
*
* @ Param pTestoCategoria table of categories to the text
Restiuisce * @ return a string indicating the name of the category with which
* The text has the highest degree of membership
* /
private static String maxAppartenenza (
Hashtable &lt;string, float[]&gt; pTestoCategoria)
(
ToReturn String = null, / / return value
float max = -1, / / Maximum value of membership

for (Enumeration &lt;String&gt; pTestoCategoria.keys elm = (); elm
. hasMoreElements ();)
(/ / For all categories of the table of categories of text
String category = elm.nextElement ();
/ / Values are taken of similarity and belonging associated with
/ / Category
float [] tmp = pTestoCategoria.get (category);
if (tmp [1]&gt; max)
(/ / If the degree of membership affiliation just uploaded
/ / Is greater than the previous update data max and toReturn
toReturn = category;
max = tmp [1];
)

)
toReturn return;
)

/ **
* Method used to check whether a term is presented in table
* The terms of the text
*
* @ Param pStr period to analyze
* @ Param pTable tables in terms of the text
* @ Return returns true if the term exists false otherwise
* /
private static boolean exists (String pStr, Hashtable &lt;string, float[]&gt; pTable)
(
TRY
(
if (pTable.get (pStr)! = null)
return true;
)
catch (NullPointerException e)
(
return false;
)

return false;
)

/ **
* Method used to retrieve the knowledge base
*
Restiuisce * @ return an object representing the type ElencoCategorie
* KnowledgeBase
* @ Throws IOException
* @ Throws ClassNotFoundException
* /
private static ElencoCategorie apriElenco () throws IOException,
ClassNotFoundException
(
KBase file = new File ( &quot;kb.sbt &quot;);// you open the file kb.sbt
FileInputStream kBaseStream = new FileInputStream (KBase) / / creates
/ / A stream with the file
ObjectInputStream kBaseObj = new ObjectInputStream (kBaseStream), / / si
/ / Create a stream object with the file
ElencoCategorie toReturn;

toReturn = (ElencoCategorie) kBaseObj.readObject ();
/ / Object is extracted and saved in the file returned in output
toReturn return;
)

/ **
* Method used to create the file. Used in training
*
* @ Param path string indicating the path in which to create the file
* @ Return returns an ObjectOutputStream to the file created
* @ Throws IOException
* /
private static ObjectOutputStream CreateFile (String path)
throws IOException
(
ObjectOutputStream toReturn;
File f = new File (path) / / file is created
if (f.exists ())
f.delete ();

FileOutputStream fout = new FileOutputStream (path);
toReturn = new ObjectOutputStream (fOut), / / create the stream

toReturn return;
)

/ **
* Method used to create the knowledge base
*
* @ Throws RemoteException
* /
public static void training () throws RemoteException
(

String [] elencoCategorie = new String [4] / / array contenentei names
/ / Of categrie be analyzed
/ / Knowledge base
ElencoCategorie list = new ElencoCategorie ();

ObjectOutputStream elencoOut;
TRY
(
/ / Try to create the file
elencoOut = CreateFile ( &quot;kb.sbt&quot;);
)
catch (Exception e)
(
throw new RemoteException ( &quot;Error creating file kb.sbt&quot;);
)

elencoCategorie [0] = &quot;art&quot;;
elencoCategorie [1] = &quot;cinema&quot;;
elencoCategorie [2] = &quot;sport&quot;;
/ / ElencoCategorie [3 ]=&quot;&quot;;

for (int i = 0; i &lt;3; the ++)// for each category
(
/ / Create a new object of type Category, which will contain all
/ / Category data to be analyzed
ToPutCat category = new Category (elencoCategorie [i]);
/ / If the inclusion of the category in the table of categories
/ / Not successful
/ / We throw an exception
if (! elenco.addCategoria (elencoCategorie [i], toPutCat))
(
throw new RemoteException (
&quot;Error creating data of category&quot;
+ ElencoCategorie [i]);
)
/ / You try to read from the folder containing the lyrics of a
/ / Category
/ / 100 sample test
for (Integer j = new Integer (1), j &lt;= 100; j + +)
(
/ / Path of the folder categria
String path = &quot;kb /&quot; + elencoCategorie [i] + &quot;/&quot; + j.ToString ();
/ / Try to read the file ith
FileReader testoReader;
TRY
(
testoReader = new FileReader (path);
)
catch (FileNotFoundException e)
(
/ / If the file does not exist it continues execution from
/ / File i +1
/ / System.out.println ( &quot;Error on file&quot; + path);
continue;
)
TestoScanner scanner = new Scanner (testoReader);
while (testoScanner.hasNextLine ())
(
/ / Read the text file line by line
TestoScanner.nextLine txt = String ();
txt = replaceAndLower (txt);
String [] toIterate = txt.split ( &quot;&quot;);
for (int k = 0 k &lt;toIterate.length k + +)
(/ / For each end of the line
if (toIterate [k]. length () &lt;= 3) / / remove the effect
/ / Undefined terms
/ / Relevant
continue;
float [] valTerm, valTotTerm;
/ / If the term is present in the table of terms
/ / The class analyzed
if (elenco.getCategoria (elencoCategorie [i])
. esisteTermine (toIterate [k]))
(
/ / Its frequency is equal to the value stored in
/ / Table plus one fratto the total number of
/ / Terms of the text
valTerm = elenco.getCategoria (elencoCategorie [i])
. getval (toIterate [k]);
valTerm [0] + = (float) 1 / toIterate.length;
valTotTerm = elenco.getTermine (toIterate [k]);
valTotTerm [0] + = (float) 1 / toIterate.length;
)
else
(
/ / otherwise it is equal to one fratto the total number of words of text
valTerm = new float [3];
valTotTerm = new float [1];
valTerm [0] = (float) 1 / toIterate.length;
valTotTerm [0] = (float) 1 / toIterate.length;
)
/ / save the values calculated in the table of terms of the category analyzed
elenco.setTermine (toIterate [k], valTotTerm);
elenco.getCategoria (elencoCategorie [i]). addTermine (
toIterate [k], valTerm);
if (elenco.getMaxDist () &lt;valTotTerm [0])
elenco.setMaxDist (valTotTerm [0]);
)
)

)
)
for (String CategoryName: elenco.Categorie ())
(/ / for each category
/ / is preflushed the table of terms
Hashtable elenco.getCategoria &lt;string, float[]&gt; terminiCategoria = (
CategoryName). getTermini ();

/ / all the terms are analyzed in the table of loaded terms
for (Enumeration enumTerm &lt;String&gt; terminiCategoria.keys = (); enumTerm
. hasMoreElements ();)
(
/ / is effattuato calculating bearing and distance
String term = enumTerm.nextElement ();
float [] val = terminiCategoria.get (term);
val [1] = distance (term elenco.getCategoria (CategoryName)
elenco.getTotTermini ());
val [2] = importance (val [1], elenco.getMaxDist ());
)
/ / data is stored in the table of the terms of the class
elenco.getCategoria (CategoryName). setTermini (terminiCategoria);
)
TRY
(/ / writing the results of operations on files
elencoOut.writeObject (list);
)
catch (Exception e)
(
throw new RemoteException ( &quot;Error writing file&quot;);
)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneAdvertisement</id>
      <content>ï&gt;¿/ **
* Class that implements the general
* Management dell'advertisement.
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* 2007 eTour Project - Copyright by SE @ SA Lab DMI University of Salerno
* /
package unisa.gps.etour.control.GestioneAdvertisement;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

import unisa.gps.etour.bean.BeanBanner;
import unisa.gps.etour.bean.BeanConvenzione;
import unisa.gps.etour.repository.DBBanner;
/ / import unisa.gps.etour.control.GestioneAdvertisement.test.stubs .*;
import unisa.gps.etour.repository.DBConvenzione;
import unisa.gps.etour.repository.IDBBanner;
import unisa.gps.etour.repository.IDBConvenzione;
import unisa.gps.etour.util.ControlloDati;
import unisa.gps.etour.util.CostantiGlobali;
import unisa.gps.etour.util.MessaggiErrore;

GestioneAdvertisement UnicastRemoteObject public class extends implements
IGestioneAdvertisement
(
private static final long serialVersionUID = 1L;
/ ** An object that handles operations on the banner * /
Private IDBBanner dbBanner;
/ **
* Constructor, instantiates an object of type DBBanner that
* Contains methods that perform operations on data
* Entity banner.
*
* @ Throws RemoteException
* /
public GestioneAdvertisement () throws RemoteException
(
super ();
dbBanner = new DBBanner ();
)
/ **
* Delete a banner and the image associated with the system.
*
* @ Param id of the banner to remove pBannerID
* @ Throws RemoteException
* /
public boolean cancellaBanner (int pIdBanner) throws RemoteException
(
/ * Bean containing the data of the banner * /
BeanBanner banner;

TRY
(
/ * Load the banner and check the data * /
banner = dbBanner.ottieniBannerDaID (pIdBanner);
if (! ControlloDati.checkBeanBanner (banner)) (
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
)
/ * Remove the image associated with the banner * /
Image file = new File (banner.getPercorsoFile ());
immagine.delete ();
/ * Clear the whole bean banner * /
return (dbBanner.cancellaBanner (pIdBanner));
)
catch (SQLException e) (
throw new RemoteException (MessaggiErrore.ERRORE_CONNESSIONE_DBMS);
)
)
/ **
* Method to change the image associated with the banner:
* Delete the old image and stores the new
* Enjoy the same path as the old image.
*
* @ Param id pBannerID banner
* @ Param pImmagine ImageIcon object containing the new image of the banner
* @ Return returns true if the operation is successful
* /
public boolean modificaBanner (int pBannerID, Imagelcon pImmagine) throws RemoteException
(

TRY
(
/ * Performs a check on the image of the banner * /
if (! ControlloDati.checkImmagine (pImmagine)) (
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
)
/ * Load the icon image * /
BufferedImage buffImg = (BufferedImage) pImmagine.getImage ();
/ * Load the data of the banner * /
BeanBanner banner = dbBanner.ottieniBannerDaID (pBannerID);
/ * Check the banner on the data uploaded * /
if (! ControlloDati.checkBeanBanner (banner)) (
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
)
/ * Rewrite the image file and returns the result of the operation * /
Imgfile file = new File (banner.getPercorsoFile ());
return (ImageIO.write (buffImg, &quot;jpg&quot;, Imgfile));
)
catch (SQLException e) (
throw new RemoteException (MessaggiErrore.ERRORE_CONNESSIONE_DBMS);
)
catch (Exception e) (
if (e instanceof RemoteException)
(
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
) else
(
throw new RemoteException (MessaggiErrore.ERRORE_FILE);
)
)
)
/ **
* Returns a list of banners for a refreshment.
* Use the method (@ link) DBBanner.ottieniBanner
*
* @ Param ID pPuntoDiRistoroID refreshment
* @ Throws RemoteException
* /
&lt;BeanBanner,ImageIcon&gt; ottieniBannersDaID public HashMap (int pIdPuntoDiRistoro)
throws RemoteException (
/ * Create a HashMap that will hold the banner and associated images * /
&lt;BeanBanner,ImageIcon&gt; ToReturn HashMap &lt;BeanBanner, ImageIcon&gt; = new HashMap ();

TRY
(
/ * Get the list of banners for a refreshment point * /
ArrayList &lt;BeanBanner&gt; listaBanner = dbBanner.ottieniBanner (pIdPuntoDiRistoro);
/ * For each banner valid list * /
for (BeanBanner banner: listaBanner) (
/ * If the banner is a valid charge in the HashMap with the image file * /
if (ControlloDati.checkBeanBanner (banner)) (
/ * Create the image file * /
FileImmagine file = new File (banner.getPercorsoFile ());
/ * Create an object ImageIcon from the image file * /
ImageIcon icon = new ImageIcon (ImageIO.read (fileImmagine));
/ * Add the banner and the image all'HashMap * /
toReturn.put (banner, icon);
)
)
toReturn return;
)
catch (SQLException e) (
throw new RemoteException (MessaggiErrore.ERRORE_CONNESSIONE_DBMS);
)
catch (Exception e) (
throw new RemoteException (MessaggiErrore.ERRORE_FILE);
)
catch (Exception e) (
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
/ **
* Create and insert a new banner, making sure the num. maximum
* Banner displayed for a refreshment point is
* Already been reached in this case throws an exception to the calling method.
*
* @ Param Id pIDPuntoDiRistoro of refreshment
* @ Param pImmagineBanner ImageIcon object containing the banner image
* @ Return Returns true if the insertion has been successful.
* @ Exception RemoteException
* /
public boolean inserisciBanner (int pIdPuntoDiRistoro, Imagelcon pImmagineBanner)
throws RemoteException
(

TRY
(
/ * Performs a check on the image * /
if (! ControlloDati.checkImmagine (pImmagineBanner)) (
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
)
/ * Create an object that handles the conventions * /
IDBConvenzione dbConvenzione = new DBConvenzione ();
/ * Load the data of the convention of a refreshment point * /
BeanConvenzione Convention dbConvenzione.ottieniConvezioneAttiva = (pIdPuntoDiRistoro);
/ * Get the number of banners displayed by the Convention Masssimo * /
int maxBanner = convenzione.getMaxBanner ();
/ * Load the list of banners for a refreshment and stores the number * /
int numBanner = (dbBanner.ottieniBanner (pIdPuntoDiRistoro)). size ();
/ * Check that the maximum number of banners is not reached * /
if (! (numBanner &lt;maxBanner))
(
throw new Exception (MessaggiErrore.ERRORE_NUM_BANNER);
)
/ * Create a blank banner * /
Banner BeanBanner = new BeanBanner ();
/ * Create a unique file name * /
String path = CostantiGlobali.SERVER_IMAGE_PATH + pIdPuntoDiRistoro;
int i = 0;
FileImg file = new File (path + &quot;_&quot; + i + &quot;. Jpg&quot;);
while (fileImg.exists ()) (
i + +;
fileImg = new File (path + &quot;_&quot; + i + &quot;. jpg&quot;);
)
/ * Stores the image in the file system * /
BufferedImage im = (BufferedImage) pImmagineBanner.getImage ();
if (! ImageIO.write (im, &quot;jpg&quot;, fileImg)) (
/ * Write failed * /
throw new IOException ();
)
/ * Loads the data in the banner * /
banner.setIdPuntoDiRistoro (pIdPuntoDiRistoro);
banner.setPercorsoFile (fileImg.getPath ());
/ * Insert the banner in the database * /
return (dbBanner.inserisciBanner (banner));
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_CONNESSIONE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_FILE);
)
catch (Exception e)
(
if (e.getMessage (). equals (MessaggiErrore.ERRORE_NUM_BANNER))
(
/ * Has been reached on most of banner inserted num * /
throw new RemoteException (MessaggiErrore.ERRORE_NUM_BANNER);
) else
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

)

)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneAdvertisementAgenzia</id>
      <content>ï&gt;¿/ **
* Implementing the management dell'advertisement
* For the operator agency. Contains methods for managing
* News.
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* 2007 eTour Project - Copyright by SE @ SA Lab DMI University of Salerno
* /
package unisa.gps.etour.control.GestioneAdvertisement;

import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanNews;
/ * Import the stub * /
/ / import unisa.gps.etour.control.GestioneAdvertisement.test.stubs.DBNews;
import unisa.gps.etour.repository.DBNews;
import unisa.gps.etour.repository.IDBNews;
import unisa.gps.etour.util.ControlloDati;
import unisa.gps.etour.util.CostantiGlobali;
import unisa.gps.etour.util.MessaggiErrore;

public class GestioneAdvertisementAgenzia extends GestioneAdvertisement
implements IGestioneAdvertisementAgenzia
(
private static final long serialVersionUID = 1L;
/ ** Contains the methods for collecting news in the database * /
Private IDBNews dbNews;

/ **
* Constructor. Instantiates an object of type (@ link unisa.gps.etour.repository.DBNews).
*
* @ Throws RemoteException
* /
public GestioneAdvertisementAgenzia () throws RemoteException
(
super ();
dbNews = new DBNews ();
)

/ **
* Method which removes news from the database. Uses the
* (@ Link Boolean unisa.gps.etour.repository.IDBNews # cancellaNews (int))
*
* @ Param id pNewsID news be erased.
* @ Return true if the cancellation was successful or FALSE otherwise.
* @ Throws RemoteException
*
* /
public boolean cancellaNews (int pNewsID) throws RemoteException
(

TRY
(
/ * Check that the ID is valid * /
if (pNewsID&gt; 0) (
return (dbNews.cancellaNews (pNewsID));
) else (
return false;
)
) Catch (SQLException e) (
throw new RemoteException (MessaggiErrore.ERRORE_CONNESSIONE_DBMS);
)
)

/ **
* Insert a new news in the database.
* Use the method (@ link unisa.gps.etour.repository.IDBNews # inserisciNews (BeanNews))
* To insert the news and the method (@ link unisa.gps.etour.repository.IDBNews # ottieniNews ())
* To count the number of news in the system.
*
* @ Param Pnews bean containing data news.
* @ Return true if the insertion is successful, false if it was
* Reached the maximum number of news stored or if the insertion fails.
* @ Throws RemoteException
* /
public boolean inserisciNews (BeanNews Pnews) throws RemoteException
(
TRY
(
/ * Check the data of the news * /
if (! ControlloDati.checkBeanNews (Pnews)) (
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
)
/ * Check that has not been exceeded the no. Max news presets * /
int numNews = dbNews.ottieniNews (). size ();
if (numNews &lt;CostantiGlobali.MAX_NEWS_ATTIVE) (
/ * Possible inclusion * /
return (dbNews.inserisciNews (Pnews));
) else (
/ * Insertion is not possible * /
return false;
)
) Catch (SQLException e) (
throw new RemoteException (MessaggiErrore.ERRORE_CONNESSIONE_DBMS);
)
)

/ **
* Method to change data of a news.
* Use the method (@ link unisa.gps.etour.repository.IDBNews # modificaNews (BeanNews)).
*
* @ Param Pnews bean containing the data of news changed.
* @ Return true if the change goes through.
* @ Throws RemoteException
* /
public boolean modificaNews (BeanNews Pnews) throws RemoteException
(

TRY
(
/ * Check the data of the news * /
if (! ControlloDati.checkBeanNews (Pnews)) (
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
)
return (dbNews.modificaNews (Pnews));
) Catch (SQLException e) (
throw new RemoteException (MessaggiErrore.ERRORE_CONNESSIONE_DBMS);
)
)

/ **
* Method that returns an array containing all the news stored in the system.
* Use the method (@ link unisa.gps.etour.repository.IDBNews # ottieniNews ()).
*
* @ Return ArrayList containing beans of news.
* @ Throws RemoteException
* /
&lt;BeanNews&gt; ottieniAllNews public ArrayList () throws RemoteException
(

TRY
(
return (dbNews.ottieniNews ());
) Catch (SQLException e) (
throw new RemoteException (MessaggiErrore.ERRORE_CONNESSIONE_DBMS);
)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneAdvertisementPuntoDiRistoro</id>
      <content>ï&gt;¿/ **
* Class that implements management services dell'advertisement
* For the operator eating place.
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* 2007 eTour Project - Copyright by SE @ SA Lab DMI University of Salerno
* /
package unisa.gps.etour.control.GestioneAdvertisement;

import java.rmi.RemoteException;

public class GestioneAdvertisementPuntoDiRistoro extends GestioneAdvertisement
implements IGestioneAdvertisementPuntoDiRistoro
(

private static final long serialVersionUID = 1L;

/ **
* Constructor, call the constructor of the superclass.
* @ Throws RemoteException
* /
public GestioneAdvertisementPuntoDiRistoro () throws RemoteException
(
super ();
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneBeniCulturaliAgenzia</id>
      <content>package unisa.gps.etour.control.GestioneBeniCulturali;

import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.util.MessaggiErrore;

/ **
* Class management of cultural heritage unique to Agency
*
* @ Author Michelangelo De Simone
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
public class GestioneBeniCulturaliAgenzia extends GestioneBeniCulturaliComune
implements IGestioneBeniCulturaliAgenzia
(
/ *
* Constructor of class, richicama and initializes the class of common management
* /
public GestioneBeniCulturaliAgenzia () throws RemoteException
(
super ();
)

/ *
* Implements the method for the elimination of a cultural system.
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # cancellaBeneCulturale (int)
* /
public boolean cancellaBeneCulturale (int pBeneCulturaleID)
throws RemoteException
(
if (! ControlloBeniCulturali.controllaIdBeneCulturale (pBeneCulturaleID))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);

TRY
(
return (dbbc.cancellaBeneCulturale (pBeneCulturaleID));
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ *
* Implement the method for the insertion of a new cultural object.
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # inserisciBeneCulturale (unisa.gps.etour.bean.BeanBeneCulturale)
* /
public boolean inserisciBeneCulturale (BeanBeneCulturale pBeneCulturale)
throws RemoteException
(
if (! ControlloBeniCulturali.controllaDatiBeneCulturale (pBeneCulturale))
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);

TRY
(
return (dbbc.inserisciBeneCulturale (pBeneCulturale));
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ *
* Implements the method for obtaining all the cultural assets currently in the system.
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # ottieniBeniCulturali ()
* /
&lt;BeanBeneCulturale&gt; ottieniBeniCulturali public ArrayList () throws RemoteException
(
TRY
(
return (dbbc.ottieniListaBC ());
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ *
* Implement the method for changing a cultural asset in the system.
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # modificaBeneCulturale (unisa.gps.etour.bean.BeanBeneCulturale)
* /
public boolean modificaBeneCulturale (BeanBeneCulturale pBeneCulturale)
throws RemoteException
(
if (! ControlloBeniCulturali.controllaDatiBeneCulturale (pBeneCulturale))
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);

TRY
(
return (dbbc.modificaBeneCulturale (pBeneCulturale));
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ *
* Implements the method for adding a tag to a cultural object.
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # aggiungiTagBeneCulturale (int, int)
* /
public boolean aggiungiTagBeneCulturale (pBeneCulturaleID int, int pTagID) throws RemoteException
(
if (! ControlloBeniCulturali.controllaIdBeneCulturale (pBeneCulturaleID) | |! (pTagID&gt; 0))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);

/ *
* This segment of code that actually controls the cultural speficiato
* Have the tag defined.
* /

/ *
* Get all tags to the cultural past for parameter
* /
ArrayList &lt;BeanTag&gt; tempTag = null;

contieneTag boolean = false;

TRY
(
tempTag = dbtag.ottieniTagBeneCulturale (pBeneCulturaleID);
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)

/ *
* Here we iterate to find the tag that speficiato, if it is you set a sentry
* In order not to add a tag twice for the same cultural object.
* /
for (t BeanTag: tempTag)
if (t.getId () == pTagID)
contieneTag = true;

if (! contieneTag)
TRY
(
return (dbtag.aggiungeTagBeneCulturale (pBeneCulturaleID, pTagID));
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

return false;
)

/ *
* Implement the method for removing a tag from a cultural object.
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia # rimuoviTagBeneCulturale (int, int)
* /
public boolean rimuoviTagBeneCulturale (pBeneCulturaleID int, int pTagID) throws RemoteException
(
if (! ControlloBeniCulturali.controllaIdBeneCulturale (pBeneCulturaleID) | |! (pTagID&gt; 0))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);

/ *
* This segment of code that actually controls the cultural speficiato
* Has the specified tag.
* /

/ *
* Get all tags to the cultural past for parameter
* /
ArrayList &lt;BeanTag&gt; tempTag = null;

TRY
(
tempTag = dbtag.ottieniTagBeneCulturale (pBeneCulturaleID);
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)

/ *
* Here we iterate to find the tag that speficiato, if you found the transaction is made
* Removal of the tag and returns control
* /
for (t BeanTag: tempTag)
(
if (t.getId () == pTagID)
(
TRY
(
return (dbtag.cancellaTagBeneCulturale (pBeneCulturaleID, pTagID));
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
)

return false;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneBeniCulturaliComune</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneBeniCulturali;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.repository.DBTag;
/ / import unisa.gps.etour.repository.DBBeneCulturale;
/ / import unisa.gps.etour.repository.DBTurista;
/ / import unisa.gps.etour.repository.DBVisitaBC;
import unisa.gps.etour.repository.IDBBeneCulturale;
import unisa.gps.etour.repository.IDBTag;
import unisa.gps.etour.repository.IDBTurista;
import unisa.gps.etour.repository.IDBVisitaBC;
import unisa.gps.etour.util.CostantiGlobali;
import unisa.gps.etour.util.MessaggiErrore;

/ / Stub
import unisa.gps.etour.control.GestioneBeniCulturali.test.stub.DBBeneCulturale / / ***
import unisa.gps.etour.control.GestioneBeniCulturali.test.stub.DBTurista / / ***
import unisa.gps.etour.control.GestioneBeniCulturali.test.stub.DBVisitaBC / / ***

/ **
* Class management of cultural heritage for operations common to all actors
*
* @ Author Michelangelo De Simone
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
/ **
*
* /
GestioneBeniCulturaliComune UnicastRemoteObject public class extends implements
IGestioneBeniCulturaliComune
(
/ / Connect to DB for Cultural Heritage
protected IDBBeneCulturale dbbc;

/ / Connect to DB Tag
protected IDBTag dbtag;

/ / Connect to DB for the Feedback / Visits
protected IDBVisitaBC dbvisita;

/ / Connect to DB for Tourists
protected IDBTurista dbturista;

/ **
* Constructor; you instantiate all fields relevant to data management;
* Fields are initialized for each instance of the class.
*
* @ Throws RemoteException Exception flow
* /
public GestioneBeniCulturaliComune () throws RemoteException
(
/ / Class Supercostruttore UnicastRemoteObject
super ();

/ / We instantiate objects
TRY
(
dbbc = new DBBeneCulturale ();
dbtag = new DBTag ();
dbvisita = new DBVisitaBC ();
dbturista = new DBTurista ();
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ *
* Implements the method for obtaining a cultural object by Id
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # ottieniBeneCulturale (int)
* /
public BeanBeneCulturale ottieniBeneCulturale (int pBeneCulturaleID) throws RemoteException
(
if (! ControlloBeniCulturali.controllaIdBeneCulturale (pBeneCulturaleID))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);

BBC BeanBeneCulturale = null;

TRY
(
bbc = dbbc.ottieniBeneCulturale (pBeneCulturaleID);
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

bbc return;
)

/ *
* Implements the method for obtaining all the tags of a cultural object.
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # ottieniTagBeneCulturale (int)
* /
&lt;BeanTag&gt; ottieniTagBeneCulturale public ArrayList (int pBeneCulturaleID) throws RemoteException
(
if (! ControlloBeniCulturali.controllaIdBeneCulturale (pBeneCulturaleID))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);

ArrayList &lt;BeanTag&gt; btag = null;

TRY
(
btag = dbtag.ottieniTagBeneCulturale (pBeneCulturaleID);
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

btag return;
)

/ *
* Implements the method to obtain the list of feedback and their username on a property
* Cultural specified by Id
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # ottieniFeedbackBeneCulturale (int)
* /
&lt;BeanVisitaBC, String&gt; ottieniFeedbackBeneCulturale public HashMap (int pBeneCulturaleID) throws RemoteException
(
if (! ControlloBeniCulturali.controllaIdBeneCulturale (pBeneCulturaleID))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);

HashMap &lt;BeanVisitaBC, String&gt; mappaRitorno;

TRY
(
/ / Instantiate the map of the same size as the list of BeanVisitaBC
mappaRitorno = new HashMap &lt;BeanVisitaBC, String&gt; (dbvisita.ottieniListaVisitaBC (pBeneCulturaleID). size ());

/ / For each visit by adding their username
/ / Here we begin to iterate to add to any visit their username
for (BeanVisitaBC b: dbvisita.ottieniListaVisitaBC (pBeneCulturaleID))
mappaRitorno.put (b, dbturista.ottieniTurista (b.getIdTurista ()). GetUserName ());

)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

mappaRitorno return;
)

/ *
* Implements the method to obtain statistics about a cultural past
* Through Id
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # ottieniStatisticheBeneCulturale (int)
* /
&lt;Integer&gt; ottieniStatisticheBeneCulturale public ArrayList (int pBeneCulturaleID) throws RemoteException
(
/ *
* This method returns an ArrayList containing 5 elements (0 .. 4).
* For each index more 'one is the number of equivalent value your feedback
* Index number more 'one.
* Even in this case the method is not 'particularly attractive but it does its dirty work
* Fine.
* /

if (! ControlloBeniCulturali.controllaIdBeneCulturale (pBeneCulturaleID))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);

ArrayList &lt;Integer&gt; listaRisultati &lt;Integer&gt; = new ArrayList (5);

/ / Set all the indices to 0
for (int i = 0; i &lt;5; i + +)
listaRisultati.add (i, Integer.valueOf (0));

/ / Calculate the date for the last thirty days
Date ultimiTrentaGiorni = new Date (new Date (). GetTime () - CostantiGlobali.TRENTA_GIORNI);

TRY
(
/ / Get all visits of a certain cultural
/ / Loop looking for the requests / feedback obtained within the last thirty days
for (BeanVisitaBC b: dbvisita.ottieniListaVisitaBC (pBeneCulturaleID))
if (b.getDataVisita (). after (ultimiTrentaGiorni))
listaRisultati.set (b.getVoto () - 1, Integer.valueOf (listaRisultati.get (b.getVoto () - 1). intValue () + 1));
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

listaRisultati return;
)

/ *
* Implement the method for changing a feedback on a cultural past
* Through Id
*
* @ See unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliComune # modificaFeedbackBeneCulturale (int, unisa.gps.etour.bean.BeanVisitaBC)
* /
public boolean modificaFeedbackBeneCulturale (int pBeneCulturaleID, BeanVisitaBC pBeanVisitaBC) throws RemoteException
(
if (! ControlloBeniCulturali.controllaIdBeneCulturale (pBeneCulturaleID) | |
! ControlloVisiteBeniCulturali.controllaDatiVisitaBeneCulturale (pBeanVisitaBC))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);

/ *
* Please check that the vote has not changed.
* If the vote is changed to an exception is raised
* /
votoOk boolean = true;

TRY
(
votoOk = dbvisita.ottieniVisitaBC (pBeneCulturaleID, pBeanVisitaBC.getIdTurista ()). getVoto () == pBeanVisitaBC.getVoto ();
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

/ *
* If the vote is not changed we proceed to send the message to the method of
* Change the layer's database.
* /
if (votoOk)
TRY
(
return (dbvisita.modificaVisitaBC (pBeanVisitaBC));
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

return false;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestionePuntiDiRistoroAgenzia</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestionePuntiDiRistoro;

import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import unisa.gps.etour.bean.BeanConvenzione;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.bean.BeanVisitaPR;
/ *
* TEST CASE import
* Unisa.gps.etour.control.GestionePuntiDiRistoro.test.stub.DBConvenzione;
* Import unisa.gps.etour.control.GestionePuntiDiRistoro.test.stub.DBTurista;
* /
import unisa.gps.etour.repository.DBConvenzione;
import unisa.gps.etour.repository.DBTurista;
import unisa.gps.etour.repository.IDBConvenzione;
import unisa.gps.etour.util.MessaggiErrore;

/ **
* Class contentente methods for managing Refreshments by
* Operator Agency
*
* @ Author Joseph Morelli
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class GestionePuntiDiRistoroAgenzia extends GestionePuntiDiRistoroComune
implements IGestionePuntiDiRistoroAgenzia
(

private static final long serialVersionUID = 1L;

/ / Constructor
public GestionePuntiDiRistoroAgenzia () throws RemoteException
(
/ / Call the constructor of the inherited class to instantiate
/ / Database connections
super ();
dbTurista = new DBTurista ();
)

/ / Method that allows the operator to cancel an agency point of
/ / Refreshment
/ / Passing as parameter the ID of the same Refreshment
public boolean cancellaPuntoDiRistoro (int pPuntoDiRistoroID)
throws RemoteException
(
/ / Check the validity identifier
if (pPuntoDiRistoroID &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
TRY
(
/ / Execute the method that clears the Refreshment from the Database
/ / And in case of operation successful return true
if (puntoRistoro.cancellaPuntoDiRistoro (pPuntoDiRistoroID))
return true;
)
/ / Exception in operations on database
catch (SQLException e)
(
System.out.println ( &quot;Error in method cancellaPuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method cancellaPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / If no operations were successful return false end
return false;
)

/ / Method that allows the operator to include in the Agency database
/ / The new Refreshment with the information contained in the bean
public boolean inserisciPuntoDiRistoro (BeanPuntoDiRistoro pPuntoDiRistoro)
throws RemoteException
(
/ / Check the validity of the bean as a parameter and if
/ / Triggers except remote
if ((pPuntoDiRistoro == null)
| | (! (PPuntoDiRistoro instanceof BeanPuntoDiRistoro)))
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
TRY
(
/ / Calling the method of the class that operates on the database
/ / Insert the new Refreshment
if (puntoRistoro.inserisciPuntoDiRistoro (pPuntoDiRistoro))
/ / In the case where the operations were successful end
/ / Returns true
return true;
)
/ / Exception in database operations
catch (SQLException e)
(
System.out.println ( &quot;Error in method inserisciPuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method inserisciPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / If the operation is not successful return false
return false;
)

/ / Method for obtaining an ArrayList with all the points Bean
/ / Refreshments
&lt;BeanPuntoDiRistoro&gt; ottieniPuntiDiRistoro public ArrayList ()
throws RemoteException
(
/ / ArrayList to return to the end of the method
ArrayList &lt;BeanPuntoDiRistoro&gt; toReturn = null;
TRY
(
/ / Get the list of Refreshments through the class
/ / Connect to database
/ / And save the list itself nell'ArrayList
toReturn = puntoRistoro.ottieniListaPR ();
)
/ / Exception in operations on database
catch (SQLException e)
(
System.out.println ( &quot;Error in method ottieniPuntiDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniPuntiDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check the ArrayList to return so as not to pass null values
/ / To the caller
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
/ / Return the ArrayList with all the refreshment
toReturn return;
)

/ / Method that allows you to get all the refreshment that have
/ / A Convention on or off depending on the parameter passed
public ArrayList &lt;BeanPuntoDiRistoro&gt; ottieniPuntiDiRistoro (
statoConvenzione boolean) throws RemoteException
(
/ / Array that allows me to store all the refreshment and
/ / Which will remove
/ / Depending on the parameter passed to the refreshment active or not
ArrayList &lt;BeanPuntoDiRistoro&gt; toReturn = null;
/ / Array that allows me to store all the refreshment active
/ / Using the database connection
ArrayList &lt;BeanPuntoDiRistoro&gt; active = null;
/ / Instance to connect to the database
IDBConvenzione conv = new DBConvenzione ();
TRY
(
/ / Connect all proceeds from the refreshment Assets
conv.ottieniListaConvenzioneAttivaPR assets = ();
)
/ / Exception in operations on database
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method ottieniPuntiDiRistoro (boolean)&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out
. System.out.println ( &quot;Error in method ottieniPuntiDiRistoro (boolean)&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / If you want to get the refreshment active, then return
/ / Directly to those passed by the connection to the database
if (statoConvenzione)
(
/ / Check the contents dell'ArrayList so as not to return
/ / Null values to the caller
if (active == null)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
return active;
)
else
(
TRY
(
/ / Connect all proceeds from the refreshment then
/ / Perform comparisons
toReturn = puntoRistoro.ottieniListaPR ();
)
/ / Exception in operations on database
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method ottieniPuntiDiRistoro (boolean)&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out
. System.out.println ( &quot;Error in method ottieniPuntiDiRistoro (boolean)&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Size dell'ArrayList containing all of gourmet
/ / Could
/ / Change size if you remove some element
int dim = toReturn.size ();
/ / Variable that allows me to understand whether to remove a Point
/ / Refreshments
/ / From array that then I must return
boolean present = false;
/ / First loop to loop through all the ArrayList elements of
/ / All Refreshments
for (int i = 0; i &lt;dim; i + +)
(
/ / Second loop to loop through all the ArrayList elements
/ / Cones just Refreshments active
for (int j = 0 j &lt;attivi.size () j + +)
(
/ / If the catering points in question has the ID equal to one
/ / Of those assets, then set this to true
if (attivi.get (j). getId () == toReturn.get (i). getId ())
present = true;
)
/ / If the catering points in question has a Convention active
/ / Removes it from those to be returned
if (present)
toReturn.remove (i);
)
)
/ / Return the ArrayList obtained
toReturn return;
)

/ / Method that allows you to change the past as a refreshment
/ / Parameter
public boolean modificaPuntoDiRistoro (
BeanPuntoDiRistoro pPuntoDiRistoroAggiornato)
throws RemoteException
(
/ / Check the validity of the bean as a parameter and if
/ / Trigger an exception remote
if (null == pPuntoDiRistoroAggiornato
| | (! (PPuntoDiRistoroAggiornato instanceof BeanPuntoDiRistoro)))
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
TRY
(
/ / Call the method to change the database connection
/ / The Refreshment
if (puntoRistoro.modificaPuntoDiRistoro (pPuntoDiRistoroAggiornato))
/ / Return a positive value if the operation was successful
/ / End
return true;
)
/ / Exception in operations on database
catch (SQLException e)
(
System.out.println ( &quot;Error in method modificaPuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method modificaPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Return false if the operation is successful you should
return false;
)

/ / Method to obtain the Bean a particular point
/ / Refreshment whose
/ / Identifier is passed as parameter
public BeanPuntoDiRistoro ottieniPuntoDiRistoro (int pPuntoDiRistoroID)
throws RemoteException
(
/ / Check the validity identifier
if (pPuntoDiRistoroID &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / Bean to return to the caller
BeanPuntoDiRistoro toReturn = null;
TRY
(
/ / Revenue catering points in the issue by connecting to
/ / Database
toReturn = puntoRistoro.ottieniPuntoDiRistoro (pPuntoDiRistoroID);
)
/ / Exception in the database opearazioni
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check the bean to be returned in order not to return null values
/ / To the caller
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
/ / Return the bean of Refreshment
toReturn return;
)

/ / Method that allows you to activate a particular convention to a Point
/ / Passed as parameter Refreshments
public boolean attivaConvenzione (int pPuntoDiRistoroID,
BeanConvenzione pConv) throws RemoteException
(
/ / Check the validity of parameters passed
if ((pPuntoDiRistoroID &lt;0) | | (pConv == null)
| | (! (PConv instanceof BeanConvenzione)))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / Check the data further
if (pConv.getIdPuntoDiRistoro ()! = pPuntoDiRistoroID)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
IDBConvenzione conv = null;
TRY
(
/ / Instantiate the class to connect to the database
conv = new DBConvenzione ();
/ / If the Convention is not yet active, previously provided to
/ / Activate it locally and then pass the bean to the database changed
if (conv.ottieniConvezioneAttiva (pPuntoDiRistoroID) == null)
(
pConv.setAttiva (true);
conv.modificaConvenzione (pConv);
return true;
)
)
/ / Exception in operations on database
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method attivaConvenzione&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / If the operation is successful you should return false
return false;
)

/ / Method that returns a HashMap containing, for Refreshment
/ / Passed as a parameter, the feedback associated with it
public HashMap &lt;BeanVisitaPR, String&gt; ottieniFeedbackPuntoDiRistoro (
pPuntoDiRistoroID int) throws RemoteException
(
/ / Check the ID passed as a parameter
if (pPuntoDiRistoroID &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / Instantiate the map and the performance of ArrayList that I will use
/ / Method
HashMap &lt;BeanVisitaPR, String&gt; mappaRitorno = null;
ArrayList &lt;BeanVisitaPR&gt; bvisita = null;
TRY
(
/ / Here I take the list of all visits to the PR passed as
/ / Parameter
bvisita = feed.ottieniListaVisitaPR (pPuntoDiRistoroID);
/ / Instantiate the map of the same size as the list of
/ / BeanVisitaPR
mappaRitorno = new HashMap &lt;BeanVisitaPR, String&gt; (bvisita.size ());
/ / Here we begin to iterate on each visit to add its
/ / Username
for (Iterator &lt;BeanVisitaPR&gt; iteratoreVisitaPR = bvisita.iterator (); iteratoreVisitaPR
. hasNext ();)
(
/ / Recuperto the BeanVisitaPR
BeanVisitaPR bVisitaTemp = iteratoreVisitaPR.next ();
/ / Retrieve the tourist who left the comment that I
/ / Examining
BeanTurista bTuristaTemp = dbTurista.ottieniTurista (bVisitaTemp
. getIdTurista ());
/ / Get the username of the Tourist
String usernameTuristaTemp = bTuristaTemp.getUsername ();
/ / Put the pair in the map
mappaRitorno.put (bVisitaTemp, usernameTuristaTemp);
)
)
/ / Exception in database operations
catch (SQLException e)
(
System.out.println ( &quot;Error in method ottieniFeedbackPR&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniFeedbackPR&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check the return parameter so as not to pass null values
/ / To the database
if (null == mappaRitorno)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
mappaRitorno return;
)

/ / Method to insert a tag from those of a refreshment
public boolean cancellaTagPuntoDiRistoro (pPuntoDiRistoroId int, int pTagId)
throws RemoteException
(
/ / Check the validity of past data
if ((pPuntoDiRistoroId &lt;0) | | (pTagId &lt;0))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / ArrayList which stores all the tags
ArrayList &lt;BeanTag&gt; tags;
/ / Boolean variable to check if the Refreshment
/ / Holds the tag you want to delete
boolean present = false;
TRY
(
/ / Use the method through the class of database connection
tags = tag.ottieniTagPuntoDiRistoro (pPuntoDiRistoroId);
)
/ / Exception in the execution of transactions in database
catch (SQLException e)
(
System.out.println ( &quot;Error in method cancellaTagPuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exception due to other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method cancellaTagPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check if the tag is present cycle currently
/ / Between those of Refreshment
for (t BeanTag: tags)
if (t.getId () == pTagId)
present = true;
/ / If the tag is present among those of eateries, then
/ / Provides for executing the erase operation
if (present)
(
TRY
(
return tag.cancellaTagPuntoDiRistoro (pPuntoDiRistoroId, pTagId);
)
/ / Exception in implementing the operation on the database
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method cancellaTagPuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exception due to other factors
catch (Exception ee)
(
System.out
. System.out.println ( &quot;Error in method cancellaTagPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
/ / In case something did not come to fruition
/ / Return false
return false;
)

/ / Method to delete a tag from those of a refreshment
/ / The operations are identical to those above, except for
/ / Control over the presence of the tag from those of Refreshment
/ / Which should give negative results, and the call here is the method of
/ / Insert
public boolean inserisciTagPuntoDiRistoro (pPuntoDiRistoroId int, int pTagId)
throws RemoteException
(
if ((pPuntoDiRistoroId &lt;0) | | (pTagId &lt;0))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);

ArrayList &lt;BeanTag&gt; tags;
boolean present = false;
TRY
(
tags = tag.ottieniTagPuntoDiRistoro (pPuntoDiRistoroId);
)
catch (SQLException e)
(
System.out.println ( &quot;Error in method inserisciTagPuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception ee)
(
System.out.println ( &quot;Error in method inserisciTagPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
for (t BeanTag: tags)
if (t.getId () == pTagId)
present = true;
/ / Check that the Refreshment has not already specified tag
if (present)
(
TRY
(
/ / Calling the method of adding the class via
/ / Connect to database
return tag.aggiungeTagPuntoDiRistoro (pPuntoDiRistoroId, pTagId);
)
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method inserisciTagPuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception ee)
(
System.out
. System.out.println ( &quot;Error in method inserisciTagPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
/ / Return false if some operation is not successful you should
return false;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestionePuntiDiRistoroComune</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestionePuntiDiRistoro;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.bean.BeanVisitaPR;
/ *
* For import junit tests
* Unisa.gps.etour.control.GestionePuntiDiRistoro.test.stub.DBPuntoDiRistoro;
* Import unisa.gps.etour.control.GestionePuntiDiRistoro.test.stub.DBVisitaPR;
* /
import unisa.gps.etour.repository.DBPuntoDiRistoro;
import unisa.gps.etour.repository.DBVisitaPR;
import unisa.gps.etour.repository.DBTag;
import unisa.gps.etour.repository.IDBPuntoDiRistoro;
import unisa.gps.etour.repository.IDBTag;
import unisa.gps.etour.repository.IDBTurista;
import unisa.gps.etour.repository.IDBVisitaPR;
import unisa.gps.etour.util.CostantiGlobali;
import unisa.gps.etour.util.MessaggiErrore;

/ **
* Class that implements the common tasks for the operator of dining and
* For the Operator Agency
*
* @ Author Joseph Morelli
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
GestionePuntiDiRistoroComune UnicastRemoteObject public class extends implements
IGestionePuntiDiRistoroComune
(

/ / Instance for database connections
private static final long serialVersionUID = 1L;
protected IDBPuntoDiRistoro puntoRistoro;
protected IDBTag tags;
IDBVisitaPR protected feeds;
protected IDBTurista dbTurista;

public GestionePuntiDiRistoroComune () throws RemoteException
(
super ();
/ / Connect to the Database
TRY
(
puntoRistoro = new DBPuntoDiRistoro ();
tag = new DBTag ();
feed = new DBVisitaPR ();
)
/ / Note: no longer 'cause SQLException thrown
/ / Changes to the layer DB; changed Exception
catch (Exception e)
(
System.out.println ( &quot;Error:&quot; + e.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ *
* Method which allows to obtain a BeanPuntoDiRistoro through
* Connect to database
* /
public BeanPuntoDiRistoro ottieniPuntoDiRistoro (int pPuntoDiRistoroID)
throws RemoteException
(
/ / Check identifier passed
if (pPuntoDiRistoroID &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / Return Instance
BeanPuntoDiRistoro toReturn = null;
TRY
(
/ / Revenue data through the instance of the database connection
toReturn = puntoRistoro.ottieniPuntoDiRistoro (pPuntoDiRistoroID);
)
/ / Exception in database operations
catch (SQLException e)
(
System.out.println ( &quot;Error:&quot; + e.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out.println ( &quot;Error:&quot; + ee.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check the variable return, so they do not pass bad data
/ / To the caller
/ / And triggers an exception if the format of the bean
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
/ / Return the bean that contains information about Refreshment
/ / Required
toReturn return;
)

/ / Method that returns an ArrayList containing the tag identification of a
/ / Some Refreshment
&lt;BeanTag&gt; ottieniTagPuntoDiRistoro public ArrayList (int pPuntoDiRistoroID)
throws RemoteException
(
/ / Check identifier passed
if (pPuntoDiRistoroID &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / Return Instance
ArrayList &lt;BeanTag&gt; toReturn = null;
TRY
(
/ / Revenue data through the instance of the database connection
toReturn = tag.ottieniTagPuntoDiRistoro (pPuntoDiRistoroID);
)
/ / Exception in operations on database
catch (SQLException e)
(
System.out.println ( &quot;Error:&quot; + e.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out.println ( &quot;Error:&quot; + ee.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check the variable return, so they do not pass bad data
/ / To the caller
/ / And triggers an exception if the format of the bean
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
/ / Return the ArrayList containing beans tag of refreshment
/ / Passed as parameter
toReturn return;
)

/ / Returns an array of 10 strings containing the last 10 comments
/ / Issued by tourists for Refreshment passed as parameter
public String [] ottieniUltimiCommenti (int pPuntoDiRistoroID)
throws RemoteException
(
/ / Check the validity identifier passed
if (pPuntoDiRistoroID &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / String that contains only the last 10 comments made
String [] toReturn = new String [10];
/ / ArrayList temporary then save the comments contained in the beans
/ / Inside
&lt;BeanVisitaPR&gt; ArrayList temp = null;
TRY
(
/ / Attempt to retrieve information from the database via
/ / The connection instance
temp = feed.ottieniListaVisitaPR (pPuntoDiRistoroID);
)
/ / Exception in database operations
catch (SQLException e)
(
System.out.println ( &quot;Error in method ottieniUltimiCommenti&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniUltimiCommenti&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / The bean that I receive from the database are already sorted by date
/ / Implicitly, so there is no need for sorting algorithms
for (int i = 0; i &lt;10; i + +)
(
/ / Insert the text of the comments in cyclically
/ / Array
toReturn [i] = (temp.get (temp.size () - (i + 1))). getCommento ();
)
/ / E 'unnecessary control the format of the array
/ / Then return the array directly with comments
toReturn return;
)

/ / Method that returns an ArrayList containing the number of votes
/ / Release from 1 to 5 for
/ / The Refreshment passed as parameter. The method inserts in order
/ / Counters in positions
/ / From 0 to 1 vote, 1 vote for 2, etc. ..
public ArrayList &lt;Integer&gt; ottieniStatistichePuntoDiRistoro (
pPuntoDiRistoroID int) throws RemoteException
(
/ / Check the validity identifier passed
if (pPuntoDiRistoroID &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / ArrayList that allows me to store the bean containing the feedback
ArrayList &lt;BeanVisitaPR&gt; bVisita = null;
/ / ArrayList that allows me to store the counters
/ / And then return to the calling method
ArrayList &lt;Integer&gt; listaRisultati &lt;Integer&gt; = new ArrayList (5);
/ / Initialize the array of counters
for (int i = 0; i &lt;5; i + +)
listaRisultati.add (Integer.valueOf (0));
/ / Data useful to verify that the issued date back thirty Feedback
/ / Days from current date
Date ultimiTrentaGiorni = new Date (new Date (). GetTime ()
- CostantiGlobali.TRENTA_GIORNI);

System.out.println ( &quot;The date of 30 days ago:&quot; + ultimiTrentaGiorni);

TRY
(
/ / All feedback Revenue issued for Refreshment
/ / Passed as parameter
bVisita = feed.ottieniListaVisitaPR (pPuntoDiRistoroID);
/ / Iterate the collection of elements to control the bean
/ / Visits
for (Iterator &lt;BeanVisitaPR&gt; iteratoreVisitaPR = bVisita.iterator (); iteratoreVisitaPR
. hasNext ();)
(
/ / Recuperto the BeanVisitaPR
BeanVisitaPR bVisitaTemp = iteratoreVisitaPR.next ();
/ / ... Do not know what does ...
System.out.println ( &quot;The date of this visit is:
BVisitaTemp.getDataVisita + ());
if (bVisitaTemp.getDataVisita (). after (ultimiTrentaGiorni))
listaRisultati.set (bVisitaTemp.getVoto () - 1, Integer
. valueOf (listaRisultati.get (
bVisitaTemp.getVoto () - 1). intValue () + 1));
)
)
/ / Exception in database operations
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method ottieniStatistichePuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions due to other factors
catch (Exception ee)
(
System.out
. System.out.println ( &quot;Error in method ottieniStatistichePuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
if (null == listaRisultati)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
/ / Return the list of results that should contain counters
/ / Comments
/ / Issued in the last 30 days
listaRisultati return;
)

/ / Method that allows you to change the comment issued for a
/ / Refreshment
public boolean modificaFeedbackPuntoDiRistoro (int pPuntoDiRistoroId,
BeanVisitaPR nuovaVisita) throws RemoteException
(
/ / Check the validity of past data
if ((pPuntoDiRistoroId &lt;0) | | (! (nuovaVisita instanceof BeanVisitaPR)))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / Revenue from the database the bean and stores saved
/ / In order to verify that the vote has not changed
/ / Which had been previously released
BeanVisitaPR temp = null;
TRY
(
temp = feed.ottieniVisitaPR (pPuntoDiRistoroId, nuovaVisita
. getIdTurista ());
)
/ / Exception running the operation on Database
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method modificaFeedbackPuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exception caused by other factors
catch (Exception ee)
(
System.out
. System.out.println ( &quot;Error in method modificaFeedbackPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / If the vote was amended returns an exception
if (temp.getVoto ()! nuovaVisita.getVoto = ())
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
/ / If the vote has not been amended shall save the new
/ / Comment in the database using the specific method of the bean
else
(
TRY
(
feed.modificaVisitaPR (nuovaVisita);
return true;
)
/ / Exception running the operation on Database
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method modificaFeedbackPuntoDiRistoro&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exception caused by other factors
catch (Exception ee)
(
System.out
. System.out.println ( &quot;Error in method modificaFeedbackPuntoDiRistoro&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneTagComune</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneTag;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.SQLException;
import java.util.ArrayList;
import unisa.gps.etour.bean.BeanTag;
/ *
* For imported text unisa.gps.etour.control.GestioneTag.test.stub.DBTag;
* /
import unisa.gps.etour.repository.DBTag;
import unisa.gps.etour.repository.IDBTag;
import unisa.gps.etour.util.MessaggiErrore;

/ **
* Class that implements the common tasks for the use of tags
*
* @ Author Joseph Morelli
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
GestioneTagComune UnicastRemoteObject public class extends implements
IGestioneTagComune
(

private static final long serialVersionUID = 1L;
/ / Object for the database connection
protected IDBTag tags;

public GestioneTagComune () throws RemoteException
(
super ();
/ / Connect to the Database
TRY
(
tag = new DBTag ();
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ / Method that returns all tags
&lt;BeanTag&gt; ottieniTags public ArrayList () throws RemoteException
(
/ / ArrayList to fill with the tags to return
ArrayList &lt;BeanTag&gt; toReturn;
/ / Retrieve data from Database
TRY
(
/ / Get the information from the Database
toReturn = tag.ottieniListaTag ();
)
/ / Exception in the execution of database operations
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method ottieniTags:&quot; + e.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniTags&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check the data back in order not to return null values
/ / Caller
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
toReturn return;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneTagOperatoreAgenzia</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneTag;

import java.rmi.RemoteException;
import java.sql.SQLException;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.util.MessaggiErrore;

/ **
* Class that implements the methods for the functionality of the Operator Agency
* Extending the class of common Tag Management
*
* @ Author Joseph Morelli
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class GestioneTagOperatoreAgenzia extends GestioneTagComune implements
IGestioneTagOperatoreAgenzia
(

private static final long serialVersionUID = 1L;

public GestioneTagOperatoreAgenzia () throws RemoteException
(
/ / Invoke the constructor of the superclass for communication with
/ / Database
super ();
)

/ / Method to delete from database the tag whose ID is passed
/ / As parameter
public boolean cancellaTag (int pTagID) throws RemoteException
(
/ / Check the valise of past data
if ((pTagID &lt;= 0))
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
TRY
(
/ / Make the database operation
tag.cancellaTag (pTagID);
return true;
)
/ / Exception in the execution of database operations
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method cancellaTag:&quot; + e.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method cancellaTag&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ / Method that allows the insertion of a new tag as a parameter
public boolean inserisciTag (BeanTag pTagNuovo) throws RemoteException
(
/ / Check the validity of the Bean and the data contained within
if (null == pTagNuovo)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
if ((pTagNuovo = checkTag (pTagNuovo)) == null)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
TRY
(
/ / Execute the operation on the Database
tag.inserisciTag (pTagNuovo);
return true;
)
/ / Exception running the operation on Database
catch (SQLException e)
(
System.out.println ( &quot;Error in method inserisciTag&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method inserisciTag&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ / Method that enables the modification of a tag that is passed as
/ / Parameter
public boolean modificaTag (BeanTag pTagModificato) throws RemoteException
(
/ / Check the validity of data
if ((pTagModificato = checkTag (pTagModificato)) == null)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
TRY
(
/ / Execute the operation on the Database
tag.modificaTag (pTagModificato);
return true;
)
/ / Exception running the operation on Database
catch (SQLException e)
(
System.out
. System.out.println ( &quot;Error in method modificaTag:&quot; + e.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method modificaTag&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ / Method to obtain the tags whose identifier is passed
/ / As parameter
public BeanTag ottieniTag (int pTagID) throws RemoteException
(
/ / Check the validity of data
if (pTagID &lt;= 0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / Bean to return
BeanTag toReturn;
TRY
(
/ / Execute the operation on the Database
toReturn = tag.ottieniTag (pTagID);
)
/ / Exception running the operation on Database
catch (SQLException e)
(
System.out.println ( &quot;Error in method ottieniTag:&quot; + e.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out
. System.out.println ( &quot;Error in method ottieniTag:&quot; + ee.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
toReturn return;
)

/ / Method that controls all the attributes of a BeanTag
Private BeanTag checkTag (BeanTag toControl)
(
/ / Check the ID
if (toControl.getId () &lt;= 0)
return null;
/ / Check the description
if (toControl.getDescrizione (). equals (&quot;&quot;))
toControl.setDescrizione (&quot;***&quot;);
/ / Check the name
if (toControl.getNome (). equals (&quot;&quot;))
return null;
/ / Check that the name does not contain a space
if (toControl.getNome (). Contains ( &quot;&quot;))
return null;
toControl return;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneTuristaClient</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneUtentiRegistrati;

import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;

import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanPreferenzaDiRicerca;
import unisa.gps.etour.bean.BeanPreferenzeGeneriche;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.bean.BeanVisitaPR;
import unisa.gps.etour.repository.DBBeneCulturale;
import unisa.gps.etour.repository.DBPreferenzeDiRicerca;
import unisa.gps.etour.repository.DBPreferenzeGeneriche;
import unisa.gps.etour.repository.DBPuntoDiRistoro;
import unisa.gps.etour.repository.DBTurista;
import unisa.gps.etour.repository.DBVisitaBC;
import unisa.gps.etour.repository.DBVisitaPR;
import unisa.gps.etour.repository.IDBBeneCulturale;
import unisa.gps.etour.repository.IDBPreferenzeDiRicerca;
import unisa.gps.etour.repository.IDBPreferenzeGeneriche;
import unisa.gps.etour.repository.IDBPuntoDiRistoro;
import unisa.gps.etour.repository.IDBTurista;
import unisa.gps.etour.repository.IDBVisitaBC;
import unisa.gps.etour.repository.IDBVisitaPR;
import unisa.gps.etour.util.ControlloDati;
import unisa.gps.etour.util.MessaggiErrore;

/ **
* Class on the Management of Tourist Information
*
* @ Author Federico Leon
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab University of DMI
* Salerno
* /

public class GestioneTuristaClient extends GestioneTuristaComune implements
IGestioneTuristaClient
(
private static final long serialVersionUID =-6161592850721537385L;
Private IDBTurista profiloTurista / / Data Management for tourists
Private IDBPreferenzeGeneriche prefGenTurista / / preferences, general manager of the tourist
Private IDBPreferenzeDiRicerca prefRicTurista, / / Handle search preferences of tourists
Private IDBVisitaBC visitatiBC / / Managing cultural Visited
Private IDBVisitaPR visitatiPR / / Manager catering outlets visited
Private IDBBeneCulturale beneCulturale / / Managing cultural heritage (we need only obtain a bean BeneCulturale x
/ / from its ID
Private IDBPuntoDiRistoro puntoDiRistoro / / Management refreshment areas (use the same object &quot;beneCulturale&quot;

public GestioneTuristaClient () throws RemoteException
(
super ();

profiloTurista = new DBTurista ();
prefGenTurista = new DBPreferenzeGeneriche ();
prefRicTurista = new DBPreferenzeDiRicerca ();
visitatiBC = new DBVisitaBC ();
visitatiPR = new DBVisitaPR ();
beneCulturale = new DBBeneCulturale ();
puntoDiRistoro = new DBPuntoDiRistoro ();
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # cancellaPreferenzeDiRicerca (int,
* Int)
* /
public BeanPreferenzaDiRicerca cancellaPreferenzeDiRicerca (pIdTurista int, int pIdPreferenzaDiRicerca) throws RemoteException
(
TRY
(
boolean delete = true;
BeanPreferenzaDiRicerca PrefRic = new BeanPreferenzaDiRicerca ();
&lt;BeanPreferenzaDiRicerca&gt; ElencoPrefRic ArrayList &lt;BeanPreferenzaDiRicerca&gt; = new ArrayList ();

ElencoPrefRic = prefRicTurista.ottieniPreferenzeDiRicercaDelTurista (pIdTurista);
&lt;BeanPreferenzaDiRicerca&gt; = ElencoPrefRic.iterator list iterator ();

while (elenco.hasNext () &amp; &amp; cancel == true)
(
PrefRic = elenco.next ();
if (PrefRic.getId () == pIdPreferenzaDiRicerca)
delete = false; / / Find the anniversary with the id
/ / We leave the interested
/ / Cycle
)

Cancellation prefRicTurista.cancellaPreferenzaDiRicercaTurista = (
pIdTurista, pIdPreferenzaDiRicerca);
PrefRic return;
)
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)

)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # cancellaPreferenzeGeneriche (int)
* /
public BeanPreferenzeGeneriche cancellaPreferenzeGeneriche (int pIdTurista) throws RemoteException
(
TRY
(
BeanPreferenzeGeneriche temp = prefGenTurista.ottieniPreferenzaGenerica (pIdTurista);
boolean canceled = prefGenTurista.cancellaPreferenzaGenerica (temp.getId ());

if (cancel)
return temp;
else
return null; / / The cancellation occurred
)
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)

)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciPreferenzaDiRicerca (int,
* Unisa.gps.etour.bean.BeanPreferenzaDiRicerca)
* /
public boolean inserisciPreferenzaDiRicerca (int pIdTurista, BeanPreferenzaDiRicerca pPreferenzaDiRicerca) throws RemoteException
(
TRY
(
boolean checkdate = ControlloDati.checkBeanPreferenzaDiRicerca (pPreferenzaDiRicerca);

if (checkdate)
(/ / If the data control is positive
return prefRicTurista.inserisciPreferenzaDiRicercaDelTurista (pIdTurista, pPreferenzaDiRicerca.getId ());
)
else
(
return false; / / Data error
)

)
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciPreferenzeGeneriche (unisa.gps.etour.bean.BeanPreferenzeGeneriche)
* /
public boolean inserisciPreferenzeGeneriche (BeanPreferenzeGeneriche pPreferenzeGeneriche) throws RemoteException
(
TRY
(
boolean checkdate = ControlloDati.checkBeanPreferenzeGeneriche (pPreferenzeGeneriche);

if (checkdate)
(/ / If the data control is positive
return prefGenTurista.inserisciPreferenzaGenenerica (pPreferenzeGeneriche);
)
else
(
return false; / / Data error
)

)
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciTurista (unisa.gps.etour.bean.BeanTurista)
* /
public boolean inserisciTurista (BeanTurista pTurista) throws RemoteException
(
TRY
(

/ / Check if the username entered is already present in DB
BeanTurista temp = profiloTurista.ottieniTurista (pTurista.getUsername ());

/ / If there is no choice all'username Tourist Offices
if (temp == null)
(
boolean checkdate = ControlloDati.checkBeanTurista (pTurista);

if (checkdate)
(/ / If the data control is positive
return profiloTurista.inserisciTurista (pTurista);
)
else
(
return false; / / Data error
)
)
else
(
return false; / / Username already exists in DB
)

)
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # modificaPreferenzeGeneriche (unisa.gps.etour.bean.BeanPreferenzeGeneriche)
* /
public boolean modificaPreferenzeGeneriche (BeanPreferenzeGeneriche pPreferenzeGenericheNuove) throws RemoteException
(
TRY
(
boolean checkdate = ControlloDati.checkBeanPreferenzeGeneriche (pPreferenzeGenericheNuove);

if (checkdate)
(/ / If the data control is positive
return prefGenTurista.modificaPreferenzaGenerica (pPreferenzeGenericheNuove);
)
else
(
return false; / / Data error
)

)
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniPreferenzeDiRicerca (int)
* /
public BeanPreferenzaDiRicerca [] ottieniPreferenzeDiRicerca (int pIdTurista) throws RemoteException
(
/ / Array containing the list of search preferences tourists ID = pIdTurista
BeanPreferenzaDiRicerca [] preferences = null;

TRY
(
/ / ** Convert ArrayList (return type of method &quot;ottieniPreferenzeDiRicerca&quot;) to simple array **
ArrayList &lt;BeanPreferenzaDiRicerca&gt; listaPreferenze = prefRicTurista.ottieniPreferenzeDiRicercaDelTurista (pIdTurista);
preferences = new BeanPreferenzaDiRicerca [listaPreferenze.size ()];
= listaPreferenze.toArray preferences (preferences);
/ / ** ** End Conversion
)
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)

return preferences;

)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniPreferenzeGeneriche (int)
* /
public BeanPreferenzeGeneriche ottieniPreferenzeGeneriche (int pIdTurista) throws RemoteException
(
TRY
(
return prefGenTurista.ottieniPreferenzaGenerica (pIdTurista);
)
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.GestioneTuristaComune # modificaTurista (unisa.gps.etour.bean.BeanTurista)
* /
public boolean modificaTurista (BeanTurista pprofiloTurista) throws RemoteException
(
TRY
(
/ / Boolean variable that will hold true if the bean is correct, false otherwise
boolean checkdate = ControlloDati.checkBeanTurista (pprofiloTurista);

if (checkdate)
(/ / If the data control is positive
return profiloTurista.modificaTurista (pprofiloTurista);
)
else
(
return false; / / Data error
)

)
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)

)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniBeniCulturaliVisitati (int)
* /
public BeanVisitaBC [] ottieniBeniCulturaliVisitati (int pIdTurista) throws RemoteException
(
BeanVisitaBC [] visited = null;
if (pIdTurista&gt; 0)
(
TRY
(
ArrayList &lt;BeanVisitaBC&gt; listavisitati = visitatiBC.ottieniListaVisitaBCTurista (pIdTurista);
visited = new BeanVisitaBC [listavisitati.size ()];
visited = listavisitati.toArray (visited);
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

)
return visit;
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniPuntiDiRistoroVisitati (int)
* /
public BeanVisitaPR [] ottieniPuntiDiRistoroVisitati (int pIdTurista) throws RemoteException
(
/ / Array containing the list of catering outlets visited by tourists with id &quot;pIdTurista&quot;
BeanVisitaPR [] visited = null;
if (pIdTurista&gt; 0)
(
TRY
(
ArrayList &lt;BeanVisitaPR&gt; listavisitati = visitatiPR.ottieniListaVisitaPRTurista (pIdTurista);
visited = new BeanVisitaPR [listavisitati.size ()];
visited = listavisitati.toArray (visited);
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

)
return visit;
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciBeneCulturaleVisitato (unisa.gps.etour.bean.BeanVisitaBC)
* /
public boolean inserisciBeneCulturaleVisitato (BeanVisitaBC pVisitaBC) throws RemoteException
(
if (ControlloDati.checkBeanVisitaBC (pVisitaBC))
(
TRY
(

return visitatiBC.inserisciVisitaBC (pVisitaBC);
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
return false;
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciPuntoDiRistoroVisitato (unisa.gps.etour.bean.BeanVisitaPR)
* /
public boolean inserisciPuntoDiRistoroVisitato (BeanVisitaPR pVisitaPR) throws RemoteException
(
if (ControlloDati.checkBeanVisitaPR (pVisitaPR))
(
TRY
(
return visitatiPR.inserisciVisitaPR (pVisitaPR);
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
return false;
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciBeneCulturalePreferito (int,
* Int)
* /
public boolean inserisciBeneCulturalePreferito (pIdTurista int, int pIdBeneCulturale) throws RemoteException
(
if (pIdTurista&gt; 0 &amp; &amp; pIdBeneCulturale&gt; 0)
(
TRY
(
return profiloTurista.inserisciBeneCulturalePreferito (pIdTurista, pIdBeneCulturale);
)
catch (SQLException e)
(

throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
return false;
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # inserisciPuntoDiRistoroPreferito (int,
* Int)
* /
public boolean inserisciPuntoDiRistoroPreferito (pIdTurista int, int pIdPuntoDiRistoro) throws RemoteException
(
if (pIdTurista&gt; 0 &amp; &amp; pIdPuntoDiRistoro&gt; 0)
(
TRY
(
return profiloTurista.inserisciPuntoDiRistoroPreferito (pIdTurista, pIdPuntoDiRistoro);
)
catch (SQLException e)
(

throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
return false;
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # cancellaBeneCulturalePreferito (int,
* Int)
* /
public boolean cancellaBeneCulturalePreferito (pIdTurista int, int pIdBeneCulturale) throws RemoteException
(
if (pIdTurista&gt; 0 &amp; &amp; pIdBeneCulturale&gt; 0)
(
TRY
(
return profiloTurista.cancellaBeneCulturalePreferito (pIdTurista, pIdBeneCulturale);
)
catch (SQLException e)
(

throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
return false;
)

/ *
* (Non-Javadoc)
*
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # cancellaPuntoDiRistoroPreferito (int,
* Int)
* /
public boolean cancellaPuntoDiRistoroPreferito (pIdTurista int, int pIdPuntoDiRistoro) throws RemoteException
(
if (pIdTurista&gt; 0 &amp; &amp; pIdPuntoDiRistoro&gt; 0)
(
TRY
(
return profiloTurista.cancellaPuntoDiRistoroPreferito (pIdTurista, pIdPuntoDiRistoro);
)
catch (SQLException e)
(

throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
return false;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniBeniCulturaliPreferiti (int)
* /
public BeanBeneCulturale [] ottieniBeniCulturaliPreferiti (int pIdTurista) throws RemoteException
(
if (pIdTurista&gt; 0)
(
TRY
(
/ / List of cultural favorites of tourists cn id = &quot;pIdTurista&quot;
ArrayList &lt;Integer&gt; listaPreferiti = profiloTurista.ottieniBeniCulturaliPreferiti (pIdTurista);
/ / Convert ArrayList a simple array
BeanBeneCulturale [] favorites = null;
Favorite = new BeanBeneCulturale [listaPreferiti.size ()];
Favorite listaPreferiti.toArray = (favorites);

int k = 0, / / Cycle counter
for (Integer i: listaPreferiti)
(
/ / Fill the array with the favorite bean of all cultural favorites from the tourist
Favorites [k + +] = beneCulturale.ottieniBeneCulturale (i);
)
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
return null;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.control.GestioneUtentiRegistrati.IGestioneTuristaClient # ottieniPuntiDiRistoroPreferiti (int)
* /
public BeanPuntoDiRistoro [] ottieniPuntiDiRistoroPreferiti (int pIdTurista) throws RemoteException
(
if (pIdTurista&gt; 0)
(
TRY
(
/ / List of places for refreshment favorite tourist cn id = &quot;pIdTurista&quot;
ArrayList &lt;Integer&gt; listaPreferiti = profiloTurista.ottieniPuntoDiRistoroPreferiti (pIdTurista);

/ / Convert ArrayList a simple array
BeanPuntoDiRistoro [] favorites = null;
Favorite = new BeanPuntoDiRistoro [listaPreferiti.size ()];
Favorite listaPreferiti.toArray = (favorites);

int k = 0, / / Cycle counter
for (Integer i: listaPreferiti)
(
/ / Fill the array with the favorite bean of all cultural favorites from the tourist
Favorites [k + +] = puntoDiRistoro.ottieniPuntoDiRistoro (i);
)
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)
return null;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneTuristaComune</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneUtentiRegistrati;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.SQLException;

import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.repository.DBTurista;
import unisa.gps.etour.repository.IDBTurista;
import unisa.gps.etour.util.MessaggiErrore;

/ **
* Class that implements the common tasks for Operators and Tourist Agency
* Ie modificaTurista and ottieniTurista
*
* @ Author Joseph Morelli
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
GestioneTuristaComune UnicastRemoteObject public class extends implements
IGestioneTuristaComune
(

protected IDBTurista tourist;

/ / Constructor that richama turn the class constructor
/ / UnicastRemoteObject to connect via RMI
/ / Instantiate and connect to the database
public GestioneTuristaComune () throws RemoteException
(
super ();
/ / Connect to the Database
TRY
(
Tourists DBTurista = new ();
)
/ / Exception in the database connection
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ / Method that allows you to change the data of a tourist through its
/ / Data
public boolean modificaTurista (BeanTurista pProfiloTurista)
throws RemoteException
(
/ / Check the validity of past data
if ((pProfiloTurista == null)
| | (! (PProfiloTurista instanceof BeanTurista)))
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
/ / Execution of the amendment
TRY
(
/ / If the changes were made returns true
if (turista.modificaTurista (pProfiloTurista))
return true;
)
/ / Exception in operations on database
catch (SQLException e)
(
/ / If the data layer sends an exception is throws the exception remote
System.out.println ( &quot;Error in method modificaTurista&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exception caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method modificaTurista&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / If there were no exceptions but the changes are not
/ / Returns false were made
return false;
)

/ / Method to obtain the bean with data from the Tourist
/ / Identified by
/ / The parameter passed
public BeanTurista ottieniTurista (int pIdTurista) throws RemoteException
(
/ / Check the validity identifier
if (pIdTurista &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
BeanTurista toReturn = null, / / variable return
/ / Retrieve data
TRY
(
/ / Are requested to return the bean layer on the tourist
/ / With id equal to pIdTurista
toReturn = turista.ottieniTurista (pIdTurista);
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Exception in database operations
catch (SQLException e)
(
/ / If the data layer sends an exception is throws the exception remote
System.out.println ( &quot;Error in method ottieniTurista&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniTurista&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Return the result
toReturn return;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_GestioneTuristiAgenzia</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneUtentiRegistrati;

import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.bean.BeanVisitaPR;
import unisa.gps.etour.repository.DBVisitaBC;
import unisa.gps.etour.repository.DBVisitaPR;
import unisa.gps.etour.repository.IDBVisitaBC;
import unisa.gps.etour.repository.IDBVisitaPR;
import unisa.gps.etour.util.MessaggiErrore;

/ **
* Class that implements the interface for managing the side Tourists
* Agency and extends UnicastRemoteObject for communication in remote
* Provides basic methods for handling and additional methods for returning
* Tourists with special characteristics of
*
* @ Author Joseph Morelli
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public class GestioneTuristiAgenzia extends GestioneTuristaComune implements
IGestioneTuristiAgenzia
(

Private IDBVisitaBC feedbackBC;
Private IDBVisitaPR feedbackPR;

public GestioneTuristiAgenzia () throws RemoteException
(
super ();
TRY
(
/ / Instantiate objects for database connections
feedbackBC = new DBVisitaBC ();
feedbackPR = new DBVisitaPR ();
)
/ / Exception on the database connection
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
)

/ / Method for obtaining all tourists alike present
/ / In the database
&lt;BeanTurista&gt; ottieniTuristi public ArrayList () throws RemoteException
(
/ / Object that will contain the return value
ArrayList &lt;BeanTurista&gt; toReturn;
/ / Retrieve data
TRY
(
/ / Invoke the method with empty string to get all Tourists
toReturn = turista.ottieniTuristi (&quot;&quot;);
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Exception in database operations
catch (SQLException e)
(
/ / If the data layer is thrown an exception SQLException
/ / It throws RemoteException the remote exception
System.out.println ( &quot;Error in method ottieniTuristi&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exception caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniTuristi&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Return the result from the data layer ottenuro
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
toReturn return;
)

/ / Method that allows to obtain all the tourists who have an account
/ / Active or not
public ArrayList &lt;BeanTurista&gt; ottieniTuristi (boolean statoAccount)
throws RemoteException
(
/ / ArrayList containing the results
ArrayList &lt;BeanTurista&gt; toReturn;
/ / Retrieve data
TRY
(
/ / All tourists are taken to the state as a parameter
toReturn = turista.ottieniTuristi (statoAccount);
)
/ / Exception in implementing the operation on the database
catch (SQLException e)
(
/ / If the data layer sends an exception is throws the exception remote
System.out.println ( &quot;Error in method ottieniTuristi (boolean)&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniTuristi (boolean)&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check the data to return, so you do not return null values
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
toReturn return;
)

/ / Method that allows the activation of a tourist is not yet activated
public boolean attivaTurista (int pIdTurista) throws RemoteException
(
/ / Check the validity of input data
if (pIdTurista &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / Bean that contains the data of tourists to activate
BeanTurista toChange;
/ / Retrieve and edit data required
TRY
(
/ / Get the data from the Database
toChange = turista.ottieniTurista (pIdTurista);
/ / Check that the tourist is not already activated
if (toChange.isAttiva ())
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / It sets the value indicating the activation status to true
toChange.setAttiva (true);
/ / You try to change the database
if (turista.modificaTurista (toChange))
/ / If the edit operation is successful returns
/ / True
return true;
)
/ / Exception in the execution of database operations
catch (SQLException e)
(
/ / If the data layer sends an exception is throws the exception remote
System.out.println ( &quot;Error in method attivaTurista&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method attivaTurista&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / If no exceptions were thrown but the changes
/ / Not have been successful returns false
return false;
)

/ / Method that allows you to disable a tourist
public boolean disattivaTurista (int pIdTurista) throws RemoteException
(
/ / Check the validity of data
if (pIdTurista &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
BeanTurista toChange / / bean that contains the data from the tourist
/ / Disable
/ / Retrieve and edit data required
TRY
(
/ / Get the data from the database
toChange = turista.ottieniTurista (pIdTurista);
/ / Check that the tourist is active
if (! toChange.isAttiva ())
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / It sets the value indicating the activation status to false
toChange.setAttiva (false);
/ / You try to change the database
if (turista.modificaTurista (toChange))
/ / If the edit operation is successful returns
/ / True
return true;
)
/ / Exception in the execution of database operations
catch (SQLException e)
(
/ / If the data layer sends an exception is throws the exception remote
System.out.println ( &quot;Error in method disattivaTurista&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method disattivaTurista&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / If no exceptions were thrown but the changes
/ / Not have been successful returns false
return false;
)

/ / Method that erases a tourist from the Database
public boolean delete (int pIdTurista) throws RemoteException
(
/ / Check the validity of data
if (pIdTurista &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
TRY
(
/ / If the cancellation is successful it returns true
if (turista.cancellaTurista (pIdTurista))
return true;
)
catch (SQLException e)
(
/ / If the data layer sends an exception is throws the exception remote
System.out.println ( &quot;Error in delete method&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exception caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in delete method&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Otherwise if you have not thrown exceptions, but the cancellation
/ / Not have been successful returns false
return false;
)

/ / Method that returns an ArrayList containing the feedback issued by
/ / Some for the Cultural Tourist
&lt;BeanVisitaBC&gt; ottieniFeedbackBC public ArrayList (int pIdTurista)
throws RemoteException
(
/ / Check the validity of data
if (pIdTurista &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
/ / ArrayList return
ArrayList &lt;BeanVisitaBC&gt; toReturn;
TRY
(
/ / Retrieve data from Database
toReturn = feedbackBC.ottieniListaVisitaBCTurista (pIdTurista);
)
catch (SQLException e)
(
/ / If the data layer sends an exception is throws the exception remote
System.out.println ( &quot;Error in method ottieniFeedbackBC&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exception caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniFeedbackBC&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check the data back in order not to return null values
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
toReturn return;
)

/ / Method that returns an ArrayList containing the feedback issued by
/ / Some for the Cultural Tourist
&lt;BeanVisitaPR&gt; ottieniFeedbackPR public ArrayList (int pIdTurista)
throws RemoteException
(
/ / Check the validity of data
if (pIdTurista &lt;0)
throw new RemoteException (MessaggiErrore.ERRORE_DATI);
ArrayList &lt;BeanVisitaPR&gt; toReturn / / variable return
TRY
(
/ / Insert the result in toReturn
/ / Returned from the Data Layer
toReturn = feedbackPR.ottieniListaVisitaPRTurista (pIdTurista);
)
catch (SQLException e)
(
/ / If the data layer sends an exception is throws the exception remote
System.out.println ( &quot;Error in method ottieniFeedbackPR&quot;
+ E.toString ());
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
/ / Unexpected exceptions caused by other factors
catch (Exception ee)
(
System.out.println ( &quot;Error in method ottieniFeedbackPR&quot;
Ee.toString + ());
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)
/ / Check the array of return, so you do not return null values
if (null == toReturn)
throw new RemoteException (MessaggiErrore.ERRORE_FORMATO_BEAN);
toReturn return;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_HelpManager</id>
      <content>package unisa.gps.etour.gui;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io. *;
import java.util.HashMap;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.net.URISyntaxException;
import javax.swing.JComponent;
import javax.swing.text.JTextComponent;

/ **
* This class realizes the mechanism of sensitive help
* Context.
*
* @ Version 0.2
* @ Author Mario Gallo
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class extends HelpManager MouseAdapter
(
private HashMap &lt;String,String&gt; dictionary;
Private JTextComponent destination;
private String previousMessage;

/ **
&lt;p&gt; * The constructor creates a new instance of the class for the
* Managing the online help files from contentente
* The guide itself and the component in which it appear. &lt;/ P&gt;
*
PPercorso * @ param String - the path of the help file.
* @ Param pComponent JTextComponent - the component in which to display
* Driving.
* @ Throws FileNotFoundException - if the help file is not specified
* Found.
*
* /
public HelpManager (String pPercorso, JTextComponent pComponent) throws FileNotFoundException
(
&lt;String,String&gt; dictionary = new HashMap ();
target = pComponent;
File afil = null;
TRY
(
afil = new File (getClass (). getResource (pPercorso.) tour ());
)
catch (ex URISyntaxException)
(
ex.printStackTrace ();
)
Scanner scan = new Scanner (new BufferedReader (new FileReader (afil)));
StringTokenizer tokenizer;
while (scanning.hasNext ())
(
tokenizer = new StringTokenizer (scanning.nextLine (),&quot;##&quot;);
dizionario.put (tokenizer.nextToken (), tokenizer.nextToken ());
)

scanning.close ();
)

/ **
* This method handles the event when the pointer should
* Mouse enters the component.
*
* @ Param pMouseEnteredEvent MouseEvent - The event generated by the mouse.
*
* /
public void mouseEntered (MouseEvent pMouseEnteredEvent)
(
previousMessage = destinazione.getText ();
JComponent component = (JComponent) pMouseEnteredEvent.getComponent ();
String help = dizionario.get (componente.getName ());
destinazione.setText (help);
destinazione.repaint ();
)

/ **
*
* This method handles the event when the pointer should
* Mouse goes out of a component.
*
* @ Param pMouseExitedEvent MouseEvent - The event generated by the mouse.
*
* /
public void mouseEntered (MouseEvent pMouseExitedEvent)
(
destinazione.setText (previousMessage);
destinazione.repaint ();

)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IAutenticazione</id>
      <content>package unisa.gps.etour.control.GestioneUtentiRegistrati;

import java.rmi.Remote;
import java.rmi.RemoteException;

/ **
* Interface relating to operations performed by the User login and logout
* Register
*
* @ Author Joseph Penna
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab University of DMI
* Salerno
* /
public interface extends Remote IAutenticazione
(

/ / Static constants that identify the type of users who
/ / True
public static final byte VISITORS = 0;
public static final byte OP_PUNTO_DI_RISTORO = 1;

/ **
* Method to authenticate a registered user (Turista - Operator
* Refreshment)
*
Username * @ param pUserName on a Registered User
* @ Param password for pPassword Registered User
* @ Param type pTipologiaUtente user is authenticated
* @ Return If the data are correct user ID logged in the event
Otherwise -1 *
* /
public int login (String pUsername, String pPassword, byte pTipologiaUtente)
throws RemoteException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBBanner</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanBanner;

/ **
* Interface for managing the banner on the database
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

public interface IDBBanner
(
/ **
* Add a banner in the database
*
* @ Param pBanner bean containing the information of the banner
* @ Throws SQLException
* /
public boolean inserisciBanner (BeanBanner pBanner) throws SQLException;

/ **
* Modify the contents of the advertisement, and returns the contents before
* Edit
*
* @ Param pBanner Bean that contains the new information of the banner
* @ Return True if there 'was a modified false otherwise
* @ Throws SQLException
* /
public boolean modificaBanner (BeanBanner pBanner) throws SQLException;

/ **
* Delete a banner from the database and returns
*
* @ Param pIdBanner ID BeanBanner
* @ Return True if and 'was deleted false otherwise
* @ Throws SQLException
* /
public boolean cancellaBanner (int pIdBanner) throws SQLException;

/ **
* Returns a list of banners for a refreshment point, if the id of
* Refreshment and 'equal to -1 will' return the complete list
* Banners
*
* @ Param Id pIdPuntoDiRistoro of refreshment point from which to obtain the list
* Banner
* @ Return list of banners linked to Refreshment
* @ Throws SQLException
* /
&lt;BeanBanner&gt; ottieniBanner public ArrayList (int pIdPuntoDiRistoro)
throws SQLException;

/ **
* Method which returns a banner given its id
*
* @ Param ID pIdBanner the banner to return
* @ Return Banner found in the database, null if there is' match
* @ Throws SQLException
* /
public BeanBanner ottieniBannerDaID (int pIdBanner) throws SQLException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBBeneCulturale</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.util.Punto3D;

/ **
* Interface for the management of cultural heritage database
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

public interface IDBBeneCulturale
(
/ **
* Add a cultural heritage, given input
*
* @ Param pBene Cultural Heritage for inclusion in database
* @ Throws SQLException
* /
public boolean inserisciBeneCulturale (BeanBeneCulturale pBene)
throws SQLException;

/ **
* Modify the information in the cultural
*
* @ Param pBene contains the information to modify the database
* @ Throws SQLException
* @ Return True if there 'was a modified false otherwise
* /
public boolean modificaBeneCulturale (BeanBeneCulturale pBene)
throws SQLException;

/ **
* Delete a cultural object from the database
*
* @ Param ID pIdBene cultural property to delete
* @ Throws SQLException
* @ Return True if and 'was deleted false otherwise
* /
public boolean cancellaBeneCulturale (int pIdBene) throws SQLException;

/ **
* Returns the cultural object with id as input
*
* @ Param pId cultural property to be extracted from the database
* @ Throws SQLException
* @ Return cultural property obtained from the database
* /
public BeanBeneCulturale ottieniBeneCulturale (int pid) throws SQLException;

/ **
* Research. Returns the list of cultural property in their name or
* Description given string as input, filtered according to tags and
* Maximum distance. The returned list contains the number of goods given as input.
* To browse the real list, which may contain more 'of
* Ten elements, you use the paramtro numPagina.
*
PKeyword * @ param string that contains the keyword to search the
* Name or description of the cultural
* @ Param pTags list of tags used to filter the search. the
* Maximum number of tags to be included should not exceed five
* Units'. If you exceed this number the other tags
* Excess will be ignored.
* @ Param pNumPagina The page number you want to view. O for
* 1 page (the first 10 results), 1 for 2 page (s
* Results from 11 to 20) etc ...
* @ Param pPosizione position of the person who carried out the research
* @ Param pDistanzaMassima Maximum distance from the user to search for good
* @ Param pNumeroElementiPerPagina number of items to return per page
* @ Throws SQLException
* @ Return list contained ten cultural
* /
public ArrayList &lt;BeanBeneCulturale&gt; search (String pKeyword,
ArrayList &lt;BeanTag&gt; pTags, pNumPagina int, int pNumeroElementiPerPagina, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException;

/ **
* Advanced Search. Returns the list of cultural goods which have in
* Name or description given string as input, sorted according to
* Preferences of tourists and filtered according to the tag and the maximum distance. The
* Returned list contains the number of goods given as input. To scroll
* The actual list, which may contain multiple 'items, you
* Use paramtro numPagina.
*
* @ Param ID pIdTurista tourists who carried out the research
PKeyword * @ param string that contains the keyword to search the
* Name or description of the cultural
* @ Param pTags list of tags used to filter the search. the
* Maximum number of tags to be included should not exceed five
* Units'. If you exceed this number the other tags
* Excess will be ignored.
* @ Param pNumPagina The page number you want to view. O for
* 1 page (the first 10 results), 1 for 2 page (s
* Results from 11 to 20) etc ...
* @ Param pPosizione position of the person who carried out the research
* @ Param pDistanzaMassima Maximum distance from the user to search for good
* @ Param pNumeroElementiPerPagina number of items to return per page
* @ Throws SQLException
* @ Return list contained ten cultural
* /
&lt;BeanBeneCulturale&gt; ricercaAvanzata public ArrayList (int pIdTurista,
PKeyword String, ArrayList &lt;BeanTag&gt; pTags, pNumPagina int, int pNumeroElementiPerPagina,
Punto3D pPosizione, double pDistanzaMassima) throws SQLException;

/ **
* Method to get the number of elements to search.
*
PKeyword * @ param string that contains the keyword to search the
* Name or description of the cultural
* @ Param pTags list of tags used to filter the search. the
* Maximum number of tags to be included should not exceed five
* Units'. If you exceed this number the other tags
* Excess will be ignored.
* @ Param pPosizione position of the person who carried out the research
* @ Param pDistanzaMassima Maximum distance from the user to search for good
* @ Throws SQLException
* @ Return number of pages.
* /
public int ottieniNumeroElementiRicerca (String pKeyword,
ArrayList &lt;BeanTag&gt; pTags, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException;

/ **
* Method to get the number of elements to search.
*
* @ Param identifier pIdTurista tourists who carried out the research
PKeyword * @ param string that contains the keyword to search the
* Name or description of the cultural
* @ Param pTags list of tags used to filter the search. the
* Maximum number of tags to be included should not exceed five
* Units'. If you exceed this number the other tags
* Excess will be ignored.
* @ Param pPosizione position of the person who carried out the research
* @ Param pDistanzaMassima Maximum distance from the user to search for good
* @ Throws SQLException
* @ Return number of pages.
* /
public int ottieniNumeroElementiRicercaAvanzata (int pIdTurista,
PKeyword String, ArrayList &lt;BeanTag&gt; pTags, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException;
/ **
* Returns a list of all cultural
*
* @ Throws SQLException
* @ Return List of all cultural
* /
&lt;BeanBeneCulturale&gt; ottieniListaBC public ArrayList () throws SQLException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBConvenzione</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanConvenzione;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;

/ **
* Interface for managing the database Business
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBConvenzione
(

/ **
* Add a convention in the database
*
* @ Param pConvenzione Convention by adding
* @ Throws SQLException
* /
public boolean inserisciConvenzione (BeanConvenzione pConvenzione)
throws SQLException;

/ **
* Modify a convention in the database
*
* @ Param data pConvenzione Convention of the Convention to be updated
* @ Return True if there 'was a modified false otherwise
* @ Throws SQLException
* /
public boolean modificaConvenzione (BeanConvenzione pConvenzione)
throws SQLException;

/ **
* Delete an agreement by the database
*
* @ Param pIdConvenzione ID of the Convention by removing
* @ Return True if been deleted false otherwise
* @ Throws SQLException
* /
public boolean cancellaConvenzione (int pIdConvenzione) throws SQLException;

/ **
* Returns the historical conventions of a refreshment
*
* @ Param idPuntoDiRistoro point identification Refreshments
* @ Return List of conventions of Refreshment given as argument
* @ Throws SQLException
* /
public ArrayList &lt;BeanConvenzione&gt; ottieniStoricoConvenzione (
idPuntoDiRistoro int) throws SQLException;

/ **
* Returns the Convention active a refreshment
*
* @ Param pIdPuntoDiRistoro point identification Refreshments
* @ Return Convention Turns
* @ Throws SQLException
* /
public BeanConvenzione ottieniConvezioneAttiva (int pIdPuntoDiRistoro)
throws SQLException;

/ **
* Returns a list of all the PR that have a Convention active
*
* @ Return list of all the PR with the Convention active
* @ Throws SQLException
* /
&lt;BeanPuntoDiRistoro&gt; ottieniListaConvenzioneAttivaPR public ArrayList ()
throws SQLException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBMenu</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanMenu;

/ **
* Interface for managing the menu in the database
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBMenu
(
/ **
* Adds a menu in the database
*
* @ Param pMenu menu to add
* @ Throws SQLException
* /
public boolean inserisciMenu (BeanMenu pMenu) throws SQLException;

/ **
* Modify a menu in the database
*
* @ Param pMenu Contains the data to change
* @ Throws SQLException
* @ Return True if there 'was a modified false otherwise
* /
public boolean modificaMenu (BeanMenu pMenu) throws SQLException;

/ **
* Delete a menu from database
*
* @ Param ID pIdMenu menu to delete
* @ Throws SQLException
* @ Return True if and 'was deleted false otherwise
* /
public boolean cancellaMenu (int pIdMenu) throws SQLException;

/ **
* Returns the menu of the day of a refreshment
*
* @ Param pIdPuntoDiRistoro point identification Refreshments
* @ Param pGiorno Day of the week in which the menu
* Daily
* @ Throws SQLException
* @ Return Day menu de Refreshment
* /
public BeanMenu ottieniMenuDelGiorno (int pIdPuntoDiRistoro, String pGiorno)
throws SQLException;

/ **
* Returns a list of the menu of a refreshment
*
* @ Param pIdPuntoDiRistoro point identification Refreshment
* @ Throws SQLException
* @ Return List of menus
* /
&lt;BeanMenu&gt; ottieniMenu public ArrayList (int pIdPuntoDiRistoro)
throws SQLException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBNews</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanNews;

/ **
* Interface for the management of news in the Database
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBNews
(
/ **
* Add a news database
*
* @ Param Pnews News to add
* @ Throws SQLException
* /
public boolean inserisciNews (BeanNews Pnews) throws SQLException;

/ **
* Modify a news database
*
* @ Param Pnews News to change with the new data
* @ Throws SQLException
* @ Return True if there 'was a modified false otherwise
* /
public boolean modificaNews (BeanNews Pnews) throws SQLException;

/ **
* Delete a database from news
*
* @ Param ID pIdNews News to eliminate
* @ Throws SQLException
* @ Return True if and 'have been deleted false otherwise
* /
public boolean cancellaNews (int pIdNews) throws SQLException;

/ **
* Returns the active news
*
* @ Throws SQLException
* @ Return list of active news
* /
&lt;BeanNews&gt; ottieniNews public ArrayList () throws SQLException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBOperatoreAgenzia</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;

import unisa.gps.etour.bean.BeanOperatoreAgenzia;

/ **
* Interface for managing the database OperatoreAgenzia
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBOperatoreAgenzia
(
/ **
* Returns the data Operator Agency with ID equal to that given in
* Input
*
* @ Param pUsername Username dell'OperatoreAgenzia to find
* @ Return OperatoreAGenzia with id equal to the input, null if there is
* @ Throws SQLException
* /
public BeanOperatoreAgenzia ottieniOperatoreAgenzia (String pUsername) throws SQLException;

/ **
* Returns the data Operator Agency with ID equal to that given in
* Input
*
* @ Param pUsername Username dell'OperatoreAgenzia to find
* @ Return OperatoreAGenzia with id equal to the input, null if there is
* @ Throws SQLException
* /
public boolean modificaPassword (BeanOperatoreAgenzia poa) throws SQLException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBOperatorePuntoDiRistoro</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;

import unisa.gps.etour.bean.BeanOperatorePuntoDiRistoro;

/ **
* Interface for the operator to the point of comfort in the database
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBOperatorePuntoDiRistoro
(
/ **
* Adds an operator refreshment
*
* @ Param popera Additional operating
* @ Throws SQLException
* /
public boolean inserisciOperatorePuntoDiRistoro (
BeanOperatorePuntoDiRistoro popera) throws SQLException;

/ **
* Modify an operator in the database
*
* @ Param popera New data Operator
* @ Throws SQLException
* @ Return True if there 'was a modified false otherwise
* /
public boolean modificaOperatorePuntoDiRistoro (
BeanOperatorePuntoDiRistoro popera) throws SQLException;

/ **
* Delete an operator
*
* @ Param pIdOperatore Operator ID to delete
* @ Throws SQLException
* @ Return True if and 'was deleted false otherwise
* /
public boolean cancellaOperatorePuntoDiRistoro (int pIdOperatore)
throws SQLException;

/ **
Returns data operator
*
* @ Param pIdOperatore Operation ID
* @ Throws SQLException
* @ Return Operator refreshment
* /
public BeanOperatorePuntoDiRistoro ottieniOperatorePuntoDiRistoro (
pIdOperatore int) throws SQLException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBPiatto</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanPiatto;

/ **
* Interface for the management of food in the database
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBPiatto
(
/ **
* Add a dish
*
* @ Param pPiatti plate add
* /
public boolean inserisciPiatto (BeanPiatto pPiatto) throws SQLException;

/ **
* Modify the data in a flat in the database
*
* @ Param pPiatti data plate to be inserted in database
* @ Return True if there 'was a modified false otherwise
* /
public boolean modificaPiatto (BeanPiatto pPiatto) throws SQLException;

/ **
* Delete a dish from the database
*
* @ Param pIdPiatto ID plate eliminre
* @ Throws SQLException
* @ Return True if and 'was deleted false otherwise
* /
public boolean cancellaPiatto (int pIdPiatto) throws SQLException;

/ **
* Returns a list of dishes on a menu
*
* @ Param ID pIdMenu menu
* @ Throws SQLException
* @ Return list of dishes in the menu
* /
&lt;BeanPiatto&gt; ottieniPiatto public ArrayList (int pIdMenu) throws SQLException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBPreferenzeDiRicerca</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanPreferenzaDiRicerca;

/ **
* Interface for managing search preferences in database
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBPreferenzeDiRicerca
(
/ **
* Add a preference of Search
*
* @ Param pPreferenza Search Preferences
* @ Throws SQLException
* /
public boolean inserisciPreferenzaDiRicerca (
BeanPreferenzaDiRicerca pPreferenza) throws SQLException;

/ **
* Delete a preference for research
*
* @ Param pPreferenza preference to eliminate
* @ Throws SQLException
* @ Return True if and 'have been deleted false otherwise
* /
public boolean cancellaPreferenzaDiRicerca (int pIdPreferenza)
throws SQLException;

/ **
* Returns the list of preferences to find a tourist
*
* @ Param Id pIdTurista tourists
* @ Throws SQLException
* @ Return List Search Preferences
* /
public ArrayList &lt;BeanPreferenzaDiRicerca&gt; ottieniPreferenzeDiRicercaDelTurista (
pIdTurista int) throws SQLException;

/ **
* Returns the list of preferences for research of a cultural
*
* @ Param pIdBeneCulturale ID of the cultural
* @ Throws SQLException
* @ Return list search preferences.
* /
public ArrayList &lt;BeanPreferenzaDiRicerca&gt; ottieniPreferenzeDiRicercaDelBC (
pIdBeneCulturale int) throws SQLException;

/ **
* Returns the list of preferences to find a resting spot
*
* @ Param identifier pIdPuntoDiRistoro a refreshment
* @ Throws SQLException
* @ Return list search preferences.
* /
public ArrayList &lt;BeanPreferenzaDiRicerca&gt; ottieniPreferenzeDiRicercaDelPR (
pIdPuntoDiRistoro int) throws SQLException;

/ **
* Add a preference for a cultural
*
* @ Param pIdBeneCulturale ID of the cultural
* @ Param pIdPreferenzaDiRicerca ID PreferenzaDiRicerca
* @ Throws SQLException
* @ Param pPreferenza Search Preferences
* /
public boolean inserisciPreferenzaDiRicercaDelBC (int pIdBeneCulturale,
pIdPreferenzaDiRicerca int) throws SQLException;

/ **
* Add a search preference to a tourist
*
* @ Param Id pIdTurista tourists
* @ Param pIdPreferenzaDiRicerca ID PreferenzeDiRicerca
* @ Throws SQLException
* @ Param pPreferenza Search Preferences
* /
public boolean inserisciPreferenzaDiRicercaDelTurista (int pIdTurista,
pIdPreferenzaDiRicerca int) throws SQLException;

/ **
* Add a preference research to a refreshment
*
* @ Param pIdPuntoDiRistoro point identification Refreshments
* @ Param pIdPreferenzaDiRicerca ID PreferenzaDiRicerca
* @ Throws SQLException
* @ Param pPreferenza Search Preferences
* /
public boolean inserisciPreferenzaDiRicercaDelPR (int pIdPuntoDiRistoro,
pIdPreferenzaDiRicerca int) throws SQLException;

/ **
* Deletes a preference to find a Tourist
*
* @ Param Id pIdTurista tourists
* @ Param pIdPreferenza Search Preferences
* @ Throws SQLException
* @ Return True if and 'have been deleted false otherwise
* /
public boolean cancellaPreferenzaDiRicercaTurista (int pIdTurista,
pIdPreferenza int) throws SQLException;

/ **
* Deletes a preference for research of a cultural
*
* @ Param pIdPreferenzaDiRicerca Search Preferences
* @ Param pIdBeneCulturale ID of the cultural
* @ Throws SQLException
* @ Return True if and 'have been deleted false otherwise
* /
public boolean cancellaPreferenzaDiRicercaBC (int pIdBeneCulturale,
pIdPreferenzaDiRicerca int) throws SQLException;

/ **
* Deletes a preference to find a resting spot
*
* @ Param pIdPreferenza Search Preferences
* @ Param pIdPuntoDiistoro point identification Refreshments
* @ Throws SQLException
* @ Return True if and 'have been deleted false otherwise
* /
public boolean cancellaPreferenzaDiRicercaPR (int pIdPuntoDiistoro,
pIdPreferenza int) throws SQLException;

/ **
* Returns a list of all search preferences in the DB
*
* @ Throws SQLException
* @ Return List of search preferences in the DB
* /
&lt;BeanPreferenzaDiRicerca&gt; ottieniPreferenzeDiRicerca public ArrayList ()
throws SQLException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBPreferenzeGeneriche</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;

import unisa.gps.etour.bean.BeanPreferenzeGeneriche;

/ **
* Interface for handling general preferences in database
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBPreferenzeGeneriche
(
/ **
* Add a preference General
*
* @ Param pPreferenza preference to be added
* @ Throws SQLException
* /
public boolean inserisciPreferenzaGenenerica (
BeanPreferenzeGeneriche pPreferenza) throws SQLException;

/ **
* Edit a general preference
*
* @ Param pPreferenza preference to change
* @ Throws SQLException
* @ Return True if and 'been changed otherwise false
* /
public boolean modificaPreferenzaGenerica (
BeanPreferenzeGeneriche pPreferenza) throws SQLException;

/ **
* Delete a general preference
*
* @ Param ID pIdPreferenza preference to delete
* @ Throws SQLException
* @ Return True if and 'have been deleted false otherwise
* /
public boolean cancellaPreferenzaGenerica (int pIdPreferenza)
throws SQLException;

/ **
* Returns the generic preference for tourists
*
* @ Param Id pIdTurista tourists
* @ Throws SQLException
* @ Return generic preference
* /
public BeanPreferenzeGeneriche ottieniPreferenzaGenerica (int pIdTurista)
throws SQLException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBPuntoDiRistoro</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.util.Punto3D;

/ **
* Interface for management of eateries in the database
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBPuntoDiRistoro
(
/ **
* Add a refreshment
*
* @ Param pPuntoDiRistoro Refreshment to add
* @ Throws SQLException
* /
public boolean inserisciPuntoDiRistoro (BeanPuntoDiRistoro pPuntoDiRistoro)
throws SQLException;

/ **
* Modify a refreshment
*
* @ Param pPuntoDiRistoro Refreshment to edit
* @ Throws SQLException
* @ Return True if and 'been changed otherwise false
* /
public boolean modificaPuntoDiRistoro (BeanPuntoDiRistoro pPuntoDiRistoro)
throws SQLException;

/ **
* Delete a refreshment
*
* @ Param ID pIdPuntoDiRistoro Refreshment to eliminate
* @ Throws SQLException
* @ Return True if and 'have been deleted false otherwise
* /
public boolean cancellaPuntoDiRistoro (int pIdPuntoDiRistoro)
throws SQLException;

/ **
* Returns data from a point of comfort with the ID given as argument
*
* @ Param pId point identification Refreshments
* @ Throws SQLException
* @ Return Refreshment
* /
public BeanPuntoDiRistoro ottieniPuntoDiRistoro (int pid)
throws SQLException;

/ **
* Advanced Search. Returns the list of eateries that have in
* Name or description given string as input, sorted according to
* Preferences of tourists, the tags and filtered according to the distance
* Max. The list returned contains only the number of catering outlets input data.
* To scroll the real list, which may contain multiple 'items, you
* Use paramtro numPagina.
*
* @ Param Id pIdTurista tourists who carried out the research
PKeyword * @ param string that contains the keyword to search the
* Name or description of refreshment
* @ Param pTags list of tags used to filter the search. the
* Maximum number of tags to be included should not exceed five
* Units'. If you exceed this number the other tags
* Excess will be ignored.
* @ Param pNumeroPagina The page number you want to view. O
* The 1 page (the first 10 results), 1 for 2 page (s
* Results from 11 to 20) etc ... *
* @ Param pPosizione position of the person who carried out the research
* @ Param int Number of elements to return pNumeroElementiPerPagina
* @ Param pDistanzaMassima Maximum distance from the user to refreshment
* To seek
* @ Throws SQLException
* @ Return list containing ten points Refreshments
* /
&lt;BeanPuntoDiRistoro&gt; ricercaAvanzata public ArrayList (int pIdTurista,
PKeyword String, ArrayList &lt;BeanTag&gt; pTags, pNumeroPagina int, int pNumeroElementiPerPagina,
Punto3D pPosizione, double pDistanzaMassima) throws SQLException;

/ **
* Method to get the number of elements to search.
*
* @ See ricercaAvanzata ()
* @ Param Id pIdTurista tourists who carried out the research
PKeyword * @ param string that contains the keyword to search the
* Name or description of refreshment
* @ Param pTags list of tags used to filter the search. the
* Maximum number of tags to be included should not exceed five
* Units'. If you exceed this number the other tags
* Excess will be ignored. *
* @ Param pPosizione position of the person who carried out the research
* @ Param pDistanzaMassima Maximum distance from the user to refreshment
* To seek
* @ Throws SQLException
* @ Return number of pages.
* /
public int ottieniNumeroElementiRicercaAvanzata (int pIdTurista,
PKeyword String, ArrayList &lt;BeanTag&gt; pTags, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException;

/ **
* Research. Returns the list of eateries that have the name or
* Description given string as input, filtered and tags
* According to the maximum distance. The returned list contains the number of
* Points Refreshments input data. To scroll the real list, which
* May contain more 'items, you use the paramtro
* NumPagina.
*
PKeyword * @ param string that contains the keyword to search the
* Name or description of refreshment
* @ Param pTags list of tags used to filter the search. the
* Maximum number of tags to be included should not exceed five
* Units'. If you exceed this number the other tags
* Excess will be ignored.
* @ Param pNumeroPagina The page number you want to view. O
* The 1 page (the first 10 results), 1 for 2 page (s
* Results from 11 to 20) etc ... *
* @ Param pPosizione position of the person who carried out the research
* @ Param pDistanzaMassima Maximum distance from the user to refreshment
* @ Param int Number of elements to return pNumeroElementiPerPagina
* @ Throws SQLException
* @ Return list containing ten points Refreshments
* /
public ArrayList &lt;BeanPuntoDiRistoro&gt; search (String pKeyword,
ArrayList &lt;BeanTag&gt; pTags, pNumeroPagina int, int pNumeroElementiPerPagina, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException;

/ **
* Method to get you the elements for an advanced search.
*
* @ See search ()
* @ Param username pUsernameTurista tourists who carried out the research
PKeyword * @ param string that contains the keyword to search the
* Name or description of refreshment
* @ Param pTags list of tags used to filter the search. The
* Maximum number of tags to be included should not exceed five
* Units'. If you exceed this number the other tags
* Excess will be ignored.
* @ Param pPosizione position of the person who carried out the research
* @ Param pDistanzaMassima Maximum distance from the user to refreshment
* To seek
* @ Throws SQLException
* @ Return number of pages.
* /
public int ottieniNumeroElementiRicerca (String pKeyword,
ArrayList &lt;BeanTag&gt; pTags, Punto3D pPosizione,
double pDistanzaMassima) throws SQLException;

/ **
* Returns a list of all the refreshment
*
* @ Throws SQLException
* @ Return list of all the refreshment
* /
&lt;BeanPuntoDiRistoro&gt; ottieniListaPR public ArrayList () throws SQLException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBTag</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanTag;

/ **
* Interface for managing the database Tag
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBTag
(
/ **
* Add a tag
*
* @ Param ptagi Tag to add
* @ Throws SQLException
* /
public boolean inserisciTag (BeanTag ptagi) throws SQLException;

/ **
* Modify the data in a tag
*
* @ Param ptagi Tag to modify
* @ Throws SQLException
* @ Return True if and 'been changed otherwise false
* /
public boolean modificaTag (BeanTag ptagi) throws SQLException;

/ **
* Delete a tag from the database
*
* @ Param pIdTag ID Tag to be deleted
* @ Throws SQLException
* @ Return True if and 'was deleted false otherwise
* /
public boolean cancellaTag (int pIdTag) throws SQLException;

/ **
* Returns the list of tags in the database
*
* @ Throws SQLException
* @ Return List containing the tags
* /
&lt;BeanTag&gt; ottieniListaTag public ArrayList () throws SQLException;

/ **
* Returns a single tag
*
* @ Param pId ID tag
* @ Throws SQLException
* @ Return Tags
* /
public BeanTag ottieniTag (int pid) throws SQLException;

/ **
* Tag with immovable cultural
*
* @ Param ID pIdBeneCulturale of Cultural Heritage
* @ Param pIdTag ID tag
* @ Throws SQLException
* /
public boolean aggiungeTagBeneCulturale (pIdBeneCulturale int, int pIdTag)
throws SQLException;

/ **
* Tag to a refreshment
*
* @ Param pIdPuntoDiRistoro point identification Refreshments
* @ Param pIdTag ID tag
* @ Throws SQLException
* /
public boolean aggiungeTagPuntoDiRistoro (pIdPuntoDiRistoro int, int pIdTag)
throws SQLException;

/ **
* Returns the list of tags of a cultural
*
* @ Param ID pIdBeneCulturale of Cultural Heritage
* @ Throws SQLException
* @ Return list of tags
* /
&lt;BeanTag&gt; ottieniTagBeneCulturale public ArrayList (int pIdBeneCulturale)
throws SQLException;

/ **
* Returns a list of tags of a refreshment
*
* @ Param pIdPuntoDiRistoro point identification Refreshments
* @ Throws SQLException
* @ Return list of tags
* /
&lt;BeanTag&gt; ottieniTagPuntoDiRistoro public ArrayList (int pIdPuntoDiRistoro)
throws SQLException;

/ **
* Delete a tag to a cultural
*
* @ Param ID pIdBeneCulturale of Cultural Heritage
* @ Param pIdTag ID tag
* @ Throws SQLException
* @ Return True if and 'was deleted false otherwise
* /
public boolean cancellaTagBeneCulturale (pIdBeneCulturale int, int pIdTag)
throws SQLException;

/ **
* Delete a tag to a refreshment
*
* @ Param pIdPuntoDiRistoro ID
* @ Param pIdTag ID tag
* @ Throws SQLException
* @ Return True if and 'was deleted false otherwise
* /
public boolean cancellaTagPuntoDiRistoro (pIdPuntoDiRistoro int, int pIdTag)
throws SQLException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBTurista</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanTurista;

/ **
* Interface for the management of tourists in the database
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBTurista
(
/ **
* Add a tourist
*
* @ Param to add pTurista Tourist
* @ Throws SQLException
* /
public boolean inserisciTurista (BeanTurista pTurista) throws SQLException;

/ **
* Modify a tourist
*
* @ Param to change pTurista Tourist
* @ Throws SQLException
* @ Return True if and 'been changed otherwise false
* /
public boolean modificaTurista (BeanTurista pTurista) throws SQLException;

/ **
* Delete a tourist from the database
*
* @ Param pIdTurista Identificatie Tourist delete
* @ Throws SQLException
* @ Return True if and 'been changed otherwise false
* /
public boolean delete (int pIdTurista) throws SQLException;

/ **
* Returns the data of the Tourist
*
* @ Param pUsername Username tourists
* @ Throws SQLException
* @ Return Information about tourist
* /
public BeanTurista ottieniTurista (String pUsername) throws SQLException;

/ **
* Attach a cultural tourists preferred
*
* @ Param ID pIdTurista tourists
* @ Param pIdBeneCulturale ID of the cultural
* @ Throws SQLException
* /
public boolean inserisciBeneCulturalePreferito (int pIdTurista,
pIdBeneCulturale int) throws SQLException;

/ **
* Attach a point of catering to the tourist favorite
*
* @ Param ID pIdTurista tourists
* @ Param pIdPuntoDiRistoro ID of the cultural
* @ Throws SQLException
* /
public boolean inserisciPuntoDiRistoroPreferito (int pIdTurista,
pIdPuntoDiRistoro int) throws SQLException;

/ **
* Delete a cultural favorite
*
* @ Param ID pIdTurista tourists
* @ Param pIdBeneCulturale ID of the cultural
* @ Throws SQLException
* @ Return True if and 'been changed otherwise false
* /
public boolean cancellaBeneCulturalePreferito (int pIdTurista,
pIdBeneCulturale int) throws SQLException;

/ **
* Delete a favorite resting spot
*
* @ Param ID pIdTurista tourists
* @ Param pIdPuntoDiRistoro ID of the cultural
* @ Throws SQLException
* @ Return True if and 'was deleted false otherwise
* /
public boolean cancellaPuntoDiRistoroPreferito (int pIdTurista,
pIdPuntoDiRistoro int) throws SQLException;

/ **
* Returns an ArrayList of tourists who have a username like that
* Given as argument
*
* @ Param pUsernameTurista Usrername tourists to search
* @ Throws SQLException
* @ Return data for Tourists
* /
public ArrayList &lt;BeanTurista&gt; ottieniTuristi (String pUsernameTurista)
throws SQLException;

/ **
* Returns the list of tourists turned on or off
*
* @ Param select pact True False those tourists turned off
* @ Return data for Tourists
* @ Throws SQLException
* /
public ArrayList &lt;BeanTurista&gt; ottieniTuristi (boolean condition)
throws SQLException;

/ **
* Returns the data of the tourist with ID equal to that given in
* Input
*
* @ Param ID pIdTurista tourists to find
* @ Return Tourists with id equal to the input, null if there is
* @ Throws SQLException
* /
public BeanTurista ottieniTurista (int pIdTurista) throws SQLException;

/ **
* Returns the list of cultural favorites from a particular
* Tourist
*
* @ Param ID pIdTurista tourists to find
* @ Return List of Cultural Heritage Favorites
* @ Throws SQLException
* /
&lt;Integer&gt; ottieniBeniCulturaliPreferiti public ArrayList (int pIdTurista)
throws SQLException;

/ **
* Returns a list of favorite resting spot by a particular
* Tourist
*
* @ Param ID pIdTurista tourists to find
* @ Return List of Refreshment Favorites
* @ Throws SQLException
* /
&lt;Integer&gt; ottieniPuntoDiRistoroPreferiti public ArrayList (int pIdTurista)
throws SQLException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBVisitaBC</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanVisitaBC;

/ **
* Interface for handling feedback on a given asset
* Cultural
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBVisitaBC
(

/ **
* Inserts a visit
*
* @ Param PVIS Visit to insert
* @ Throws SQLException
* /
public boolean inserisciVisitaBC (BeanVisitaBC PVIS) throws SQLException;

/ **
* Modify a visit
*
* @ Param PVIS Visit to edit
* @ Throws SQLException
* @ Return True if and 'been changed otherwise false
* /
public boolean modificaVisitaBC (BeanVisitaBC PVIS) throws SQLException;

/ **
* Extract the list of visits to a cultural
*
* @ Param pIdBeneCulturale ID of the cultural
* @ Throws SQLException
* @ Return list of visits of the cultural
* /
&lt;BeanVisitaBC&gt; ottieniListaVisitaBC public ArrayList (int pIdBeneCulturale)
throws SQLException;

/ **
* Extract the list of cultural visited by a tourist
*
* @ Param ID pIdTurista tourists
* @ Throws SQLException
* @ Return ArrayList of all feedback issued by a tourist for a
* Specified cultural
* /
&lt;BeanVisitaBC&gt; ottieniListaVisitaBCTurista public ArrayList (int pIdTurista)
throws SQLException;

/ **
* Extract a visit by a tourist to a cultural
*
* @ Param pIdBeneCulturale ID of the cultural
* @ Param ID pIdTurista tourists
* @ Throws SQLException
* @ Return visit
* /
public BeanVisitaBC ottieniVisitaBC (pIdBeneCulturale int, int pIdTurista)
throws SQLException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IDBVisitaPR</id>
      <content>ï&gt;¿package unisa.gps.etour.repository;

import java.sql.SQLException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanVisitaPR;

/ **
* Interface for managing feedback related to a specific point
* Refreshments
*
* @ Author Joseph Martone
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IDBVisitaPR
(

/ **
* Add a visit to a refreshment
*
* @ Param PVIS visit to add
* @ Throws SQLException
* /
public boolean inserisciVisitaPR (BeanVisitaPR PVIS) throws SQLException;

/ **
* Modify a visit
*
* @ Param PVIS Visit to edit
* @ Throws SQLException
* @ Return True if and 'been changed otherwise false
* /
public boolean modificaVisitaPR (BeanVisitaPR PVIS) throws SQLException;

/ **
* Extract the list of visits to a refreshment
*
* @ Param pIdPuntoDiRistoro point identification Refreshments
* @ Throws SQLException
* @ Return List of visits
* /
&lt;BeanVisitaPR&gt; ottieniListaVisitaPR public ArrayList (int pIdPuntoDiRistoro)
throws SQLException;

/ **
* Extract a visit by a tourist at a refreshment
*
* @ Param pIdPuntoDiRistoro point identification Refreshments
* @ Param ID pIdTurista tourists
* @ Throws SQLException
* @ Return visit
* /
public BeanVisitaPR ottieniVisitaPR (pIdPuntoDiRistoro int, int pIdTurista)
throws SQLException;

/ **
* Extract the list of visits of a tourist
*
* @ Param ID pIdTurista tourists
* @ Return List of visits
* @ Throws SQLException
* /
&lt;BeanVisitaPR&gt; ottieniListaVisitaPRTurista public ArrayList (int pIdTurista)
throws SQLException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestioneAdvertisement</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneAdvertisement;

import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.HashMap;

import javax.swing.ImageIcon;

import unisa.gps.etour.bean.BeanBanner;

/ **
* Interface General Manager of Banner and news.
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* 2007 eTour Project - Copyright by SE @ SA Lab DMI University of Salerno
* /
public interface extends Remote IGestioneAdvertisement
(
/ **
* Inserts a new banner.
*
* @ Param pBanner Bean contains the data of the banner
* @ Throws RemoteException
* /
public boolean inserisciBanner (int pIdPuntoDiRistoro, Imagelcon pImmagineBanner)
throws RemoteException;
/ **
* Delete a banner from the system.
*
* @ Param pBannerID ID banner to be deleted.
* @ Return true if the operation is successful false otherwise.
* @ Throws RemoteException
* /
public boolean cancellaBanner (int pBannerID) throws RemoteException;
/ **
* Modify the data of the banner or the image associated.
*
* @ Param pBanner Bean contains the data of the banner.
* @ Return true if the operation is successful, false otherwise.
* @ Throws RemoteException
* /
public boolean modificaBanner (int pBannerID, Imagelcon pImmagine)
throws RemoteException;
/ **
* Returns a list of Banner of a particular point of comfort.
*
* @ Param Id pPuntoDiRistoroID of refreshment owner of banner
* @ Return ArrayList containing the list of banner refreshment
* @ Throws RemoteException
* /
&lt;BeanBanner,ImageIcon&gt; ottieniBannersDaID public HashMap (int pIdPuntoDiRistoro)
throws RemoteException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestioneAdvertisementAgenzia</id>
      <content>/ **
* Interface that provides management services dell'advertisement
* Operator agency.
*
* @ Author author
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
package com.trapan.spg.control.GestioneAdvertisement;

import java.rmi.RemoteException;
import java.util.ArrayList;

import com.trapan.spg.bean.BeanNews;

public interface IGestioneAdvetisementAgenzia extends IGestioneAdvertisement
(
/ **
* Method that inserts a new news system.
*
* @ Param Pnews Bean containing data news
* @ Throws RemoteException
* /
public boolean inserisciNews (BeanNews Pnews) throws RemoteException;
/ **
* Method which removes from the news system.
*
* @ Param ID pNewsID news be erased.
* @ Throws RemoteException
* /
public boolean cancellaNews (int pNewsID) throws RemoteException;
/ **
* Method amending the text of a news.
*
* @ Param Pnews Bean containing data news
* @ Throws RemoteException
* /
public boolean modificaNews (BeanNews Pnews) throws RemoteException;
/ **
* Returns the list of active news.
*
* @ Return ArrayList of ArrayList News
* @ Throws RemoteException
* /
&lt;BeanNews&gt; ottieniAllNews public ArrayList () throws RemoteException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestioneAdvertisementPuntoDiRistoro</id>
      <content>ï&gt;¿/ **
* Interface that provides management services dell'advertisement
* Operator eating place.
*
* @ Author Fabio Palladino
* @ Version 0.1
*
* 2007 eTour Project - Copyright by SE @ SA Lab DMI University of Salerno
* /
package unisa.gps.etour.control.GestioneAdvertisement;

public interface extends IGestioneAdvertisementPuntoDiRistoro
IGestioneAdvertisement
(
/ / Empty interface
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestioneBeniCulturaliAgenzia</id>
      <content>package unisa.gps.etour.control.GestioneBeniCulturali;

import java.rmi.RemoteException;
import java.util.ArrayList;
import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanVisitaBC;

/ **
* Interface for operations peculiar cultural heritage by
* Operator Agency.
*
* @ Author Michelangelo De Simone
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public interface extends IGestioneBeniCulturaliAgenzia
IGestioneBeniCulturaliComune
(
/ **
* Method for the insertion of a new cultural
*
* @ Param pBeneCulturale The raw bean to be included in the database
* @ Return boolean The result of the operation; true if was successful, false otherwise
* @ Throws RemoteException Exception flow
* /
public boolean inserisciBeneCulturale (BeanBeneCulturale pBeneCulturale) throws RemoteException;

/ **
* Method for the cancellation of a cultural object by id
*
* @ Param Id pBeneCulturaleID the bean to be deleted
* @ Return boolean The result of the operation; true if was successful, false otherwise
* @ Throws RemoteException Exception flow
* /
public boolean cancellaBeneCulturale (int pBeneCulturaleID) throws RemoteException;

/ **
* Method for the return of all cultural property in the
* Database
*
* @ Return ArrayList all the beans in the database
* @ Throws RemoteException Exception flow
* /
&lt;BeanBeneCulturale&gt; ottieniBeniCulturali public ArrayList () throws RemoteException;

/ **
* Method for updating (or change) the data of a cultural
*
* @ Param pBeneCulturale The bean with the new information of the cultural
* @ Return boolean The result of the operation; true if was successful, false otherwise
* @ Throws RemoteException Exception flow
* /
public boolean modificaBeneCulturale (BeanBeneCulturale pBeneCulturale) throws RemoteException;

/ **
* Method for setting a tag to a certain cultural
*
* @ Param pBeneCulturaleID The identifier of the cultural object to which to add a tag
* @ Param pTagID The ID tag to add to the cultural indicated
* @ Return boolean The result of the operation; true if was successful, false otherwise
* @ Throws RemoteException Exception flow
* /
public boolean aggiungiTagBeneCulturale (pBeneCulturaleID int, int pTagID) throws RemoteException;

/ **
* Method for removing a tag from a certain cultural
* To ensure that 'the operation is successful it is necessary that the cultural property has
* Actually set the specified tag
*
* @ Param pBeneCulturaleID The identifier of the cultural object from which to remove the tag
* @ Param pTagID The ID tag to be removed from the cultural indicated
* @ Return boolean The result of the operation; true if was successful, false otherwise
* @ Throws RemoteException Exception flow
* /
public boolean rimuoviTagBeneCulturale (pBeneCulturaleID int, int pTagID) throws RemoteException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestioneBeniCulturaliComune</id>
      <content>package unisa.gps.etour.control.GestioneBeniCulturali;

import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.HashMap;
import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.bean.BeanVisitaBC;

/ **
* Interface for operations common to users and operators on Agency
* Beniculturali
*
* @ Author Michelangelo De Simone
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
public interface extends Remote IGestioneBeniCulturaliComune
(
/ **
*
* Method to return a particular Cultural Heritage
*
* @ Param pBeneCulturaleID The identifier of the cultural property to be returned
* @ Return BeanBeneCulturale Contains data required of Cultural Heritage
* @ Throws RemoteException Exception flow
* /
public BeanBeneCulturale ottieniBeneCulturale (int pBeneCulturaleID) throws RemoteException;

/ **
* Returns the list of tags of a cultural
*
* @ Param ID pBeneCulturaleID of Cultural Heritage
* @ Return ArrayList of the cultural &lt;BeanTag&gt; tags specified
* @ Throws RemoteException Exception flow
* /
&lt;BeanTag&gt; ottieniTagBeneCulturale public ArrayList (int pBeneCulturaleID) throws RemoteException;

/ **
*
* Returns a list of feedback to the cultural specified
*
* @ Param ID pBeneCulturaleID of Cultural Heritage
* @ Return HashMap &lt;BeanVisitaBC, String&gt; The feedback of Cultural Heritage
* @ Throws RemoteException Exception flow
* /
&lt;BeanVisitaBC, String&gt; ottieniFeedbackBeneCulturale public HashMap (int pBeneCulturaleID) throws RemoteException;

/ **
*
* Returns for the cultural property specified, an array where each position contains the number of
* Feedback corresponding to the value of the array more than 'one.
* The calculation and 'made in the period between 30 days and today.
*
* @ Param ID pBeneCulturaleID of Cultural Heritage
* @ Return ArrayList &lt;Integer&gt; The statistics of last thirty days
* @ Throws RemoteException Exception flow
* /
&lt;Integer&gt; ottieniStatisticheBeneCulturale public ArrayList (int pBeneCulturaleID) throws RemoteException;

/ **
* Method for updating (or modification) of a feedback for a certain good
* Cultural. The method has the burden of
*
* @ Param pBeneCulturaleID The identifier of the cultural change which the feedback
* @ Param pBeanVisitaBC The new feedback to the cultural indicated
* @ Return boolean The result of the operation; true if was successful, false otherwise
* @ Throws RemoteException Exception flow
* /
public boolean modificaFeedbackBeneCulturale (int pBeneCulturaleID, BeanVisitaBC pBeanVisitaBC) throws RemoteException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestionePuntiDiRistoroAgenzia</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestionePuntiDiRistoro;

import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.HashMap;

import unisa.gps.etour.bean.BeanConvenzione;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanVisitaPR;

/ **
* Interface for refreshments on the side of the agency
*
* @ Author Joseph Morelli
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University
* Of Salerno
* /
public interface extends IGestionePuntiDiRistoroAgenzia
IGestionePuntiDiRistoroComune
(

/ **
* Method for inserting a new Refreshment
*
* @ Param pPuntoDiRistoro containing all the data from the Refreshment
* Add
* @ Throws RemoteException Exception Remote
* /
public boolean inserisciPuntoDiRistoro (BeanPuntoDiRistoro pPuntoDiRistoro)
throws RemoteException;

/ **
* Method for deleting a refreshment bar with ID
*
* @ Param pIDPuntoDiRistoro for the unique identification of point
* Refreshments
* @ Throws RemoteException Exception Remote
* /
public boolean cancellaPuntoDiRistoro (int pPuntoDiRistoroID)
throws RemoteException;

/ **
* Method to return all the refreshment of the DataBase
*
* @ Return ArrayList containing all the beans of the present Refreshments
* In the DataBase
* @ Throws RemoteException Exception Remote
* /
&lt;BeanPuntoDiRistoro&gt; ottieniPuntiDiRistoro public ArrayList ()
throws RemoteException;

/ **
* Method to return all the refreshment with convention
* Active or not
*
* @ Param Boolean statoConvenzione for the type of eateries by
* Get (contracted or not)
* @ Return ArrayList containing all the beans of the present Refreshments
* In the database depending on the status of the Convention
* @ Throws RemoteException Exception Remote
* /
public ArrayList &lt;BeanPuntoDiRistoro&gt; ottieniPuntiDiRistoro (
statoConvenzione boolean) throws RemoteException;

/ **
* Method for inserting a new convention for a certain point
* Refreshments
*
* @ Param pPuntoDiRistoroID integer that uniquely identifies the point
* Refreshments
* @ Param pConv Convention that will enable (Parameter ID
* Refreshment create redundancy but is useful for security
* Data)
* @ Return boolean for confirmation of operation
* @ Throws RemoteException Exception Remote
* /
public boolean attivaConvenzione (int pPuntoDiRistoroID,
BeanConvenzione pConv) throws RemoteException;

/ **
* Method to get all the feedback associated to a certain point
* Refreshments
*
* @ Param pPuntoDiRistoroID unique identifier of the Refreshment
* To get feedback
* @ Return HashMap containing the bean as the key value of feedback and how
* The tourist who issued the feedback
* @ Throws RemoteException Exception Remote
* /
public HashMap &lt;BeanVisitaPR, String&gt; ottieniFeedbackPuntoDiRistoro (
pPuntoDiRistoroID int) throws RemoteException;

/ **
* Method for updating (or change) the data of a Refreshment
*
* @ Param pPuntoDiRistoroID for the unique identification of point
* Refreshments to be amended
* @ Param pPuntoDiRistoroAggiornato containing the new data to be saved
* @ Return Boolean value-true if the operation went successfully,
* False otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean modificaPuntoDiRistoro (
BeanPuntoDiRistoro pPuntoDiRistoroAggiornato)
throws RemoteException;

/ **
* Method which allows you to insert a tag to search for a useful point
* Refreshments
*
* @ Param pPuntoDiRistoroId unique identifier of Refreshment
* @ Param pTagId unique ID tags to be inserted
* @ Return Boolean value-true if the operation went successfully,
* False otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean inserisciTagPuntoDiRistoro (pPuntoDiRistoroId int, int pTagId)
throws RemoteException;

/ **
* Method which allows you to delete a tag to search for a useful point
* Refreshments
*
* @ Param pPuntoDiRistoroId unique identifier of Refreshment
* @ Param pTagId unique ID tags to be inserted
* @ Return Boolean value-true if the operation went successfully,
* False otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean cancellaTagPuntoDiRistoro (pPuntoDiRistoroId int, int pTagId)
throws RemoteException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestionePuntiDiRistoroComune</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestionePuntiDiRistoro;

import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.ArrayList;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.bean.BeanVisitaPR;

/ **
* Interface for common operations on the refreshment
*
* @ Author Joseph Morelli
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface extends Remote IGestionePuntiDiRistoroComune
(

/ **
* Method to return a particular Refreshment
*
* @ Param pPuntoDiRistoroID to identify the Refreshment from
* Return
* @ Return Bean contains the data of Refreshment concerned
* @ Throws RemoteException Exception Remote
* /
public BeanPuntoDiRistoro ottieniPuntoDiRistoro (int pPuntoDiRistoroID)
throws RemoteException;

/ **
* Method which returns the tags to some refreshment
*
* @ Param pPuntoDiRistoroID point identification Refreshment
* @ Return structure containing all BeanTag associated with the point
* Refreshments passed as parameter
* @ Throws RemoteException Exception Remote
* /
&lt;BeanTag&gt; ottieniTagPuntoDiRistoro public ArrayList (int pPuntoDiRistoroID)
throws RemoteException;

/ **
* Method which returns the last 10 comments made for a
* Refreshment
*
* @ Param pPuntoDiRistoroID ID for the point of rest in
* Question
* @ Return Array of strings containing 10 items
* @ Throws RemoteException Exception Remote
* /
public String [] ottieniUltimiCommenti (int pPuntoDiRistoroID)
throws RemoteException;

/ **
* Returns for the Refreshment specified, an array where each
* Location contains the number of ratings corresponding to the value
* Index of the array more 'one. The calculation and 'made in the period
* 30 days and today.
*
* @ Param pPuntoDiRistoroID unique identifier of Refreshment
* @ Return ArrayList containing the counters as explained above
* @ Throws RemoteException Exception Remote
* /
public ArrayList &lt;Integer&gt; ottieniStatistichePuntoDiRistoro (
pPuntoDiRistoroID int) throws RemoteException;

/ **
* Method which allows you to change the comment issued for a
* Refreshment
*
* @ Param pPuntoDiRistoroId unique identifier of Refreshment
* @ Param nuovaVisita Bean containing new comment
* @ Return Boolean value-true if the operation went successfully,
* False otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean modificaFeedbackPuntoDiRistoro (int pPuntoDiRistoroId,
BeanVisitaPR nuovaVisita) throws RemoteException;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestioneTagComune</id>
      <content>ï&gt;¿	
package unisa.gps.etour.control.GestioneTag;

import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanTag;

/ **
* Common interface for managing Tag
*
* @ Author Joseph Morelli
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface extends Remote IGestioneTagComune
(

/ **
* Method which returns all the tags stored in the database
*
* @ Return an ArrayList of BeanTag
* @ Throws RemoteException Exception Remote
* /
&lt;BeanTag&gt; ottieniTags public ArrayList () throws RemoteException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestioneTagOperatoreAgenzia</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneTag;

import java.rmi.RemoteException;

import unisa.gps.etour.bean.BeanTag;

/ **
* Interface for the tag handler by the Operator Agency
*
* @ Author Joseph Morelli
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IGestioneTagOperatoreAgenzia extends IGestioneTagComune
(

/ **
* Method to insert a new tag
*
* @ Param pTagNuovo containing all the data of the new Tag
* @ Return Boolean: true if the operation is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean inserisciTag (BeanTag pTagNuovo) throws RemoteException;

/ **
* Method for the cancellation of an existing tag
*
* @ Param pTagID to identify the tags in question
* @ Return Boolean: true if the operation is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean cancellaTag (int pTagID) throws RemoteException;

/ **
* Method for editing a Tag
*
* @ Param pTagModificato containing the details of the new Tag
* @ Return Boolean: true if the operation is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean modificaTag (BeanTag pTagModificato) throws RemoteException;

/ **
* Method which returns a tag identified by its ID
*
* @ Param pTagID to identify a particular tag
* @ Return a BeanTag containing data Tag concerned
* @ Throws RemoteException Exception Remote
* /
public BeanTag ottieniTag (int pTagID) throws RemoteException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestioneTuristaClient</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneUtentiRegistrati;

import java.rmi.RemoteException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanPreferenzaDiRicerca;
import unisa.gps.etour.bean.BeanPreferenzeGeneriche;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.bean.BeanVisitaPR;

/ **
* Interface on the Management of Tourist Information
*
* @ Author Joseph Penna, Federico Leon
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab University of DMI
* Salerno
* /
public interface IGestioneTuristaClient extends IGestioneTuristaComune
(

/ **
* Method for the insertion of a Tourist
*
* @ Param pTurista container for all data relating to tourism by
* Insert
* @ Return Boolean: True if the insertion is successful, False otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean inserisciTurista (BeanTurista pTurista)
throws RemoteException;

/ **
* Method for including the General Preferences Tourist
*
* @ Param pIdTurista Identifier Turista which involve
* General Preferences
* @ Param pPreferenzeGeneriche General Preferences for inclusion
* @ Return Boolean: True if the insertion is successful, False otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean inserisciPreferenzeGeneriche (
BeanPreferenzeGeneriche pPreferenzeGeneriche)
throws RemoteException;

/ **
* Method for the extraction Preferences generously given Tourists
*
* @ Param pIdTurista Identifier Turista which you want
* Get the General Preferences
* @ Return Preferences General information relating to tourism
* @ Throws RemoteException Exception Remote
* /
public BeanPreferenzeGeneriche ottieniPreferenzeGeneriche (int pIdTurista)
throws RemoteException;

/ **
* Method for changing the Preferences generously given Tourists
*
* @ Param ID pIdTurista of tourists for whom you want
* Change the General Preferences
* @ Param pPreferenzeGenericheNuove The Prefereferze General for inclusion
* @ Param pPreferenzeGenericheVecchie Preferences generous to replace
* @ Return Boolean: True if the MADIF successful, False otherwise
* @ Throws RemoteException
* /
public boolean modificaPreferenzeGeneriche (
BeanPreferenzeGeneriche pPreferenzeGenericheNuove)
throws RemoteException;

/ **
* Method for the removal of preferences associated with the General
* Tourist
*
* @ Param ID pIdTurista of tourists for whom you want
* Delete the General Preferences
* @ Return Preferences General erased
* @ Throws RemoteException Exception Remote
* /
public BeanPreferenzeGeneriche cancellaPreferenzeGeneriche (int pIdTurista)
throws RemoteException;

/ **
* Method to insert a Search Preferences
*
* @ Param ID pIdTurista of tourists for which you intend
* Insert a Search Preferences
* @ Param pPreferenzaDiRicerca Search Preferences be included
* @ Return Boolean: True if the insertion is successful, False otherwise
* @ Throws RemoteException
* /
public boolean inserisciPreferenzaDiRicerca (int pIdTurista,
BeanPreferenzaDiRicerca pPreferenzaDiRicerca)
throws RemoteException;

/ **
* Method for extracting the set of Search Preferences given
* Tourist
*
* @ Param ID pIdTurista of tourists for whom you want
* Extract search preferences
Together * @ return the search preferences associated with the Tourist information
* @ Throws RemoteException Exception Remote
* /
public BeanPreferenzaDiRicerca [] ottieniPreferenzeDiRicerca (
pIdTurista int) throws RemoteException;

/ **
* Method for deleting a Search Preference given its
* ID and Tourists
*
* @ Param ID pIdTurista of tourists for whom you want
* Delete a Search Preferences
* @ Param ID pIdPreferenzaDiRicerca Search Preferences
* To cancel
* @ Return The preference of search Delete
* @ Throws RemoteException Exception Remote
* /
public BeanPreferenzaDiRicerca cancellaPreferenzeDiRicerca (int pIdTurista,
pIdPreferenzaDiRicerca int) throws RemoteException;

/ **
* Method to extract the list references to the Cultural Heritage
* Visited by a tourist
*
* @ Param pIdTurista Identifier Turista
* @ Return list of references to the Cultural Heritage Visited
* @ Throws RemoteException Exception Remote
* /
public BeanVisitaBC [] ottieniBeniCulturaliVisitati (int pIdTurista)
throws RemoteException;

/ **
* Method for the extraction of the list when making reference to Refreshments
* Visited by a tourist
*
* @ Param pIdTurista Identifier Turista
* @ Return list of references to Refreshments Visited
* @ Throws RemoteException Exception Remote
* /
public BeanVisitaPR [] ottieniPuntiDiRistoroVisitati (int pIdTurista)
throws RemoteException;

/ **
* Method for the insertion of a cultural Visited
*
* @ Param pVisitaBC package containing all information relating to
* Visit
* @ Return true if the item is added successfully, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean inserisciBeneCulturaleVisitato (BeanVisitaBC pVisitaBC)
throws RemoteException;

/ **
* Method for inserting a refreshment Visited
*
* @ Param pVisitaPR package containing all information relating to
* Visit
* @ Return true if the item is added successfully, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean inserisciPuntoDiRistoroVisitato (BeanVisitaPR pVisitaPR)
throws RemoteException;

/ **
* Method for the insertion of a cultural object in the list of Favorites
*
* @ Param pIdTurista Identifier Turista
* @ Param ID pIdBeneCulturale of Cultural Heritage
* @ Return true if the insertion is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean inserisciBeneCulturalePreferito (int pIdTurista,
pIdBeneCulturale int) throws RemoteException;

/ **
* Method for inserting a refreshment to my Favorites
*
* @ Param pIdTurista Identifier Turista
* @ Param pIdPuntoDiRistoro point identification Refreshment
* @ Return true if the insertion is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean inserisciPuntoDiRistoroPreferito (int pIdTurista,
pIdPuntoDiRistoro int) throws RemoteException;

/ **
* Method for the cancellation of a cultural object from the list of Favorites
*
* @ Param pIdTurista Identifier Turista
* @ Param ID pIdBeneCulturale of Cultural Heritage
* @ Return true if the cancellation is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean cancellaBeneCulturalePreferito (int pIdTurista,
pIdBeneCulturale int) throws RemoteException;

/ **
* Method for deleting a refreshment from the list of Favorites
*
* @ Param pIdTurista Identifier Turista
* @ Param pIdPuntoDiRistoro point identification Refreshment
* @ Return true if the cancellation is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean cancellaPuntoDiRistoroPreferito (int pIdTurista,
pIdPuntoDiRistoro int) throws RemoteException;

/ **
* Method to extract the list of Cultural Heritage Favorites
*
* @ Param pIdTurista Identifier Turista
* @ Return List of Cultural Heritage Favorites
* @ Throws RemoteException Exception Remote
* /
public BeanBeneCulturale [] ottieniBeniCulturaliPreferiti (int pIdTurista)
throws RemoteException;

/ **
* Method to extract the list of Refreshments
*
* @ Param pIdTurista Identifier Turista
* @ Return list of eateries Favorites
* @ Throws RemoteException Exception Remote
* /
public BeanPuntoDiRistoro [] ottieniPuntiDiRistoroPreferiti (int pIdTurista)
throws RemoteException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IGestioneTuristiAgenzia</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneUtentiRegistrati;

import java.rmi.RemoteException;
import java.util.ArrayList;

import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.bean.BeanVisitaPR;

/ **
* Interface for handling tourists from the side of the transaction Agency
*
* @ Author Joseph Morelli
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /
public interface IGestioneTuristiAgenzia extends IGestioneTuristaComune
(

/ **
* Method for the cancellation of a tourist from the Database
*
* @ Param pIdTurista Identifier Tourist delete
* @ Return Boolean: true if the operation is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean delete (int pIdTurista) throws RemoteException;

/ **
* Method to activate a registered tourists
*
* @ Param pIdTurista ID to activate the Tourist
* @ Return Boolean: true if the operation is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean attivaTurista (int pIdTurista) throws RemoteException;

/ **
* Method to disable an active tourists
*
* @ Param to disable pIdTurista Identifier Tourist
* @ Return Boolean: true if the operation is successful, false otherwise
* @ Throws RemoteException Exception Remote
* /
public boolean disattivaTurista (int pIdTurista) throws RemoteException;

/ **
* Method to obtain a collection of Tourists
*
* @ Return ArrayList of BeanTurista
* @ Throws RemoteException Exception Remote
* /
&lt;BeanTurista&gt; ottieniTuristi public ArrayList () throws RemoteException;

/ **
* Method to obtain a collection of active tourists or not
*
* @ Param boolean statoAccount Tourists can choose
* On whether
* @ Return ArrayList of BeanTurista
* @ Throws RemoteException Exception Remote
* /
public ArrayList &lt;BeanTurista&gt; ottieniTuristi (boolean statoAccount)
throws RemoteException;

/ **
* Method to get all the feedback issued by a tourist for the points
* Refreshments
*
* @ Param pIdTurista ID to pick up the tourists in
* Feedback
* @ Return ArrayList containing all the beans Feedback released
* @ Throws RemoteException Exception Remote
* /
&lt;BeanVisitaPR&gt; ottieniFeedbackPR public ArrayList (int pIdTurista)
throws RemoteException;

/ **
* Method to get all the feedback issued by a tourist for Heritage
* Cultural
*
* @ Param pIdTurista ID to pick up the tourists in
* Feedback
* @ Return ArrayList containing all the beans Feedback released
* @ Throws RemoteException Exception Remote
* /
&lt;BeanVisitaBC&gt; ottieniFeedbackBC public ArrayList (int pIdTurista)
throws RemoteException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_IRicerca</id>
      <content>package unisa.gps.etour.control.GestioneRicerche;

import java.rmi.Remote;
import java.rmi.RemoteException;

import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.util.Punto3D;

/ **
* Interface for management of research
*
* @ Author Joseph Penna
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public interface extends Remote IRicerca
(

/ / Constants identify the types of site
public final static byte BENE_CULTURALE = 0;
public final static byte PUNTO_DI_RISTORO = 1;

/ **
* Initialization method for research
*
* @ Param pIdTurista ID of the tourist. Pass -1 in case of a Guest
* @ Param pParoleChiave Together keyword search
Together * @ param pTagsId Search Tags
* @ Param pRaggioMax Maximum distance between the user and the site
* @ Param numeroElementiPerPagina number of items to look for in a
* Search session
* @ Param pPosizioneUtente detected by the GPS user position
* @ Param type pTipologiaSito site search
* @ Return number of elements emerged from the research. On error
* Returns -1
* @ Throws RemoteException the remote exception
* /
public int search (int pIdTurista, pParoleChiave String, int [] pTagsId, double pRaggioMax,
int pElementiPerPagina, Punto3D pPosizioneUtente,
pTipologiaSito bytes) throws RemoteException;

/ **
* Method for returning the list of emerging from the Cultural Heritage
* Research, in a given interval
*
* @ Param pPagina range of items to be included in the results
* @ Return entirety of cultural property related to the range of results
* Selected search. In case of error returns null
* @ Throws RemoteException Exception Remote
* /
public BeanBeneCulturale [] ottieniPaginaRisultatiBeneCulturale (int pPagina)
throws RemoteException;

/ **
* Method to return the list of eateries have emerged from
* Research related to a specific intevallo
*
* @ Param pPagina range of items to be included in the results
* @ Return set of points relating to the range of refreshment
* Selected search results. In case of error returns null
* @ Throws RemoteException Exception Remote
* /
public BeanPuntoDiRistoro [] ottieniPaginaRisultatiPuntoDiRistoro (int pPagina)
throws RemoteException;

/ **
* Method for returning the number of elements results from
* Search
*
* @ Return number of elements emerged in the research phase. Where no
* Is initialized the search returns -1
* /
public int ottieniNumeroElementiRicerca () throws RemoteException;

/ **
* Method for returning the number of pages appear in results
*
* @ Return number of pages that have emerged in the research phase. Where no
* Is initialized the search returns -1
* /
public int ottieniNumeroPagineRicerca () throws RemoteException;

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_LimitedDocument</id>
      <content>package unisa.gps.etour.gui.operatoreagenzia.documents;

import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

public class extends LimitedDocument PlainDocument
(
private static final long serialVersionUID = 1L;
private int maxLength;

public LimitedDocument (int pMaxLength)
(
maxLength = pMaxLength;
)

public void insertString (int pOffset, String pStringa, AttributeSet pAttribute) throws BadLocationException
(
if (null == pStringa)
(
return;
)
/ / Note: the content is always a newline at the end
int capacity = maxLength + 1 - getContent (). length ();
/ / If the maximum length is greater than or equal to the string, the part.
if (capacity&gt; = pStringa.length ())
(
super.insertString (pOffset, pStringa, pAttribute);
)
/ / Otherwise add what may
else
(
if (capacity&gt; 0)
(
super.insertString (pOffset, pStringa.substring (0, capacity), pAttribute);
)
)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_MediaVotiRenderer</id>
      <content>ï&gt;¿package unisa.gps.etour.gui.operatoreagenzia.tables;

import java.awt.Component;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import unisa.gps.etour.gui.operatoreagenzia.Home;

/ **
* &lt;b&gt; MediaVotiRenderer &lt;/ b&gt;
* &lt;p&gt;
* This class creates a custom renderer for the average ratings of a
* Site. &lt;/ B&gt;
*
* @ See javax.swing.table.DefaultTableRenderer;
* @ See javax.swing.table.TableCellRenderer;
* @ Version 1.0
* @ Author Mario Gallo
* /
public class extends MediaVotiRenderer DefaultTableCellRenderer
(

/ **
* Method that returns the custom component for the
* Display of the data contained in the cell of a table.
*
* @ Param pTable JTable - the table.
* @ Param Object pValue - the data.
* @ Param boolean pSelected --
* &lt;ul&gt;
* &lt;li&gt; &lt;i&gt; True &lt;/ i&gt; if the selected cell.
* &lt;li&gt; &lt;i&gt; False &lt;/ i&gt; otherwise.
* &lt;/ Ul&gt;
* @ Param boolean pHasFocus --
* &lt;ul&gt;
* &lt;li&gt; &lt;i&gt; True &lt;/ i&gt; if the cell has the focus.
* &lt;li&gt; &lt;i&gt; False &lt;/ i&gt; otherwise.
* &lt;/ Ul&gt;
* @ Param int pRow - the line number.
* @ Param int pColumn - the column number.
* @ Return Component - the component that customizes render the cell.
* @ Throws IllegalArgumentException - if the value of the cell can not
* Be rendered by this renderer.
* /
public Component getTableCellRendererComponent (JTable pTable,
Object pValue, boolean pSelected, boolean pFocus, int prow,
pColumn int) throws IllegalArgumentException
(
if ((pValue instanceof Double | | pValue instanceof Integer))
(
throw new IllegalArgumentException ( &quot;Value cell unexpected.&quot;);
)
double rating = 0;
if (pValue instanceof Double)
(
Rate = (Double) pValue;
)
else
(
Rating + = (Integer) pValue;
)

JLabel aLabel = new JLabel (&quot;&quot;);
aLabel.setHorizontalAlignment (JLabel.CENTER);

if (rating&gt; 4)
(
aLabel.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella5.gif &quot;)));
)
else if (rating &lt;= 4 &amp; &amp; rating&gt; 3)
(
aLabel.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella4.gif &quot;)));
)
else if (rating &lt;= 3 &amp; &amp; rating&gt; 2)
(
aLabel.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella3.gif &quot;)));
)
else if (grade &lt;= 2 &amp; &amp; rating&gt; 1)
(
aLabel.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella2.gif &quot;)));
)
else
(
aLabel.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella1.gif &quot;)));
)
aLabel return;

)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_MessaggiErrore</id>
      <content>ï&gt;¿package unisa.gps.etour.util;

/ **
* Standard error message self-describing
*
* @ Author Michelangelo De Simone
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
public class MessaggiErrore
(
/ / Occurs when connecting to the DBMS
public static final String ERRORE_CONNESSIONE_DBMS = &quot;Connection to DBMS Failed&quot;;

/ / Occurs when you can not perform an operation on the DBMS
public static final String ERRORE_DBMS = &quot;Error DBMS;

/ / It occurs in conditions not specified
public static final String ERRORE_SCONOSCIUTO = &quot;Unknown error&quot;;

/ / Occurs when there are format errors in a bean
public static final String ERRORE_FORMATO_BEAN = &quot;Error data bean;

/ / Occurs when a data error
public static final String ERRORE_DATI = &quot;Data Error&quot;;

/ / Occurs when an error occurs on read / write files
public static final String ERRORE_FILE = &quot;Error reading / writing file&quot;;

/ / Occurs when you have reached the maximum number of banners displayed
public static final String ERRORE_NUM_BANNER = &quot;count exceeded banner inserted&quot;;
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_News</id>
      <content>ï&gt;¿package unisa.gps.etour.gui.operatoreagenzia;

import java.awt .*;
import java.awt.event .*;
import java.io.FileNotFoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.Date;
import javax.swing .*;
import java.util .*;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.border .*;
import unisa.gps.etour.bean.BeanNews;
import unisa.gps.etour.control.GestioneAdvertisement.IGestioneAdvertisementAgenzia;
import unisa.gps.etour.gui.DeskManager;
import unisa.gps.etour.gui.HelpManager;
import unisa.gps.etour.gui.operatoreagenzia.document.LimitedDocument;
import unisa.gps.etour.gui.operatoreagenzia.tables.NewsTableModel;
import unisa.gps.etour.gui.operatoreagenzia.tables.PrioritaRenderer;
import unisa.gps.etour.gui.operatoreagenzia.tables.ScrollableTable;
import unisa.gps.etour.gui.operatoreagenzia.tables.TestoNewsRenderer;
import unisa.gps.etour.util.Data;

/ **
* This class implements the interface for collecting news for the actor
* Operator Agency.
*
* @ Version 1.0
* @ Author Mario Gallo
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class News extends JInternalFrame
(
private JPanel jContentPane = null;
Private JToolBar NewsToolbar = null;
private JButton btnEliminaN = null;
private JPanel rightPanel = null;
private JPanel formNews = null;
Private JSlider prSlider = null;
private JButton btnInsertModify = null;
private JButton btnReset = null;
private JPanel panelHelp = null;
private JTextPane textGuida = null;
private JScrollPane scrollTableNews = null;
private JTable tableNews = null;
private JTextArea testoNews = null;
private JComboBox durataNews = null;
private JButton btnModificaN = null;
private JLabel labelCaratteri;
private int idNews = -1;
private NewsTableModel TableModel;
Private HelpManager newsHelp;
protected DeskManager desktopManager;
protected JDesktopPane JDesktopPane;
Private IGestioneAdvertisementAgenzia gestioneNews;

/ **
* This is the default constructor.
* /
public News ()
(
super ( &quot;News&quot;);
setPreferredSize (Home.CHILD_SIZE);
setMinimumSize (new Dimension (600, 480));
setResizable (true);
setFrameIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;News32.png &quot;)));
setIconifiable (true);
setMaximizable (true);
setClosable (true);

/ / Setting up dell'help manager to manage the news.
textGuida = new JTextPane ();
TRY
(
newsHelp = new HelpManager (Home.URL_HELP + &quot;news.txt&quot; textGuida);
)
catch (FileNotFoundException e)
(
textGuida
. setText ( &quot;&lt;html&gt; &lt;b&gt; Help not available &lt;/ b&gt; &lt;/ html&gt;&quot;);
)

setContentPane (getJContentPane ());

addInternalFrameListener (new InternalFrameAdapter ()
(

/ *
* Inclusion of the frame on the desktop desktop retrieves bread bread
* And desktop manager and initializes the remote objects
* Management of cultural heritage.
* /

public void internalFrameOpened (InternalFrameEvent pEvent)
(
PEvent.getInternalFrame JInternalFrame frame = ();
JDesktopPane frame.getDesktopPane = ();
desktopManager = (DeskManager) jDesktopPane.getDesktopManager ();

/ / Setting up objects for remote asset management
/ / Cultural.
TRY
(
Registry reg = LocateRegistry.getRegistry (Home.HOST);
gestioneNews = (IGestioneAdvertisementAgenzia) reg
. lookup ( &quot;GestioneAdvertisementAgenzia&quot;);

/ / Load data.
caricaTabella ();
)
/ *
* Two exceptions: RemoteException and NotBoundException. The
* Result is the same. The management is not operable and
* After the error message window closes.
* /
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; The dialog management request is closed. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; &lt;b&gt; Possible Causes: &lt;/ b&gt;&quot;
+ &quot;&lt;ul&gt; &lt;li&gt; No connection to the network. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; inactive. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; clogged. &lt;/ Li&gt; &lt;/ ul&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (JDesktopPane, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
frame.dispose ();
)
)
));
)

/ **
* Initialize the content pane of the frame inside.
*
* @ Return javax.swing.JPanel - the content pane.
* /
private JPanel getJContentPane ()
(
if (null == jContentPane)
(
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());
jContentPane.add (getNewsToolbar (), BorderLayout.NORTH);
jContentPane.add (getRightPanel (), BorderLayout.EAST);
jContentPane.add (getTableNews (), BorderLayout.CENTER);
)
jContentPane return;
)

/ **
* This method initializes the toolbar to manage the news.
*
* @ Return javax.swing.JToolBar - the toolbar management news.
* /
Private JToolBar getNewsToolbar ()
(
if (null == NewsToolbar)
(
NewsToolbar JToolBar = new ();
NewsToolbar.setFloatable (false);
NewsToolbar.add (getBtnModificaN ());
NewsToolbar.addSeparator ();
NewsToolbar.add (getBtnEliminaN ());
)
NewsToolbar return;
)

/ **
* This method initializes the button to edit a news.
*
* @ Return javax.swing.JButton - button to change.
* /
private JButton getBtnModificaN ()
(
if (null == btnModificaN)
(
btnModificaN = new JButton ();
btnModificaN.setText ( &quot;Edit News&quot;);
btnModificaN.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;ModificaNews32.png &quot;)));
btnModificaN.setCursor (Cursor
. getPredefinedCursor (Cursor.HAND_CURSOR));
btnModificaN.setName (btnModifica &quot;);
btnModificaN.addMouseListener (newsHelp);
btnModificaN.setEnabled (false);
btnModificaN.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent pActionEvent)
(
int selectedRow = tableNews.getSelectedRow ();
if (idNews == -1) / / In this way I know if she was
/ / Edit
(
btnInsertModify.setText ( &quot;Change&quot;);
btnInsertModify.setIcon (new ImageIcon (getClass ()
. getResource (Home.URL_IMAGES + &quot;Salva16.png &quot;)));
btnReset.setText ( &quot;Cancel&quot;);
btnReset.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;Annulla16.png &quot;)));
formNews.setBorder (BorderFactory.createTitledBorder (
BorderFactory.createLineBorder (new Color (51,
102, 255), 3), &quot;Edit News&quot;
TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font (
&quot;Dialog&quot;, Font.BOLD, 12), new Color (0,
102, 204)));
)
String text = (String) tableModel.getValueAt (selectedRow,
0);
numCaratteri int = 200 - testo.length () + 1;
labelCaratteri.setText ( &quot;# Characters:&quot; + numCaratteri);
Document testoNews.getDocument doctest = ();
TRY
(
docTesto.remove (0, docTesto.getLength ());
docTesto.insertString (0, text, null);
)
catch (BadLocationException s)
(
e.printStackTrace ();
)
Expiry date = (Date) TableModel
. getValueAt (selectedRow, 3);
durataNews.setSelectedIndex (Data.getNumDays (expires));
idNews = tableModel.getID (selectedRow);
prSlider.setValue ((Integer) tableModel.getValueAt (
selectedRow, 1));
)

));
)
btnModificaN return;
)

/ **
* This method initializes the button to delete a news.
*
* @ Return javax.swing.JButton - the button for deletion.
* /
private JButton getBtnEliminaN ()
(
if (null == btnEliminaN)
(
btnEliminaN = new JButton ();
btnEliminaN.setText ( &quot;Delete News&quot;);
btnEliminaN.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;EliminaNews32.png &quot;)));
btnEliminaN.setEnabled (false);
btnEliminaN.setCursor (Cursor
. getPredefinedCursor (Cursor.HAND_CURSOR));
btnEliminaN.setName (btnElimina &quot;);
btnEliminaN.addMouseListener (newsHelp);
btnEliminaN.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent pEvent)
(
int selectedRow = tableNews.getSelectedRow ();

/ / Construction of the dialog for confirmation
/ / Elimination
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Are you sure you want to delete the selected news?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;The deleted data can not be filled again.&quot;
SwingConstants.CENTER);
avviso.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Delete&quot;, &quot;Cancel&quot;);

/ / The dialog screen appears
int choice = JOptionPane.showInternalOptionDialog (
jContentPane, root, &quot;Confirm Delete News&quot;
JOptionPane.YES_NO_OPTION,
JOptionPane.QUESTION_MESSAGE, new ImageIcon (
getClass (). getResource (
Home.URL_IMAGES
+ &quot;EliminaNews48.png&quot;)),
options, options [1]);

/ / If you chose to confirm the deletion
if (choice == JOptionPane.YES_OPTION)
(
TRY
(
gestioneNews.cancellaNews (TableModel
. getID (selectedRow));
tableModel.removeNews (selectedRow);
JOptionPane
. showInternalMessageDialog (
jContentPane,
&quot;The news has been selected successfully deleted&quot;
&quot;News out!&quot;
JOptionPane.OK_OPTION,
new ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES
+ &quot;Ok48.png &quot;)));
azzeraForm ();
)
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; Delete operation request can not be completed. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass ()
. getResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (JDesktopPane, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
)
)
)
));
)
btnEliminaN return;
)

/ **
* This method initializes the panel that realizes the interface side
* Right of news management.
*
* @ Return javax.swing.JPanel - the right panel.
* /
private JPanel getRightPanel ()
(
if (null == rightPanel)
(
rightPanel = new JPanel ();
rightPanel.setLayout (new GridBagLayout ());
GridBagConstraints g = new GridBagConstraints ();
g.fill = GridBagConstraints.BOTH;
g.gridx = 0;
g.gridy = 0;
g.weighty = 0.7;
rightPanel.add (getFormNews (), g);
g.weighty = 0.3;
g.gridy = 1;
rightPanel.add (getPanelHelp (), g);

)
rightPanel return;
)

/ **
* This method initializes the form for entering and editing a
* News.
*
* @ Return javax.swing.JPanel - the format
* /
private JPanel getFormNews ()
(
if (null == formNews)
(
formNews = new JPanel (new GridBagLayout ());
formNews.setBorder (BorderFactory.createTitledBorder (BorderFactory
. createLineBorder (new Color (51, 102, 255), 3),
&quot;New News&quot;, TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
GridBagConstraints g = new GridBagConstraints ();
g.anchor = GridBagConstraints.CENTER;
g.gridx = 0;
g.gridy = 0;
g.weighty = 0.1;
g.gridwidth = 1;
g.gridheight = 1;
g.insets = new Insets (5, 5, 5, 5);
formNews.add (new JLabel ( &quot;Text of the news:&quot;), g);
labelCaratteri = new JLabel ( &quot;# Characters: 200&quot;);
g.gridx = 1;
formNews.add (labelCaratteri, g);
g.gridx = 0;
g.gridwidth = 2;
g.gridy = 1;
g.weighty = 0.3;
g.fill = GridBagConstraints.VERTICAL;
JScrollPane scrollTesto = new JScrollPane (getTestoNews ());
scrollTesto
. setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
formNews.add (scrollTesto, g);
g.weighty = 0.1;
g.gridy = 2;
g.fill = GridBagConstraints.NONE;
formNews.add (new JLabel ( &quot;Priority:&quot;), g);
g.gridy = 3;
formNews.add (getPrSlider (), g);
New JPanel = new JPanel (new FlowLayout ());
nuovo.add (new JLabel ( &quot;Length of news :&quot;));
durataNews = new JComboBox ();
for (int i = 0; i &lt;= 60; i + +)
(
durataNews.addItem ( &quot;&quot; + i);
)
durataNews.setSelectedIndex (0);
durataNews.setEditable (false);
durataNews.setName ( &quot;duration&quot;);
durataNews.addMouseListener (newsHelp);
nuovo.add (durataNews);
nuovo.add (new JLabel ( &quot;days&quot;));
g.gridy = 4;
g.fill = GridBagConstraints.HORIZONTAL;
formNews.add (new, g);
g.gridwidth = 1;
g.gridy = 5;
formNews.add (getBtnInsertModify (), g);
g.gridx = 1;
formNews.add (getBtnReset (), g);
)
formNews return;
)

/ **
* This method initializes the slider to set the priority of a
* News.
*
* @ Return javax.swing.JSlider - the slider with ticks from 1 to 5.
* /
Private JSlider getPrSlider ()
(
if (null == prSlider)
(
prSlider = new JSlider (JSlider.HORIZONTAL, 5, 1);
prSlider.setMinimum (1);
prSlider.setMaximum (5);
prSlider.setMajorTickSpacing (1);
prSlider.setLabelTable (prSlider.createStandardLabels (1));
prSlider.setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
prSlider.setName ( &quot;priority&quot;);
prSlider.addMouseListener (newsHelp);
prSlider.setPaintLabels (true);
prSlider.setPaintTicks (true);
prSlider.setPaintTicks (true);
prSlider.setSnapToTicks (true);
)
prSlider return;
)

/ **
* This method initializes the radio button for submission of the form
* Insert / edit.
*
* @ Return javax.swing.JButton - the button of submission of the form.
* /
private JButton getBtnInsertModify ()
(
if (null == btnInsertModify)
(
btnInsertModify = new JButton ();
btnInsertModify.setText ( &quot;Insert&quot;);
btnInsertModify.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;nuovaNews16.png &quot;)));
btnInsertModify.setCursor (Cursor
. getPredefinedCursor (Cursor.HAND_CURSOR));
btnInsertModify.setName (btnInserisci &quot;);
btnInsertModify.addMouseListener (newsHelp);
btnInsertModify.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 12));
btnInsertModify.setHorizontalTextPosition (SwingConstants.TRAILING);
btnInsertModify.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent pEvent)
(
if (testoNews.getText (). length () == 0)
(
JOptionPane.showInternalMessageDialog (jContentPane,
&quot;The text of a news can not be empty!&quot;
&quot;Error New News&quot;, JOptionPane.ERROR_MESSAGE,
new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;error32.png &quot;)));
return;
)
if (idNews! = -1) / / We're making a change
(
/ / Construction of the dialog for confirmation of
/ / Edit
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Changing the selected news with&quot;
+ &quot;New data?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;The previous data can not be more recovered.&quot;
SwingConstants.CENTER);
avviso.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Edit&quot;, &quot;Cancel&quot;);
/ / The dialog screen appears
int choice = JOptionPane
. showInternalOptionDialog (
jContentPane,
root
&quot;Confirmation Change News&quot;
JOptionPane.YES_NO_OPTION,
JOptionPane.QUESTION_MESSAGE,
new ImageIcon (getClass (). getResource (
Home.URL_IMAGES
+ &quot;ModificaNews48.png&quot;)),
options, options [1]);
/ / If you chose to confirm the change
if (choice == JOptionPane.YES_OPTION)
(
TRY
(
Date expires = new Date ();
scadenza.setDate (scadenza.getDate ()
DurataNews.getSelectedIndex + ());
BeanNews new = new BeanNews (testoNews
. getText (), new Date (), expiration
prSlider.getValue (), idNews);
gestioneNews.modificaNews (new);
tableModel.updateNews (new);
JOptionPane
. showInternalMessageDialog (
jContentPane,
&quot;The news has been changed successfully selected.&quot;
&quot;News changed!&quot;
JOptionPane.OK_OPTION,
new ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES
+ &quot;Ok48.png &quot;)));
)
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; Change operation request can not be completed. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES
+ &quot;Error48.png&quot;));
JOptionPane.showMessageDialog (JDesktopPane,
error, &quot;Error!&quot;
JOptionPane.ERROR_MESSAGE, err);
)
)
)
else
/ / We are posting
(
Date expires = new Date ();
scadenza.setDate (scadenza.getDate ()
DurataNews.getSelectedIndex + ());
BeanNews new = new BeanNews (testoNews.getText (),
new Date (), maturity, prSlider.getValue (), 33);
TRY
(
boolean ok = gestioneNews.inserisciNews (new);
if (ok)
(
caricaTabella ();
tableModel.insertNews (new);
JOptionPane
. showInternalMessageDialog (
jContentPane,
&quot;The news is selected correctly inserted into the system.&quot;
&quot;New news!&quot;
JOptionPane.OK_OPTION,
new ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES
+ &quot;NuovaNews48.png &quot;)));
)
)
catch (RemoteException e)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; Insertion operation request can not be completed. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass ()
. getResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (JDesktopPane, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
)
)
tableModel.fireTableDataChanged ();
azzeraForm ();
)
));

)
btnInsertModify return;
)

/ **
* This method initializes the button to clear the form or
* Cancel editing actions on a selected news.
*
* @ Return javax.swing.JButton - the button above.
* /
private JButton getBtnReset ()
(
if (null == btnReset)
(
btnReset = new JButton ();
btnReset.setText ( &quot;Clear&quot;);
btnReset.setHorizontalTextPosition (SwingConstants.LEADING);
btnReset.setPreferredSize (new Dimension (103, 26));
btnReset.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;azzera16.png &quot;)));
btnReset.setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
btnReset.setName (btnAzzera &quot;);
btnReset.addMouseListener (newsHelp);
btnReset.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent arg0)
(
azzeraForm ();
)
));
)
btnReset return;
)

/ **
* This method initializes the panel's online help.
*
* @ Return javax.swing.JPanel
* /
private JPanel getPanelHelp ()
(
if (null == panelHelp)
(
panelHelp = new JPanel ();
panelHelp.setLayout (new BorderLayout ());
panelHelp.setBorder (BorderFactory.createTitledBorder (BorderFactory
. createLineBorder (new Color (51, 102, 255), 3),
&quot;Help&quot;, TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
textGuida.setEditable (false);
textGuida.setContentType ( &quot;text / html&quot;);
textGuida.setOpaque (false);
textGuida
. setText ( &quot;&lt;html&gt; Move your mouse pointer over a control&quot;
+ &quot;Of interest to display the context-sensitive help. &lt;/ Html&gt;&quot;);
textGuida.setName (textGuida &quot;);
textGuida.addMouseListener (newsHelp);
panelHelp.setPreferredSize(new Dimension(200, 100));
panelHelp.add (textGuida, BorderLayout.CENTER);
)
panelHelp return;
)

/ **
* This method initializes the table with all the news these
* In the system.
*
* @ Return javax.swing.JTable
* /
private JScrollPane getTableNews ()
(
if (null == tableNews)
(
NewsTableModel = new TableModel ();
tableNews = new ScrollableTable (TableModel);
tableNews.setRowHeight (64);
tableNews.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
tableNews.setSelectionBackground (new Color (0xe6, 0xe6, 0xFA));
tableNews.setColumnSelectionAllowed (false);
ListSelectionModel selectionModel = tableNews.getSelectionModel ();
selectionModel.addListSelectionListener (new ListSelectionListener ()
(
public void ValueChanged (ListSelectionEvent event)
(
int selectedRow = tableNews.getSelectedRow ();
btnModificaN.setEnabled ((selectedRow! = -1)? true: false);
btnEliminaN.setEnabled ((selectedRow! = -1)? true: false);
)
));
tableNews.addKeyListener (new KeyAdapter ()
(
public void keyPressed (KeyEvent PKEY)
(
int keyCode = pKey.getKeyCode ();
if (keyCode == KeyEvent.VK_ENTER)
(
btnModificaN.doClick ();
)
else if ((keyCode == KeyEvent.VK_CANCEL)
| | (KeyCode == KeyEvent.VK_BACK_SPACE))
(
btnEliminaN.doClick ();
)
)
));

scrollTableNews = new JScrollPane ();
scrollTableNews.setViewportView (tableNews);
scrollTableNews
. setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
)
scrollTableNews return;
)

/ **
* This method initializes the text area that contains the text of a news.
*
* @ Return javax.swing.JTextArea - the text area.
* /
private JTextArea getTestoNews ()
(
if (null == testoNews)
(
testoNews = new JTextArea ();
testoNews.setWrapStyleWord (true);
testoNews.setLineWrap (true);
testoNews.setBorder (BorderFactory.createLoweredBevelBorder ());
testoNews.setColumns (18);
testoNews.setLineWrap (true);
testoNews.setRows (4);
testoNews.setDocument (new LimitedDocument (200));
testoNews.setName ( &quot;text&quot;);
testoNews.addMouseListener (newsHelp);
testoNews.addKeyListener (new KeyAdapter ()
(
public void keyTyped (KeyEvent pKeyEvent)
(
keyChar pKeyEvent.getKeyChar = char ();
if (Character.isDigit (keyChar)
| | Character.isLetter (keyChar)
| | Character.isWhitespace (keyChar))
(
int len = testoNews.getText (). length ();
if (len! = 200)
(
labelCaratteri
. setText ( &quot;# Characters&quot;
+ (200 - (testoNews.getText ()
. length () + 1)));
)
)
)

public void keyPressed (KeyEvent pKeyEvent)
(
int keyCode = pKeyEvent.getKeyCode ();
if (keyCode == KeyEvent.VK_CANCEL
| | KeyCode == KeyEvent.VK_BACK_SPACE)
(
int len = testoNews.getText (). length ();
if (len! = 0)
(
labelCaratteri.setText ( &quot;# Characters&quot;
+ (200 - len + 1));
)
)
)
));

)
testoNews return;
)

/ **
* This method resets the form fields.
* /
private void azzeraForm ()
(
btnInsertModify.setText ( &quot;Insert&quot;);
btnReset.setText ( &quot;Clear&quot;);
btnReset.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;azzera16.png &quot;)));
formNews.setBorder (BorderFactory.createTitledBorder (BorderFactory
. createLineBorder (new Color (51, 102, 255), 3), &quot;New News&quot;
TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION,
new Font ( &quot;Dialog&quot;, Font.BOLD, 12), new Color (0, 102, 204)));
durataNews.setSelectedIndex (0);
testoNews.setText (&quot;&quot;);
tableNews.clearSelection ();
prSlider.setValue (1);
labelCaratteri.setText ( &quot;# Characters: 200&quot;);
idNews = -1;
)

/ **
* This method imports the news downloaded from the server in the table.
* /
private void caricaTabella ()
(
ArrayList &lt;BeanNews&gt; news = null;
TRY
(
gestioneNews.ottieniAllNews news = ();
)
/ / If an error displays an error message.
catch (RemoteException e)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;The list of &lt;h3&gt; &lt;u&gt; News is not loaded. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showInternalMessageDialog (this, error, &quot;Error!&quot;
JOptionPane.ERROR_MESSAGE, err);
)
finally
(
NewsTableModel = new TableModel (news);
tableNews.setModel (TableModel);
/ / Text of news
tableNews.getColumnModel (). GetColumn (0). setPreferredWidth (320);
tableNews.getColumnModel (). GetColumn (0). setCellRenderer (
New TestoNewsRenderer ());
/ / Priority
tableNews.getColumnModel (). GetColumn (1). setPreferredWidth (100);
tableNews.getColumnModel (). GetColumn (1). setCellRenderer (
New PrioritaRenderer ());
/ / Date of entry
tableNews.getColumnModel (). GetColumn (2). setPreferredWidth (80);
/ / End Date
tableNews.getColumnModel (). GetColumn (3). setPreferredWidth (80);
)

)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_NewsTableModelTest</id>
      <content>/ **
* Class tests for NewsTableModel
*
* @ Author Mario Gallo
* @ Version 0.1
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab - University of Salerno
* /
package unisa.gps.etour.gui.operatoreagenzia.tables.test;

import java.util.ArrayList;
import java.util.Date;

import unisa.gps.etour.bean.BeanNews;
import unisa.gps.etour.gui.operatoreagenzia.tables.NewsTableModel;
import junit.framework.TestCase;

public class TestCase extends NewsTableModelTest
(

private NewsTableModel TableModel;
Private BeanNews aNews;
Private BeanNews aNewsModificata;

public NewsTableModelTest (String pName)
(
super (pName);
aNews = new BeanNews ( &quot;An example of news&quot;, new Date (), new Date (), 2,1);
aNewsModificata = new BeanNews ( &quot;A news amended sample&quot;, new Date (), new Date (), 3,1);
)

protected void setUp () throws Exception
(
super.setUp ();
NewsTableModel = new TableModel ();
)

/ *
* Verify the behavior of the manufacturer with an ArrayList of BeanNews.
* /
public void testCostruttoreConArrayList ()
(
&lt;BeanNews&gt; ArrayList test = new ArrayList &lt;BeanNews&gt; ();
for (int i = 0; i &lt;10; i + +)
(
test.add (new BeanNews ( &quot;text&quot; + i, new Date (), new Date (), 5, i));
)
NewsTableModel = new TableModel (test);
for (int i = 0; i &lt;10; i + +)
(
assertSame (test.get (i). getId (), tableModel.getID (i));
)

)

/ *
* Verify the manufacturer with an ArrayList Compor zero.
* /
public void testCostruttoreConArrayListNull ()
(
NewsTableModel = new TableModel (null);
)

/ *
* Verify the behavior of the manufacturer with an empty ArrayList.
* /
public void testCostruttoreConArrayListVuoto ()
(
NewsTableModel = new TableModel (&lt;BeanNews&gt; new ArrayList ());
)

/ *
* Verify the behavior of the method with the correct parameters.
* /
public void testGetValueAtParametriCorretti ()
(
/ / Put bean in two model test.
tableModel.insertNews (aNews);
tableModel.insertNews (aNewsModificata);

/ / Verify the data entered.
assertSame (aNews.getNews (), tableModel.getValueAt (0, 0));
assertSame (aNews.getPriorita (), tableModel.getValueAt (0, 1));
assertSame (aNewsModificata.getNews (), tableModel.getValueAt (1, 0));
assertSame (aNewsModificata.getPriorita (), tableModel.getValueAt (1, 1));
)

/ *
* Verify Compor the method with an index row fold.
* /
public void testGetValueAtRigaSballata ()
(
TRY
(
tableModel.getValueAt (12, 0);
fail ( &quot;Should be thrown&quot;);
)
catch (IllegalArgumentException success)
(
)
)

/ *
* Verify Compor of the method with a column index busted.
* /
public void testGetValueAtColonnaSballata ()
(
TRY
(
tableModel.getValueAt (0, -121334);
fail ( &quot;Should be thrown&quot;);
)
catch (IllegalArgumentException success)
(
)
)

/ *
* Verify Compor method with proper parameter.
* /
public void testInsertNewsParametroCorretto ()
(
tableModel.insertNews (aNews);
assertSame (aNews.getId (), tableModel.getID (0));
)

/ *
* Verify Compor method with parameter to null
* /
public void testInsertNewsParametroNull ()
(
TRY
(
tableModel.insertNews (null);
fail ( &quot;Should be thrown&quot;);
)
catch (IllegalArgumentException success)
(
)
)

/ *
* Verify Compor method with proper parameter.
* /
public void testUpdateNewsParametroCorretto ()
(
tableModel.insertNews (aNews);
tableModel.updateNews (aNewsModificata);
assertSame (aNewsModificata.getNews (), tableModel.getValueAt (0, 0));
assertSame (aNewsModificata.getPriorita (), tableModel.getValueAt (0, 1));
assertSame (aNewsModificata.getId (), tableModel.getID (0));
)

/ *
* Verify Compor method with parameter to null
* /
public void testUpdateNewsParametroNull ()
(

TRY
(
tableModel.updateNews (null);
fail ( &quot;Should be thrown&quot;);
)
catch (IllegalArgumentException success)
(
)
)

/ *
* Verify Compor method with proper parameter.
* /
public void testRemoveNewsParametroCorretto ()
(
tableModel.insertNews (aNews);
assertSame (aNews.getId (), tableModel.removeNews (0));
)

/ *
* Verify Compor of the method with row index busted.
* /
public void testRemoveNewsRigaSballata ()
(
TRY
(
tableModel.removeNews (-1231);
fail ( &quot;Should be thrown&quot;);
)
catch (IllegalArgumentException success) ()
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_OperatoreAgenzia</id>
      <content>package beans;

import java.sql.Date;

public class OperatoreAgenzia
(
private String Name, Last Name, CittàResidenza, Phone, Zip, Address, Email, Password, username;
private Date DoB;

public OperatoreAgenzia () ()
public OperatoreAgenzia (String name, String name, String city, String phone, String ch, String address, String email, String pass, String user, Date date)
(
this.Nome = name;
this.Cognome = surname;
this.CittàResidenza = city;
this.Telefono = phone;
this.Cap = cap;
this.Indirizzo = address;
this.Email = email;
this.password = pass;
this.Username = user;
this.DataNascita = data;
)

public void setNome (String par1)
(
this.Nome = par1;
)
public String getName ()
(
return Name;
)

public void setCognome (String par1)
(
this.Cognome = par1;
)
public String getCognome ()
(
return Name;
)

public void setCittàResidenza (String par1)
(
this.CittàResidenza = par1;
)
public String getCittàResidenza ()
(
CittàResidenza return;
)

public void setTelefono (String par1)
(
this.Telefono = par1;
)
public String getTelefono ()
(
return phone;
)

public void setCap (String par1)
(
this.Cap = par1;
)
public String getCap ()
(
return postcode;
)

public void setIndirizzo (String par1)
(
this.Indirizzo = par1;
)
public String getIndirizzo ()
(
return Address;
)

public void setEmail (String par1)
(
this.Email = par1;
)
public String getEmail ()
(
return Email;
)

public void setPassword (String par1)
(
this.password = par1;
)
public String getPassword ()
(
return password;
)

public void setUsername (String par1)
(
this.Username = par1;
)
public String GetUserName ()
(
return username;
)

public void setDataNascita (Date par1)
(
this.DataNascita = par1;
)
public Date getDataNascita ()
(
DoB return;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_PRNode</id>
      <content>ï&gt;¿package unisa.gps.etour.gui.operatoreagenzia.tables;

import javax.swing.tree.DefaultMutableTreeNode;

/ **
* &lt;b&gt; PRNode &lt;/ b&gt;
&lt;p&gt; * This class creates a node in a JTree to store
* Information for a refreshment. &lt;/ P&gt;
*
* @ See javax.swing.JTree;
* @ See javax.swing.tree.DefaultMutableTreeNode;
* @ Version 1.0
* @ Author Mario Gallo
*
* /
public class DefaultMutableTreeNode extends PRNode
(
private int id;

public PRNode ()
(
super ();
)

/ **
* Create a node with the name of refreshment and
* Your id supplied as parameters.
*
PNomePR * @ param String - the name of refreshment.
PID * @ param int - the id of refreshment.
* @ Throws IllegalArgumentException - if the name provided as input is invalid.
* /
public PRNode (Phnom String, int pid) throws IllegalArgumentException
(
super ();
if (Phnom == null | | pNome.equals (&quot;&quot;))
(
throw new IllegalArgumentException (
&quot;Name of refreshment supplied invalid input.&quot;);
)
setUserObject (Phnom);
id = pid;
)

/ **
*
* Returns the id of the point of comfort for which information
* Are stored in this node.
*
* @ Return int - the id of refreshment.
* /
public int getID ()
(
return id;
)

/ **
*
* Stores the id of the refreshment provided input.
*
* @ Param int PID - an ID of an eating place.
* /
public void setID (int pid)
(
id = pid;
)

/ **
*
* Return the name of refreshment.
*
* @ Return String - the name of refreshment.
* /
public String getName ()
(
return (String) super.getUserObject ();
)

/ **
*
* Stores the name of the refreshment provided input.
*
Pnom * @ param String - the name of a refreshment.
* @ Throws IllegalArgumentException - if the name provided as input is invalid.
* /
public void setNome (String Pnom) throws IllegalArgumentException
(
if (Phnom == null | | pNome.equals (&quot;&quot;))
(
throw new IllegalArgumentException (
&quot;Name of refreshment supplied invalid input.&quot;);
)
setUserObject (Phnom);
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_PrioritaRenderer</id>
      <content>ï&gt;¿/ *
* PrioritaRenderer.java
*
* 1.0
*
* 22/05/2007
*
* 2007 eTour Project - Copyright by SE @ SA Lab - DMI University of Salerno
* /
package unisa.gps.etour.gui.operatoreagenzia.tables;

import java.awt.Component;
import javax.swing.JSlider;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;

/ **
* &lt;b&gt; PrioritRenderer &lt;/ b&gt;
&lt;p&gt; * This class creates a custom renderer JSlider as
* Of the priorities in the table of news. &lt;/ P&gt;
*
* @ Version 1.0
* @ See javax.swing.JSlider
* @ See javax.swing.table.TableCellRenderer
* @ Author Mario Gallo
*
* /
public class extends PrioritaRenderer JSlider implements TableCellRenderer
(
/ **
* This default constructor.
*
* /
public PrioritaRenderer ()
(
setOpaque (true);
setOrientation (Horizontal);
setMinimum (1);
setMaximum (5);
setLabelTable (createStandardLabels (1));
setMajorTickSpacing (1);
setPaintTicks (true);
)

/ **
* This method returns the display component of the cell identified
* From the row and column provided input.
*
* @ Param pTable JTable - the table.
* @ Param pValue Object - the object contained in the selected cell.
* @ Param pIsSelected boolean - true if the object selected.
* False otherwise.
* @ Param pHasFocus boolean - true if the object has the focus.
* False otherwise.
* @ Param pRow int - the row index.
* @ Param pColumn int - the index of the column.
* @ Return Component - the component to display
* /
public Component getTableCellRendererComponent (pTable JTable, Object pValue,
pIsSelected boolean, boolean pHasFocus, pRow int, int pColumn) throws IllegalArgumentException
(
if ((pValue instanceof Integer))
(
throw new IllegalArgumentException ( &quot;unexpected value cell&quot;);
)
int value = (Integer) pValue;
if (value &lt;1 | | value&gt; 5)
(
throw new IllegalArgumentException ( &quot;Illegal value cell.&quot;);
)
if (pIsSelected)
(
setBackground (pTable.getSelectionBackground ());
)
else
(
setBackground (pTable.getBackground ());
)
setValue (value);
return this;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_PuntiDiRistoro</id>
      <content>package unisa.gps.etour.gui.operatoreagenzia;

import java.awt.BorderLayout;

import javax.swing.JDesktopPane;
import javax.swing.JPanel;
import javax.swing.JInternalFrame;
import java.awt.Dimension;
import javax.swing.ImageIcon;
import java.awt.GridBagLayout;
import javax.swing.JToolBar;
import javax.swing.JLabel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JCheckBox;
import javax.swing.BorderFactory;
import java.awt.Color;
import javax.swing.border.BevelBorder;
import javax.swing.JButton;
import java.awt.GridBagConstraints;
import java.awt.Point;
import javax.swing.JScrollPane;
import javax.swing.border.TitledBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;

import java.awt.font;
import javax.swing.JTextPane;
import javax.swing.JTextField;
import java.awt.Insets;
import java.util.Date;

import javax.swing.SwingConstants;

import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.bean.util.Punto3D;

import javax.swing.JTable;
import java.awt.Rectangle;

extends JInternalFrame (public class PuntiDiRistoro

private Dimension SIZE;
private JPanel jContentPane = null;
private JPanel RightPanel = null;
Private JToolBar toolbarPR = null;
private JLabel status = null;
private JPanel CentrePanel = null;
private JButton btnSkeda = null;
private JButton btnModifica = null;
private JButton btnElimina = null;
private JScrollPane JScrollPane = null;
private JPanel HelpPanel = null;
private JTextPane jTextPane = null;
private JScrollPane PannelloTag = null;
private JButton btnRicerca2 = null;
private JButton btnAzzera2 = null;
private JPanel RicercaPanel = null;
private JLabel LabelPr = null;
private JTextField nomePR = null;
private JLabel LabelTag = null;
private JTable TablePr = null;
Private JDesktopPane JDesktopPane;
Private PuntiDiRistoro internalFrame;
private JButton btnAttiva = null;
private JButton btnStorico = null;
/ **
* This is the default constructor xxx
* /
public PuntiDiRistoro () (
super ();
initialize ();
)

/ **
* This method initializes this
*
* @ Return void
* /
private void initialize () (
SIZE = new Dimension (700.480);
setPreferredSize (SIZE);
this.setSize (new Dimension (700, 480));
this.setResizable (true);
this.setClosable (true);
this.setTitle ( &quot;Refreshments&quot;);
this.setFrameIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia / images / PR.png &quot;)));
this.setIconifiable (true);
this.setMaximizable (true);
this.setContentPane (getJContentPane ());
)

/ **
* This method initializes jContentPane
*
* @ Return javax.swing.JPanel
* /
getJContentPane private JPanel () (
if (jContentPane == null) (
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());
jContentPane.add (getRightPanel (), BorderLayout.EAST);
jContentPane.add (getToolbarPR (), BorderLayout.NORTH);
jContentPane.add (getCentrePanel (), BorderLayout.CENTER);
)
jContentPane return;
)

/ **
* This method initializes RightPanel
*
* @ Return javax.swing.JPanel
* /
getRightPanel private JPanel () (
if (RightPanel == null) (
RightPanel = new JPanel ();
RightPanel.setLayout (new BorderLayout ());
RightPanel.add (getHelpPanel (), BorderLayout.CENTER);
RightPanel.add (getRicercaPanel (), BorderLayout.CENTER);
)
RightPanel return;
)

/ **
* This method initializes jJToolBarBar
*
* @ Return javax.swing.JToolBar
* /
Private JToolBar getToolbarPR () (
if (toolbarPR == null) (
toolbarPR JToolBar = new ();
toolbarPR.setLayout (null);
toolbarPR.setPreferredSize (new Dimension (1, 49));
toolbarPR.setFloatable (false);
toolbarPR.add (getBtnAttiva ());
toolbarPR.addSeparator ();
toolbarPR.add (getBtnStorico ());
toolbarPR.addSeparator ();
toolbarPR.add (getBtnModifica ());
toolbarPR.addSeparator ();
toolbarPR.add (getBtnSkeda ());
toolbarPR.addSeparator ();
toolbarPR.add (getBtnElimina ());
)
toolbarPR return;
)

/ **
* This method initializes CentrePanel
*
* @ Return javax.swing.JPanel
* /
getCentrePanel private JPanel () (
if (CentrePanel == null) (
GridBagConstraints = GridBagConstraints new GridBagConstraints ();
gridBagConstraints.fill = GridBagConstraints.BOTH;
gridBagConstraints.weighty = 1.0;
gridBagConstraints.weightx = 1.0;
CentrePanel = new JPanel ();
CentrePanel.setLayout (new GridBagLayout ());
CentrePanel.setPreferredSize (new Dimension (1, 30));
CentrePanel.add (getJScrollPane (), GridBagConstraints);

)
CentrePanel return;
)

/ **
* This method initializes btnSkeda
*
* @ Return javax.swing.JButton
* /
private JButton getBtnSkeda () (
if (btnSkeda == null) (
btnSkeda = new JButton ();
btnSkeda.setText ( &quot;Point Card &lt;html&gt; &lt;br&gt; Refreshments &lt;/ html&gt;&quot;);
btnSkeda.setLocation (new Point (16, 3));
btnSkeda.setSize (new Dimension (130, 42));
btnSkeda.setPreferredSize (new Dimension (130, 42));
btnSkeda.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia / images / Browse 1.png &quot;)));
btnSkeda.addActionListener (new ActionListener () (
public void actionPerformed (ActionEvent arg0) (

)

));
)
btnSkeda return;
)

/ **
* This method initializes btnModifica
*
* @ Return javax.swing.JButton
* /
private JButton getBtnModifica () (
if (btnModifica == null) (
btnModifica = new JButton ();
btnModifica.setText ( &quot;&lt;html&gt; Edit Point &lt;br&gt; Refreshments &lt;/ html&gt;&quot;);
btnModifica.setPreferredSize (new Dimension (130, 42));
btnModifica.setMnemonic (KeyEvent.VK_UNDEFINED);
btnModifica.setEnabled (false);
btnModifica.setBounds (new Rectangle (413, 3, 140, 42));
btnModifica.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia/immagini/edit-32x32.png &quot;)));
)
btnModifica return;
)

/ **
* This method initializes btnElimina
*
* @ Return javax.swing.JButton
* /
private JButton getBtnElimina () (
if (btnElimina == null) (
btnElimina = new JButton ();
btnElimina.setText ( &quot;Delete item &lt;html&gt; &lt;br&gt; Refreshments &lt;/ html&gt;&quot;);
btnElimina.setPreferredSize (new Dimension (130, 42));
btnElimina.setEnabled (false);
btnElimina.setMnemonic (KeyEvent.VK_UNDEFINED);
btnElimina.setBounds (new Rectangle (555, 3, 130, 42));
btnElimina.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia/immagini/edit-delete-32x32.png &quot;)));
)
btnElimina return;
)

/ **
* This method initializes JScrollPane
*
* @ Return javax.swing.JScrollPane
* /
private JScrollPane getJScrollPane () (
if (JScrollPane == null) (
if (TablePr == null) (
/ *
* @ Param pId
* @ Param pNumeroVoti
* @ Param Pnom
* @ Param pCitta
* @ Param pTelefono
* @ Param pDescrizione
* @ Param pLocalita
* @ Param pVia
* @ Param pcap
* @ Param pProvincia
* @ Param pPosizione
* @ Param pOrarioApertura
* @ Param pOrarioChiusura
* @ Param pGiornoChiusura
* @ Param pCostoBiglietto
* @ Param pMediaVoti
* /

BeanPuntoDiRistoro [] test = new BeanPuntoDiRistoro [30];
for (int i = 0; i &lt;30; i + +) (
test [i] = new BeanPuntoDiRistoro (1, 12, 3.5,
&quot;Arturo&quot;, &quot;Near the sea, great view, romantic and Miao,
&quot;089203202&quot;, &quot;the mountains&quot;, &quot;Amalfi&quot;, &quot;Via Principe 35&quot;, &quot;84123rd&quot;
&quot;Salerno&quot;, &quot;1234567898741&quot;, new Punto3D (34,34,34),
new Date (2,23,3), new Date (3,3,4), &quot;Monday&quot;);
)

SitoTableModel new SitoTableModel = new (test);

TablePr = new ScrollableTable (new);
/ / Name
TablePr.getColumnModel (). GetColumn (0). SetPreferredWidth (140);
/ / Description
TablePr.getColumnModel (). GetColumn (1). SetPreferredWidth (80);
/ / Location
TablePr.getColumnModel (). GetColumn (2). SetPreferredWidth (140);
/ / City
TablePr.getColumnModel (). GetColumn (3). SetPreferredWidth (80);
/ / State
TablePr.getColumnModel (). GetColumn (4). SetPreferredWidth (70);
/ / Number of Votes
TablePr.getColumnModel (). GetColumn (5). SetPreferredWidth (70);
/ / Average Ratings
TablePr.getColumnModel (). GetColumn (6). SetPreferredWidth (60);
/ / PosGeo
TablePr.getColumnModel (). GetColumn (7). SetPreferredWidth (30);
TablePr.setDefaultRenderer (String.class, new DefaultTableCellRenderer ());
TablePr.setRowHeight (32);
TablePr.setShowVerticalLines (false);
TablePr.setDefaultRenderer (Double.class, new MediaVotiRenderer ());
TablePr.setSelectionMode (javax.swing.ListSelectionModel.SINGLE_SELECTION);
TablePr.setSelectionForeground (Color.RED);
TablePr.setSelectionBackground (Color.white);
TablePr.setColumnSelectionAllowed (false);
final javax.swing.ListSelectionModel this TablePr.getSelectionModel = ();
questo.addListSelectionListener (new ListSelectionListener () (

public void ValueChanged (ListSelectionEvent event) (
btnElimina.setEnabled (true);
btnModifica.setEnabled (true);
btnAttiva.setEnabled (true);
btnStorico.setEnabled (true);
)

));

TablePr.addKeyListener (new KeyListener () (

public void keyPressed (KeyEvent arg0) (
System.out.println ( &quot;keyPressed&quot;);

)

public void keyReleased (KeyEvent arg0) (
System.out.println ( &quot;keyRelased&quot;);

)

public void keyTyped (KeyEvent arg0) (
System.out.println ( &quot;keyTyped&quot;);

)

));

/ / private static final String [] headers = ( &quot;Name&quot;, &quot;Phone&quot;, &quot;Gone&quot;, &quot;Location&quot;, &quot;City&quot;, &quot;CPC&quot;, &quot;Province&quot;, &quot;Media Votes&quot;, &quot;Number Votes&quot;);

)

JScrollPane = new JScrollPane (TablePr);
jScrollPane.setHorizontalScrollBarPolicy (JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
jScrollPane.setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

)
JScrollPane return;
)

/ **
* This method initializes HelpPanel
*
* @ Return javax.swing.JPanel
* /
getHelpPanel private JPanel () (
if (HelpPanel == null) (
GridBagConstraints gridBagConstraints1 = new GridBagConstraints ();
gridBagConstraints1.fill = GridBagConstraints.BOTH;
gridBagConstraints1.gridy = 0;
gridBagConstraints1.weightx = 1.0;
gridBagConstraints1.weighty = 1.0;
gridBagConstraints1.ipadx = 0;
gridBagConstraints1.gridwidth = 1;
gridBagConstraints1.ipady = 0;
gridBagConstraints1.gridx = 0;
HelpPanel = new JPanel ();
HelpPanel.setLayout (new GridBagLayout ());
HelpPanel.setBorder (BorderFactory.createTitledBorder (BorderFactory.createLineBorder (new Color (51, 153, 255), 3), &quot;Help&quot;, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;, Font.BOLD, 12), new Color (51, 102, 255)));
HelpPanel.setPreferredSize (new Dimension (100, 100));
HelpPanel.add (getJTextPane (), gridBagConstraints1);
)
HelpPanel return;
)

/ **
* This method initializes jTextPane
*
* @ Return javax.swing.JTextPane
* /
private JTextPane getJTextPane () (
if (jTextPane == null) (
jTextPane = new JTextPane ();
jTextPane.setPreferredSize (new Dimension (6, 30));
)
jTextPane return;
)

/ **
* This method initializes ricercaPanel1
*
* @ Return javax.swing.JPanel
* /

/ **
* This method initializes btnRicerca2
*
* @ Return javax.swing.JButton
* /
private JButton getBtnRicerca2 () (
if (btnRicerca2 == null) (
btnRicerca2 = new JButton ();
btnRicerca2.setPreferredSize (new Dimension (98, 26));
btnRicerca2.setText ( &quot;Search&quot;);
btnRicerca2.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ unisa/gps/etour/gui/operatoreagenzia/images/Ricerca16.png &quot;)));
)
btnRicerca2 return;
)

/ **
* This method initializes btnAzzera2
*
* @ Return javax.swing.JButton
* /
private JButton getBtnAzzera2 () (
if (btnAzzera2 == null) (
btnAzzera2 = new JButton ();
btnAzzera2.setPreferredSize (new Dimension (98, 26));
btnAzzera2.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ unisa/gps/etour/gui/operatoreagenzia/images/Azzera16.png &quot;)));
btnAzzera2.setText ( &quot;Clear&quot;);
btnAzzera2.setHorizontalTextPosition (SwingConstants.LEADING);
)
btnAzzera2 return;
)

/ **
* This method initializes RicercaPanel
*
* @ Return javax.swing.JPanel
* /
getRicercaPanel private JPanel () (
if (RicercaPanel == null) (
GridBagConstraints gridBagConstraints5 = new GridBagConstraints ();
gridBagConstraints5.fill = GridBagConstraints.BOTH;
gridBagConstraints5.gridy = 4;
gridBagConstraints5.weightx = 1.0;
gridBagConstraints5.weighty = 1.0;
gridBagConstraints5.gridwidth = 2;
gridBagConstraints5.gridx = 0;
GridBagConstraints gridBagConstraints8 = new GridBagConstraints ();
gridBagConstraints8.gridwidth = 2;
gridBagConstraints8.insets = new Insets (5, 5, 5, 5);
GridBagConstraints gridBagConstraints7 = new GridBagConstraints ();
gridBagConstraints7.gridx = 0;
gridBagConstraints7.insets = new Insets (5, 5, 5, 5);
gridBagConstraints7.gridy = 6;
GridBagConstraints gridBagConstraints6 = new GridBagConstraints ();
gridBagConstraints6.gridx = 1;
gridBagConstraints6.gridwidth = 2;
gridBagConstraints6.insets = new Insets (5, 5, 5, 5);
gridBagConstraints6.gridy = 6;
GridBagConstraints gridBagConstraints4 = new GridBagConstraints ();
gridBagConstraints4.gridx = 0;
gridBagConstraints4.gridwidth = 2;
gridBagConstraints4.insets = new Insets (5, 5, 5, 5);
gridBagConstraints4.gridy = 3;
LabelTag = new JLabel ();
LabelTag.setText ( &quot;Select search tags:&quot;);
GridBagConstraints gridBagConstraints3 = new GridBagConstraints ();
gridBagConstraints3.fill = GridBagConstraints.VERTICAL;
gridBagConstraints3.gridx = 0;
gridBagConstraints3.gridy = 2;
gridBagConstraints3.gridwidth = 2;
gridBagConstraints3.insets = new Insets (5, 5, 5, 5);
gridBagConstraints3.weightx = 1.0;
LabelPr = new JLabel ();
LabelPr.setText ( &quot;Name Refreshments:&quot;);
RicercaPanel = new JPanel ();
RicercaPanel.setLayout (new GridBagLayout ());
RicercaPanel.setBorder (BorderFactory.createTitledBorder (BorderFactory.createLineBorder (new Color (51, 153, 255), 3), &quot;Searching for refreshments:&quot; TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;, Font. BOLD, 12), new Color (51, 102, 255)));
RicercaPanel.add (LabelPr, gridBagConstraints8);
RicercaPanel.add (getNomePR (), gridBagConstraints3);
RicercaPanel.add (LabelTag, gridBagConstraints4);
BeanTag [] test = new BeanTag [8];
test [0] = new BeanTag (0, &quot;castle&quot;, &quot;really a castle&quot;);
test [1] = new BeanTag (1, &quot;stronghold&quot;, &quot;really a hostel&quot;);
test [2] = new BeanTag (3, &quot;Pub&quot;, &quot;really a basket&quot;);
test [3] = new BeanTag (4, &quot;Restaurant&quot;, &quot;really a basket&quot;);
test [4] = new BeanTag (5, &quot;Pizza&quot;, &quot;really a basket&quot;);
test [5] = new BeanTag (6, &quot;Trattoria&quot;, &quot;really a basket&quot;);
test [6] = new BeanTag (7, &quot;range&quot;, &quot;really a basket&quot;);
test [7] = new BeanTag (8, &quot;Romantic&quot;, &quot;really a basket&quot;);
PannelloTag = new TagPanel (test);
PannelloTag.setPreferredSize (new Dimension (180.40));
RicercaPanel.add (getBtnAzzera2 (), gridBagConstraints6);
RicercaPanel.add (getBtnRicerca2 (), gridBagConstraints7);
RicercaPanel.add (PannelloTag, gridBagConstraints5);
)
RicercaPanel return;
)

/ **
* This method initializes nomePR
*
* @ Return javax.swing.JTextField
* /
private JTextField getNomePR () (
if (nomePR == null) (
nomePR = new JTextField ();
nomePR.setColumns (12);
)
nomePR return;
)

/ **
* This method initializes btnAttiva
*
* @ Return javax.swing.JButton
* /
private JButton getBtnAttiva () (
if (btnAttiva == null) (
btnAttiva = new JButton ();
btnAttiva.setText ( &quot;Enable &lt;html&gt; &lt;br&gt; Convention &lt;/ html&gt;&quot;);
btnAttiva.setPreferredSize (new Dimension (130, 42));
btnAttiva.setSize (new Dimension (130, 42));
btnAttiva.setLocation (new Point (280, 3));
btnAttiva.setMnemonic (KeyEvent.VK_UNDEFINED);
btnAttiva.setEnabled (false);
btnAttiva.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia/immagini/wi0054-32x32.png &quot;)));
)
btnAttiva return;
)

/ **
* This method initializes btnStorico
*
* @ Return javax.swing.JButton
* /
private JButton getBtnStorico () (
if (btnStorico == null) (
btnStorico = new JButton ();
btnStorico.setText ( &quot;Historical &lt;html&gt; &lt;br&gt; Conventions &lt;/ html&gt;&quot;);
btnStorico.setPreferredSize (new Dimension (130, 42));
btnStorico.setBounds (new Rectangle (148, 3, 130, 42));
btnStorico.setEnabled (false);
btnStorico.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia / images / Browse 1.png &quot;)));
btnStorico.addActionListener (new java.awt.event.ActionListener ()
(
public void actionPerformed (java.awt.event.ActionEvent e)
(
New StoricoConvenzioni ();
)
));
)
btnStorico return;
)

) / / @ JVE: decl-index = 0: visual-constraint = &quot;10.10&quot;</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_Punto3D</id>
      <content>ï&gt;¿package unisa.gps.etour.util;

/ **
* Bean that contains the coordinates of a point on the surface of the earth &quot;and
* That it realizes the calculation of the distance from the system. The values of
* Coordinates must be represented in radians and must fall in
* Target range: 0 to greek-Pi / 4 for the latitude south of the equator
* 0 to + Pi greek / 4 for the latitude north of the equator from 0 to Pi-greek /
* 2 for the meridian of longitude west of Greenwitch greek from 0 to + Pi / 2
* For the meridian of longitude east of Greenwitch
*
* @ Author Mauro Miranda
* @ Version 0.1 2007 eTour Project - Copyright by SE @ SA Lab DMI University
* Of Salerno
* /

public class Punto3D
(
/ / Radius of the earth
final double EARTH_RADIUS = 6371.0;
private double latitude, longitude, altitude;

public Punto3D ()
(
latitude = longitude = height = 0;
)

public Punto3D (double pLatitudine, double pLongitudine, double pAltitudine)
(
N = pLatitudine;
longitude = pLongitudine;
altitude = pAltitudine;
)

/ **
* Returns the latitude
*
* @ Return
* /
public double getLatitudine ()
(
return latitude;
)

/ **
* Sets the latitude
*
* @ Param pLatitudine
* /
public void setLatitudine (double pLatitudine)
(
this.latitudine = pLatitudine;
)

/ **
* Returns the longitude
*
* @ Return
* /
public double getLongitudine ()
(
return longitude;
)

/ **
* Sets the longitude
*
* @ Param pLongitudine
* /
public void setLongitudine (double pLongitudine)
(
this.longitudine = pLongitudine;
)

/ **
* Returns the altitude
*
* @ Return
* /
public double getAltitudine ()
(
return altitude;
)

/ **
* Sets the altitude
*
* @ Param pAltitudine
* /
public void setAltitudine (double pAltitudine)
(
this.altitudine = pAltitudine;
)

/ **
* Calculate the distance between the point and another point given as argument
*
* @ Param p
* @ Return
* /
public double distance (Punto3D p)
(
double differenzaLongitudine = this.longitudine - p.longitudine;
double p1 = Math.pow (Math.cos (p.latitudine)
* Math.sin (differenzaLongitudine), 2);
double p2 = Math.pow (Math.cos (latitude) * Math.sin (p.latitudine)
- Math.sin (latitude) * Math.cos (p.latitudine)
* Math.cos (differenzaLongitudine), 2);
double p3 = Math.sin (latitude) * Math.sin (p.latitudine)
+ Math.cos (latitude) * Math.cos (p.latitudine)
* Math.cos (differenzaLongitudine);
return (Math.atan (Math.sqrt (p1 + p2) / p3) * EARTH_RADIUS);
)

/ **
* Method which creates a 3D point from coordinates measured in degrees. The
* 3D point instead represents the coordinates in radians
*
* @ Param pLatitudine latitude in degrees
* @ Param pLongitudine Longitude in degrees *
* @ Param pAltitudine
* @ Return Punto3D with the coordinates in radians
* /
public static Punto3D gradiRadianti (double pLatitudine,
pLongitudine double, double pAltitudine)
(
Punto3D point = new Punto3D ();
punto.setLatitudine (pLatitudine * Math.PI / 180);
punto.setLongitudine (pLongitudine * Math.PI / 180);
punto.setAltitudine (pAltitudine);
return point;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_Punto3DRenderer</id>
      <content>ï&gt;¿package unisa.gps.etour.gui.operatoreagenzia.tables;

import java.awt.Component;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.TableCellRenderer;
import unisa.gps.etour.util.Punto3D;

/ **
* &lt;b&gt; Punto3DRenderer &lt;/ b&gt;
&lt;p&gt; * This class creates a custom renderer for
* Objects of type Punto3D. &lt;/ P&gt;
*
* @ See javax.swing.table.TableCellRenderer
* @ See unisa.gps.etour.util.Punto3D
* @ Version 1.0
* @ Author Mario Gallo
*
*
* /
public class Punto3DRenderer implements TableCellRenderer
(
/ **
* Method that returns the custom component for the
* Display of the data contained in the cell of a table.
*
* @ Param pTable JTable - the table.
* @ Param Object pValue - the data.
* @ Param boolean pSelected --
* &lt;ul&gt;
* &lt;li&gt; &lt;i&gt; True &lt;/ i&gt; if the cell is selected.
* &lt;li&gt; &lt;i&gt; False &lt;/ i&gt; otherwise.
* &lt;/ Ul&gt;
* @ Param boolean pHasFocus --
* &lt;ul&gt;
* &lt;li&gt; &lt;i&gt; True &lt;/ i&gt; if the cell has the focus.
* &lt;li&gt; &lt;i&gt; False &lt;/ i&gt; otherwise.
* &lt;/ Ul&gt;
* @ Param int pRow - the line number.
* @ Param int pColumn - the column number.
* @ Return Component - the component that customizes render the cell.
* @ Throws IllegalArgumentException - if the value of the cell can not
* Be rendered by this renderer.
* /
public Component getTableCellRendererComponent (JTable pTable,
Object pValue, boolean pSelected, boolean pHasFocus, int prow,
int pColumn)
(
if ((pValue instanceof Punto3D))
(
throw new IllegalArgumentException ( &quot;Value Cella unexpected.&quot;);
)
Pointe Punto3D = (Punto3D) pValue;
APoint.getLatitudine String point = () + &quot;;&quot;
APoint.getLongitudine + () + &quot;&quot; + aPoint.getAltitudine ();
JLabel aLabel = new JLabel (point, SwingConstants.CENTER);
if (pSelected)
(
aLabel.setForeground (pTable.getSelectionForeground ());
aLabel.setBackground (pTable.getSelectionBackground ());
)
aLabel return;

)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_ReportTableModel</id>
      <content>/ * ReportTableModel.java
*
* 1.0
*
* 21/05/2007
*
* (c) 2007 eTour Project - Copyright by SE @ SA Lab - DMI - University of Salerno
* /
package unisa.gps.etour.gui.operatoreagenzia;

import java.util.Vector;
import javax.swing.table.AbstractTableModel;

import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.util.Punto3D;

public class extends ReportTableModel AbstractTableModel (

/ **
*
* /
private static final long serialVersionUID = 1L;
private static final String [] headers =
( &quot;Name&quot;, &quot;Description&quot;, &quot;Address&quot;, &quot;City&quot;, &quot;Province&quot;);
private static final Class [] = columnClasses
(String.class, String.class, String.class, String.class, String.class);
&lt;Object[]&gt; private Vector data;

public ReportTableModel (BeanBeneCulturale [] bc, BeanPuntoDiRistoro [] pr)
(
&lt;Object[]&gt; data = new Vector ();
for (int i = 0; i &lt;pr.length i + +)
(
Object [] new = new Object [5];
new [0] = pr [i]. getName ();
new [1] = pr [i]. getDescrizione ();
new [2] = pr [i]. getVar ();
new [3] = pr [i]. getCitta ();
new [4] = pr [i]. getProvincia ();

setValueAt (new, i);
)
for (int i = 0; i &lt;bc.length i + +)
(
Object [] new = new Object [5];
new [0] = bc [i]. getName ();
new [1] = bc [i]. getDescrizione ();
new [2] = bc [i]. getVar ();
new [3] = bc [i]. getCitta ();
new [4] = bc [i]. getProvincia ();
setValueAt (new, pr.length + i);
)
)

public int getColumnCount () (
headers.length return;
)

public int GetRowCount () (
data.size return ();
)
public String getColumnName (int col) (
return headers [col];
)

public Object getValueAt (int row, int col) (
data.get return (row) [col];
)
public class getColumnClass (int col) (
return columnClasses [col];
)

public boolean isCellEditable (int row, int col) (
return false;
)
public void setValueAt (Object value, int row, int col) (
if (row&gt; = GetRowCount ()) (
Object [] new = new Object [headers.length];
New [col] = value;
data.add (new);
)
else (
data.get (row) [col] = value;
)
)
public void setValueAt (Object [] value, int row) throws IllegalArgumentException (
if (value.length! = headers.length) (
System.out.println (value.length);
System.out.println (headers.length);
throw new IllegalArgumentException ();)
if (row&gt; = GetRowCount ()) (
data.add (value);
)
else (
data.remove (row);
data.add (row, value);
)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_Ricerca</id>
      <content>ï&gt;¿package unisa.gps.etour.control.GestioneRicerche;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Hashtable;

import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.repository.DBBeneCulturale;
import unisa.gps.etour.repository.DBPuntoDiRistoro;
import unisa.gps.etour.repository.DBTag;
import unisa.gps.etour.repository.IDBBeneCulturale;
import unisa.gps.etour.repository.IDBPuntoDiRistoro;
import unisa.gps.etour.repository.IDBTag;
import unisa.gps.etour.util.ControlloDati;
import unisa.gps.etour.util.MessaggiErrore;
import unisa.gps.etour.util.Punto3D;

public class Search extends UnicastRemoteObject implements IRicerca
(

private static final long serialVersionUID =-6009809097302884655L;

public Search () throws RemoteException
(
super ();
)

/ / Search Parameters
private int pIdTurista = -1;
private String pParoleChiave;
private double pRaggioMax;
Private Punto3D pPosizioneUtente;
private int pElementiPerPagina = -1;
private byte pTipologiaSito = -1;

/ / Objects for the database connection
Private IDBBeneCulturale BeneCulturale = new DBBeneCulturale ();
Private IDBPuntoDiRistoro PuntoDiRistoro = new DBPuntoDiRistoro ();
Private IDBTag Tag DBTag = new ();

/ / List of tags obtained
private ArrayList &lt;BeanTag&gt; pTags;

/ / Search Results pages for partitioned
private Hashtable &lt;Integer, ArrayList &lt;BeanBeneCulturale&gt;&gt; risultatiRicercaBeniCulturali = new Hashtable &lt;Integer, ArrayList &lt;BeanBeneCulturale&gt;&gt; ();
private Hashtable &lt;Integer, ArrayList &lt;BeanPuntoDiRistoro&gt;&gt; risultatiRicercaPuntiDiRistoro = new Hashtable &lt;Integer, ArrayList &lt;BeanPuntoDiRistoro&gt;&gt; ();

/ / Quantity of items and pages results in the research phase
private int numeroPagineRisultati = -1;
private int numeroElementiRicerca = -1;

/ * (Non-Javadoc)
Unisa.gps.etour.control.GestioneRicerche.IRicerca * @ see # search (int, java.lang.String, int [], double, int, unisa.gps.etour.util.Punto3D, byte)
* /
public int search (int pIdTurista, pParoleChiave String, int [] pTagsId,
pRaggioMax double, int pElementiPerPagina,
Punto3D pPosizioneUtente, byte pTipologiaSito)
throws RemoteException
(
/ / Reset the parameters of the previous search
azzeraParametri ();

/ / Start checking the correctness of the search parameters
TRY
(
this.pIdTurista = pIdTurista;
this.pTags = arrayToArrayListTag (pTagsId);
this.pParoleChiave = ControlloDati.correggiStringa (pParoleChiave,
true, true, &quot;&quot;, ControlloDati.LUNGHEZZA_MASSIMA);
this.pRaggioMax = pRaggioMax;
this.pPosizioneUtente = pPosizioneUtente;
this.pTipologiaSito = pTipologiaSito;

/ / If the parameters are valid, I get the number of results
if (pElementiPerPagina&gt; 0
&amp; &amp; ((PTipologiaSito == 0) | | (pTipologiaSito == 1))
PRaggioMax &amp; &amp;&gt; 0
PPosizioneUtente &amp; &amp;! = Null
&amp; &amp; (This.numeroElementiRicerca = ottieniNumeroElementiRicercaSpecializzato ())&gt; = 0)
(
this.pElementiPerPagina = pElementiPerPagina;
this.numeroPagineRisultati = calcolaNumeroPagineRicerca ();

this.numeroElementiRicerca return;
)

/ / Otherwise returns -1
else
return -1;
)
catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.control.GestioneRicerche.IRicerca # ottieniPaginaRisultatiBeneCulturale (int)
* /
public BeanBeneCulturale [] ottieniPaginaRisultatiBeneCulturale (int pPagina)
throws RemoteException
(
/ / Check that the type of site is valid and that the page is
/ / In the range
if ((this.pTipologiaSito == BENE_CULTURALE) &amp; &amp; controllaPagina (pPagina))
(
/ / Transform the list obtained in array
BeanBeneCulturale [] results = new BeanBeneCulturale [calcolaNumeroElementiPagina (pPagina)];
/ / Results = ricercaBeniCulturaliPerPagina (pPagina). ToArray (
/ / Results);

results = ricercaPerPagina (pPagina). toArray (results);

return results;
)
else
return null;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.control.GestioneRicerche.IRicerca # ottieniPaginaRisultatiPuntoDiRistoro (int)
* /
public BeanPuntoDiRistoro [] ottieniPaginaRisultatiPuntoDiRistoro (int pPagina)
throws RemoteException
(
/ / Check that the type of site is valid and that the page is
/ / In the range
if ((this.pTipologiaSito == PUNTO_DI_RISTORO)
&amp; &amp; ControllaPagina (pPagina))
(
/ / Transform the list obtained in array
BeanPuntoDiRistoro [] results = new BeanPuntoDiRistoro [calcolaNumeroElementiPagina (pPagina)];
/ / Results = ricercaPuntiDiRistoroPerPagina (pPagina). ToArray (
/ / Results);

results = ricercaPerPagina (pPagina). toArray (results);

return results;
)
else
return null;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.control.GestioneRicerche.IRicerca # ottieniNumeroElementiRicerca ()
* /
public int ottieniNumeroElementiRicerca () throws RemoteException
(
numeroElementiRicerca return;
)

/ * (Non-Javadoc)
* @ See unisa.gps.etour.control.GestioneRicerche.IRicerca # ottieniNumeroPagineRicerca ()
* /
public int ottieniNumeroPagineRicerca () throws RemoteException
(
numeroPagineRisultati return;
)

/ **
* Method for returning the number of findings from research
*
* @ Return number of findings from research. On error
* Returns -1
* @ Throws SQLException Exception Connecting to Database
* /
private int ottieniNumeroElementiRicercaSpecializzato () throws SQLException
(
/ / Check the type of site and gets the number of results
if (controllaIdTurista ())
(
switch (pTipologiaSito)
(
homes BENE_CULTURALE:
return pIdTurista&gt; 0? BeneCulturale
. ottieniNumeroElementiRicercaAvanzata (
this.pIdTurista, this.pParoleChiave,
this.pTags, this.pPosizioneUtente,
this.pRaggioMax): BeneCulturale
. ottieniNumeroElementiRicerca (this.pParoleChiave,
this.pTags, this.pPosizioneUtente,
this.pRaggioMax);
homes PUNTO_DI_RISTORO:
return pIdTurista&gt; 0? PuntoDiRistoro
. ottieniNumeroElementiRicercaAvanzata (
this.pIdTurista, this.pParoleChiave,
this.pTags, this.pPosizioneUtente,
this.pRaggioMax): PuntoDiRistoro
. ottieniNumeroElementiRicerca (this.pParoleChiave,
this.pTags, this.pPosizioneUtente,
this.pRaggioMax);
)
)
return -1;
)

/ **
* Method for returning the list of results
*
* @ Param pNumeroPagina range of results to return
* @ Return Container sites emerged in the research phase as the interval
* @ Throws RemoteException Exception Remote
* /
private ArrayList &lt;?&gt; ricercaPerPagina (int pNumeroPagina)
throws RemoteException
(

/ / Declare the list of sites related to the page input
ArrayList &lt;?&gt; RisultatiPaginaCorrente = null;
TRY
(
if (controllaIdTurista ())
(
/ / Check the type of site
switch (pTipologiaSito)
(
homes BENE_CULTURALE:
/ / If the list has not already been obtained previously
/ / Search
if ((risultatiPaginaCorrente = risultatiRicercaBeniCulturali
. get (pNumeroPagina)) == null)
(
risultatiPaginaCorrente = (ArrayList &lt;?&gt;) (pIdTurista&gt; 0? BeneCulturale
. ricercaAvanzata (pIdTurista, pParoleChiave,
pTags, pNumeroPagina,
pElementiPerPagina,
pPosizioneUtente, pRaggioMax)
: BeneCulturale.ricerca (pParoleChiave,
pTags, pNumeroPagina,
pElementiPerPagina,
pPosizioneUtente, pRaggioMax));
risultatiRicercaBeniCulturali
. put (
pNumeroPagina,
(ArrayList &lt;BeanBeneCulturale&gt;) risultatiPaginaCorrente);
)
break;

homes PUNTO_DI_RISTORO:
/ / If the list has not already been obtained previously
/ / Search
if ((risultatiPaginaCorrente = risultatiRicercaPuntiDiRistoro
. get (pNumeroPagina)) == null)
(
risultatiPaginaCorrente = (ArrayList &lt;?&gt;) (pIdTurista&gt; 0? PuntoDiRistoro
. ricercaAvanzata (pIdTurista, pParoleChiave,
pTags, pNumeroPagina,
pElementiPerPagina,
pPosizioneUtente, pRaggioMax)
: PuntoDiRistoro.ricerca (pParoleChiave,
pTags, pNumeroPagina,
pElementiPerPagina,
pPosizioneUtente, pRaggioMax));
risultatiRicercaPuntiDiRistoro
. put (
pNumeroPagina,
(ArrayList &lt;BeanPuntoDiRistoro&gt;) risultatiPaginaCorrente);
)
break;
)
)
/ / Return the results
risultatiPaginaCorrente return;
)

catch (SQLException e)
(
throw new RemoteException (MessaggiErrore.ERRORE_DBMS);
)
catch (Exception e)
(
throw new RemoteException (MessaggiErrore.ERRORE_SCONOSCIUTO);
)

)

/ **
* Method for calculating the number of pages found at
* Search
*
* @ Return many pages in the research phase
* /
private int calcolaNumeroPagineRicerca ()
(
/ / If the number of pages is greater than or equal to 0 returns the number of
/ / Pages
if (numeroPagineRisultati&gt; = 0)
numeroPagineRisultati return;
/ / If the number of elements is a multiple of the number of items per page
/ / Return their relationship
if ((numeroElementiRicerca% pElementiPerPagina == 0))
return (numeroElementiRicerca / pElementiPerPagina);
/ / Otherwise returns their relationship + 1
return (numeroElementiRicerca / pElementiPerPagina) + 1;
)

/ **
* Method for calculating the number of elements of nell'intevallo
* A given page
*
* @ Param interval nPagina results
* @ Return number of elements in a page
* /
private int calcolaNumeroElementiPagina (int nPagina)
(
/ / If page number is the last return their form
if (nPagina == (numeroPagineRisultati - 1))
return (numeroElementiRicerca% pElementiPerPagina);
/ / Otherwise returns the number of items per page
else
return (pElementiPerPagina);
)

/ **
* Method for checking the validity of a page
*
* @ Param pPagina page to check
* @ Return true if the page is valid
* /
private boolean controllaPagina (int pPagina)
(
/ / If page number is in the range returns true
return (pPagina&gt; = 0 &amp; &amp; pPagina &lt;numeroPagineRisultati);
)

/ **
* Method for checking the correctness of the identifier Tourist
*
* @ Return true if the identifier is valid, false otherwise
* /
private boolean controllaIdTurista ()
(
return ((pIdTurista&gt; 0) | | (pIdTurista == -1));
)

/ **
* Method to reset all the variables related to a search
*
* @ Return A constant that indicates the correct zero
* /
private int azzeraParametri ()
(

/ / Clears all the search parameters
pIdTurista = -1;
pTipologiaSito = -1;
pElementiPerPagina = -1;
numeroElementiRicerca = -1;
numeroPagineRisultati = -1;

risultatiRicercaBeniCulturali.clear ();
risultatiRicercaPuntiDiRistoro.clear ();

return -1;
)

/ **
* Method for the detection and conversion of data tags in struttara List
*
* @ Param list of identifiers pTagsId Search Tags
* @ Return List Search Tags
* @ Throws SQLException
* /
private ArrayList &lt;BeanTag&gt; arrayToArrayListTag (int [] pTagsId)
throws SQLException
(
/ / Initialize the list of Tags
&lt;BeanTag&gt; PTags ArrayList &lt;BeanTag&gt; = new ArrayList ();
/ / If the list of identifiers of the tag is empty I get the tags
if (pTagsId = null)
(
BeanTag currentTag = null;
TRY
(

/ / Loop for the insertion of tags found in the list
for (int i = 0; i &lt;pTagsId.length i + +)
(
/ / If the identifier is greater than 0
if (pTagsId [i]&gt; 0)
(
currentTag = Tag.ottieniTag (pTagsId [i]);
/ / Check correctness on tags
if (ControlloDati.checkBeanTag (currentTag))
pTags.add (currentTag);
)
)

)
catch (SQLException e)
(
throw new SQLException (MessaggiErrore.ERRORE_DBMS);
)
)
/ / Return the list of tags
pTags return;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_RicercaAvanzata</id>
      <content>Class RicercaAvanzata
java.lang.Object
unisa.gps.etour.control.GestioneRicerche.Ricerca
unisa.gps.etour.control.GestioneRicerche.RicercaAvanzata
All Implemented Interfaces:
IRicerca

-------------------------------------------------- ------------------------------

public class RicercaAvanzataextends RicercaClasse for managing the Advanced Search

BENE_CULTURALE, PUNTO_DI_RISTORO

RicercaAvanzata (int pIdTurista)
Class constructor

ottieniNumeroElementiRicerca, ottieniNumeroPagineRicerca, ottieniPaginaRisultatiBeneCulturale, ottieniPaginaRisultatiPuntoDiRistoro, search

GestioneRicerche.Ricerca

RicercaAvanzata
public RicercaAvanzata (int pIdTurista) class constructor

Parameters:
pIdTurista - ID del T</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_RicercaStandard</id>
      <content>package unisa.gps.etour.control.GestioneRicerche;

import java.sql.SQLException;
import java.util.ArrayList;

/ **
* Class for managing Standard Search
*
* @ Author Joseph Penna
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class Search extends RicercaStandard
(

/ ** Constructor of the class
*
* /
public RicercaStandard ()
(

)

protected int ottieniNumeroElementiRicercaSpecializzato ()
throws SQLException
(
/ / Check the type of site and gets the number of results
switch (pTipologiaSito)
(
homes BENE_CULTURALE:
return BeneCulturale.ottieniNumeroElementiRicerca (
this.pParoleChiave, this.pTags, this.pPosizioneUtente,
this.pRaggioMax);
homes PUNTO_DI_RISTORO:
return PuntoDiRistoro.ottieniNumeroElementiRicerca (
this.pParoleChiave, this.pTags, this.pPosizioneUtente,
this.pRaggioMax);
default:
return -1;
)
)

protected ArrayList &lt;?&gt; ricercaSpecializzataPerPagina (int pNumeroPagina)
throws SQLException
(
/ / Check the type of site and search
switch (pTipologiaSito)
(
homes BENE_CULTURALE:
return BeneCulturale.ricerca (pParoleChiave, pTags,
pNumeroPagina, numeroElementiPerPagina,
pPosizioneUtente, pRaggioMax);
homes PUNTO_DI_RISTORO:
return PuntoDiRistoro.ricerca (pParoleChiave, pTags,
pNumeroPagina, numeroElementiPerPagina,
pPosizioneUtente, pRaggioMax);
default:
return null;

)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_SchedaBC</id>
      <content>ï&gt;¿package unisa.gps.etour.gui.operatoreagenzia;

import java.awt .*;
import java.awt.event .*;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing .*;
import java.util .*;
import javax.swing.table.TableColumn;
import javax.swing.text.JTextComponent;
import javax.swing.border .*;
import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanTag;
import unisa.gps.etour.bean.BeanVisitaBC;
import unisa.gps.etour.control.GestioneBeniCulturali.IGestioneBeniCulturaliAgenzia;
import unisa.gps.etour.control.GestioneTag.IGestioneTagComune;
import unisa.gps.etour.gui.operatoreagenzia.document.LimitedDocument;
import unisa.gps.etour.gui.operatoreagenzia.document.NumericDocument;
import unisa.gps.etour.gui.operatoreagenzia.document.OnlyCharactersDocument;
import unisa.gps.etour.gui.operatoreagenzia.tables.FeedBackTableModel;
import unisa.gps.etour.gui.operatoreagenzia.tables.MediaVotiRenderer;
import unisa.gps.etour.util.Punto3D;

/ **
* Class that models the interface for viewing the card,
* Modify the data and the insertion of a new cultural object.
*
* @ Version 1.0
* @ Author Mario Gallo
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
*
* /
public class SchedaBC extends JInternalFrame implements IScheda
(

private static final String [] txts = ( &quot;Name&quot;, &quot;Address&quot;, &quot;City&quot;, &quot;Location&quot;, &quot;CAP&quot;
&quot;Province&quot;, &quot;Geographical Location&quot;, &quot;Phone&quot;,
&quot;Opening Hours&quot;, &quot;Closing Time&quot;
&quot;Closing Date&quot;, &quot;Ticket price&quot;, &quot;Description&quot;);
private static final String [] help = (
&quot;Enter the name of cultural property.&quot;
&quot;Enter the address where is located the cultural property.&quot;
&quot;Enter the city 'where is located the cultural property.&quot;
&quot;Enter the location 'of membership of a cultural object.&quot;
&quot;Enter your zip code, the area where the cultural object is located.&quot;
&quot;Select the province belonging to the cultural property.&quot;
&quot;Incorporating three dimensional coordinates for the location of&quot; +
&quot;cultural heritage.&quot;
&quot;Enter the phone for delivery of the cultural management office.&quot;
&quot;Select the time of public opening of the cultural property.&quot;
&quot;Select the closing time for the public of cultural property.&quot;
&quot;Select the weekly closing day.&quot;
&quot;Give the ticket price of admission to cultural property.&quot;
&quot;&lt;html&gt; Enter a full and comprehensive description for the cultural property. &lt;br&gt; Please note that this&quot; +
&quot;description will be used as a source of keywords &lt;br&gt; in research by&quot; +
&quot;tourists &lt;/ html&gt;&quot;
&quot;&lt;html&gt; Select the search tags for cultural property. &lt;br&gt; search tags allow tourists to seek&quot; +
&quot;The sites with the features of interest. &lt;/ Html&gt;&quot;);
private JPanel jContentPane = null;
Private JToolBar toolbarSchedaBC = null;
Private JToggleButton btnModifica = null;
private JButton btnSalva = null;
private JButton btnAnnulla = null;
private JButton btnModificaCommento = null;
private JTabbedPane JTabbedPane = null;
private JPanel statistics = null;
private JPanel feedback = null;
private JTextField address2 = null;
private JComboBox Address1 = null;
private JTextField cittaBC = null;
private JTextField localitaBC = null;
private JTextField capBC = null;
private JTextField posGeoX = null;
private JScrollPane JScrollPane = null;
private JTextArea descrizioneBC = null;
private JTextField telefonoBC = null;
private JComboBox oreAP = null;
private JComboBox minAP = null;
Private TagPanel pannelloTag;
private JTextField costoBC = null;
private JComboBox Oreca = null;
private JComboBox mince = null;
private JComboBox provBC = null;
private JPanel datiBC = null;
private JTextField nomeBC = null;
private JScrollPane scrollPaneFeedback = null;
private JTable tableFeedback = null;
private JLabel txtNomeBene = null;
private JLabel mediaVotoBC = null;
private JPanel statMeseCorrente = null;
private JPanel statTotali = null;
private JTextField posGeoY = null;
private JTextField posGeoZ = null;
private Vector &lt;JLabel&gt; suggestions;
Private BeanBeneCulturale bc;
private JComboBox giornoChiusura;
private JLabel [] statMeseC;
private JLabel [] statt;
Private Beniculturali parent;
Private FeedBackTableModel feedbackModel;
protected IGestioneTagComune tags;
protected IGestioneBeniCulturaliAgenzia gestioneBC;
private ArrayList &lt;Integer&gt; idTag = null;

/ **
* The default constructor for inclusion of the interface model
* A new cultural object.
*
* /
public SchedaBC (Beniculturali pParent)
(
super ( &quot;New Cultural Heritage&quot;);
frameIcon = new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;nuovoBC.png&quot;));
closable = true;
resizable = false;
iconable = true;
setSize (600, 560);
setDefaultCloseOperation (WindowConstants.DO_NOTHING_ON_CLOSE);
suggestions &lt;JLabel&gt; = new Vector ();
parent = pParent;
bc = null;

/ / Initialize the content pane
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());
jContentPane.add (getToolbarSchedaBC (), BorderLayout.CENTER);
JTabbedPane = new JTabbedPane ();
jTabbedPane.addTab ( &quot;Data Cultural Heritage&quot;
new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;dati.png&quot;)),
getDatiBCForm (), null);
jContentPane.add (JTabbedPane, BorderLayout.CENTER);
setContentPane (jContentPane);

/ / Dialog closure to close the entry window.
addInternalFrameListener (new InternalFrameAdapter ()
(
/ *
* Inclusion of the frame on the desktop desktop retrieves bread bread
* And desktop manager and initializes the remote objects for managing
* Cultural heritage.
* /

public void internalFrameOpened (InternalFrameEvent pEvent)
(
PEvent.getInternalFrame JInternalFrame frame = ();

/ / Setting up of remote objects for the management of cultural heritage.
TRY
(
Registry reg = LocateRegistry.getRegistry (Home.HOST);
tag =
(IGestioneTagComune) reg.lookup (GestioneTagComune &quot;);
gestioneBC =
(IGestioneBeniCulturaliAgenzia) reg.lookup (GestioneBeniCulturaliAgenzia &quot;);
/ / Load data.
caricaTags ();
)
/ *
* Two exceptions: RemoteException and NotBoundException. The
* Result is the same. The management is not operable and
* After the error message window closes.
* /
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; Card for entering a new cultural asset will be closed. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; &lt;b&gt; Possible Causes: &lt;/ b&gt;&quot;
+ &quot;&lt;ul&gt; &lt;li&gt; No connection to the network. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; inactive. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; clogged. &lt;/ Li&gt; &lt;/ ul&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (frame, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
frame.dispose ();
)
)

public void internalFrameClosing (InternalFrameEvent pEvent)
(
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Are you sure you want to cancel the creation of a new cultural asset?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;Warning! Unsaved data will be lost.&quot; SwingConstants.CENTER);
avviso.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Close&quot;, &quot;Cancel&quot;);
int choice = JOptionPane.showInternalOptionDialog (jContentPane, root,
&quot;Confirm closure&quot;,
JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, frameIcon, options, options [1]);
if (choice == JOptionPane.OK_OPTION)
(
parent.closeScheda ((SchedaBC) pEvent.getInternalFrame ());
)
)
));

/ / Initialize button
btnModifica.setVisible (false);
btnSalva.setVisible (true);
btnAnnulla.setVisible (true);
btnAnnulla.setText ( &quot;Clear&quot;);

)

/ **
* This interface models the manufacturer regarding modification of data and
* Display of the tab of a cultural object.
*
* @ Param BeanBeneCulturale pbc - the bean contains the data of
* Selected cultural.
* @ Param boolean pModifica &lt;ul&gt; &lt;li&gt; true - the fields will be editable, and then you are
* To amend the data of a cultural object. &lt;li&gt; False - the fields will not be
* Edit, and then you are viewing the tab of a cultural object. &lt;/ Ul&gt;
*
* /
public SchedaBC (Beniculturali pParent, BeanBeneCulturale PBC, boolean pModifica)
(
super ();
frameIcon = new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;scheda.png&quot;));
closable = true;
resizable = false;
iconable = true;
setSize (600, 560);
setDefaultCloseOperation (WindowConstants.DO_NOTHING_ON_CLOSE);

/ / Initialize instance variables
bc = pbc;
this.parent = pParent;
suggestions &lt;JLabel&gt; = new Vector ();
initializeSchedaBC ();

if (pModifica) / / Are we change the cultural property.
(
btnModifica.setSelected (true);
btnSalva.setVisible (true);
btnAnnulla.setVisible (true);
btnAnnulla.setText ( &quot;Reset&quot;);
)
else / / We're viewing the tab of a cultural object.
(
mostraNascondiSuggerimenti ();
attivaDisattivaEdit ();
)

)

/ **
* This method returns the id of the cultural property for which you are viewing the
* Contact or changing data.
*
* @ Return int - the id of the cultural property.
*
* /
public int getId ()
(
if (bc == null)
(
return -1;
)
bc.getId return ();
)

/ **
*
* This method initializes the interface for display board
* A cultural object.
*
* @ Return void
* /
private void initializeSchedaBC ()
(
setTitle (bc.getNome ());

/ / Dialog closed frame
addInternalFrameListener (new InternalFrameAdapter ()
(
/ *
* Inclusion of the frame on the desktop desktop retrieves bread bread
* And desktop manager and initializes the remote objects for managing
* Cultural heritage.
* /

public void internalFrameOpened (InternalFrameEvent pEvent)
(
PEvent.getInternalFrame JInternalFrame frame = ();

/ / Setting up of remote objects for the management of cultural heritage.
TRY
(
Registry reg = LocateRegistry.getRegistry (Home.HOST);
tag =
(IGestioneTagComune) reg.lookup (GestioneTagComune &quot;);
gestioneBC =
(IGestioneBeniCulturaliAgenzia) reg.lookup (GestioneBeniCulturaliAgenzia &quot;);
/ / Load data.
caricaTags ();
caricaStatistiche ();
)
/ *
* Two exceptions: RemoteException and NotBoundException. The
* Result is the same. The management is not operable and
* After the error message window closes.
* /
catch (Exception ex)
(
JLabel error = new JLabel (
&quot;&lt;html&gt; &lt;h2&gt; Unable to communicate with the server eTour. &lt;/ h2&gt;&quot;
+ &quot;&lt;h3&gt; &lt;u&gt; The board of the cultural inquiry will be closed. &lt;/ U&gt; &lt;/ h3&gt;&quot;
+ &quot;&lt;p&gt; &lt;b&gt; Possible Causes: &lt;/ b&gt;&quot;
+ &quot;&lt;ul&gt; &lt;li&gt; No connection to the network. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; inactive. &lt;/ Li&gt;&quot;
+ &quot;Server &lt;li&gt; clogged. &lt;/ Li&gt; &lt;/ ul&gt;&quot;
+ &quot;&lt;p&gt; Please try again later. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; If the error persists, please contact technical support. &lt;/ P&gt;&quot;
+ &quot;&lt;p&gt; We apologize for the inconvenience. &lt;/ Html&gt;&quot;);
Err = new ImageIcon ImageIcon (getClass (). GetResource (
Home.URL_IMAGES + &quot;error48.png&quot;));
JOptionPane.showMessageDialog (frame, error,
&quot;Error!&quot; JOptionPane.ERROR_MESSAGE, err);
frame.dispose ();
)
)

public void internalFrameClosing (InternalFrameEvent pEvent)
(
/ / If you are an amendment asks for confirmation.
if (btnModifica.isSelected ())
(
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Are you sure you want to close the tab of this cultural asset?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;Warning! Unsaved data will be lost.&quot; SwingConstants.CENTER);
avviso.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Close&quot;, &quot;Cancel&quot;);
int choice = JOptionPane.showInternalOptionDialog (jContentPane, root,
&quot;Confirm closing tab Cultural Heritage&quot; bc.getNome + (),
JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, frameIcon, options, options [1]);
if (choice == JOptionPane.OK_OPTION)
(
parent.closeScheda ((SchedaBC) pEvent.getInternalFrame ());
)
)
/ / Otherwise directly closes the window.
else
(
parent.closeScheda ((SchedaBC) pEvent.getInternalFrame ());
)
)
));

/ / Initialize the content pane.
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());
jContentPane.add (getToolbarSchedaBC (), BorderLayout.CENTER);
JTabbedPane = new JTabbedPane ();
jTabbedPane.addTab ( &quot;Data Cultural Heritage&quot;
new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;dati.png&quot;)),
getDatiBCForm (), null);
New = new JScrollPane JScrollPane (getStatistiche ());
nuovo.setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
jTabbedPane.addTab ( &quot;Statistics&quot;
new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stat24.png&quot;)), new, null);
jTabbedPane.addTab ( &quot;Feedback received&quot;
new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;feedback.png&quot;)),
getFeedback (), null);
jContentPane.add (JTabbedPane, BorderLayout.CENTER);
setContentPane (jContentPane);
jTabbedPane.addChangeListener (new ChangeListener ()
(

public void stateChanged (ChangeEvent pChange)
(
/ / Data cultural
if (jTabbedPane.getSelectedIndex () == 0)
(
toolbarSchedaBC.setVisible (true);
btnModifica.setVisible (true);
if (btnModifica.isSelected ())
(
btnSalva.setVisible (true);
btnAnnulla.setVisible (true);
)
btnModificaCommento.setVisible (false);
)
/ / Statistics
else if (jTabbedPane.getSelectedIndex () == 1)
(
toolbarSchedaBC.setVisible (false);
)
/ / Feedback received
else
(
if (btnModifica.isSelected ())
(
btnSalva.setVisible (false);
btnAnnulla.setVisible (false);
)
toolbarSchedaBC.setVisible (true);
btnModificaCommento.setVisible (true);
btnModifica.setVisible (false);

)

)

));

/ / Load the data of the cultural and statistics.
caricaDatiForm ();
)

/ **
*
* This method loads the data supplied to the constructor of the cultural
* In the form.
*
* /
private void caricaDatiForm ()
(
nomeBC.setText (bc.getNome ());
capBC.setText (bc.getCap ());
cittaBC.setText (bc.getCitta ());
costoBC.setText ( &quot;&quot; + bc.getCostoBiglietto ());
descrizioneBC.setText (bc.getDescrizione ());
StringTokenizer tokenizer = new StringTokenizer (bc.getVia ());
String string = tokenizer.nextToken ();
indirizzo1.setSelectedItem (string);
indirizzo2.setText (bc.getVia (). substring (stringa.length ()));
provBC.setSelectedItem (bc.getProvincia ());
Punto3D pos = bc.getPosizione ();
posGeoX.setText ( &quot;&quot; + pos.getLatitudine ());
posGeoY.setText ( &quot;&quot; + pos.getLongitudine ());
posGeoZ.setText ( &quot;&quot; + pos.getAltitudine ());
telefonoBC.setText (bc.getTelefono ());
int minutes = bc.getOrarioApertura (). getMinutes ();
if (minutes == 0)
(
minAP.setSelectedIndex (0);
)
else
(
minAP.setSelectedItem (minutes);
)
int hours = bc.getOrarioApertura (). getHours ();
if (hours &lt;10)
(
oreAP.setSelectedItem ( &quot;0&quot; + hours);
)
else
(
oreAP.setSelectedItem (hours);
)
bc.getOrarioChiusura minutes = (). getMinutes ();
if (minutes == 0)
(
minCH.setSelectedIndex (0);
)
else
(
minCH.setSelectedItem (minutes);
)
bc.getOrarioChiusura hours = (). getHours ();
if (hours &lt;10)
(
oreCH.setSelectedItem ( &quot;0&quot; + hours);
)
else
(
oreCH.setSelectedItem (hours);
)
)

/ **
*
* This method loads the statistics provided cultural
* Input to the constructor of the class.
*
* /
private void caricaStatistiche ()
(
txtNomeBene.setText (bc.getNome ());
double voting bc.getMediaVoti = ();
if (rating&gt; = 4)
(
mediaVotoBC.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella5.gif &quot;)));
)
else if (rating &lt;4 &amp; &amp; rating&gt; = 3)
(
mediaVotoBC.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella4.gif &quot;)));
)
else if (rating &lt;3 &amp; &amp; rating&gt; = 2)
(
mediaVotoBC.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella3.gif &quot;)));
)
else if (grade &lt;2 &amp; &amp; rating&gt; = 1)
(
mediaVotoBC.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella2.gif &quot;)));
)
else
(
mediaVotoBC.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;stella1.gif &quot;)));
)

ArrayList &lt;Integer&gt; stats = null;
TRY
(
stats =
gestioneBC.ottieniStatisticheBeneCulturale (bc.getId ());

)
catch (RemoteException e)
(
)
statMeseC [0]. setText ( &quot;&quot; + stats.get (0));
statMeseC [1]. setText ( &quot;&quot; + stats.get (1));
statMeseC [2]. setText ( &quot;&quot; + stats.get (2));
statMeseC [3]. setText ( &quot;&quot; + stats.get (3));
statMeseC [4]. setText ( &quot;&quot; + stats.get (4));
statMeseC [5]. setText ( &quot;&quot; + stats.get (5));
statt [0]. setText ( &quot;142&quot;);
statt [1]. setText ( &quot;112&quot;);
statt [2]. setText ( &quot;132&quot;);
statt [3]. setText ( &quot;212&quot;);
statt [4]. setText ( &quot;152&quot;);
statt [5]. setText ( &quot;748&quot;);
/ / END TEST
)

/ **
*
* This method shows or hides the label next to the suggestions
* Of the form.
*
* /
private void mostraNascondiSuggerimenti ()
(
&lt;JLabel&gt; S = suggerimenti.iterator iterator ();
while (s.hasNext ())
(
Current = s.next JLabel ();
corrente.setVisible (corrente.isVisible ()? false: true);
)
)

/ **
*
* This method makes the form editable or not.
*
* /
private void attivaDisattivaEdit ()
(
Component [] components = datiBC.getComponents ();
for (int i = 0; i &lt;componenti.length i + +)
(
Current component = components [i];
if (current instanceof JTextField)
(
JTextField textbox = (JTextField) current;
textbox.setEditable (textbox.isEditable ()? false: true);
textbox.setBackground (Color.white);

)
else if (current instanceof JComboBox)
(
JComboBox combo = (JComboBox) current;
combobox.setEnabled (combobox.isEnabled ()? false: true);

)
)
descrizioneBC.setEditable (descrizioneBC.isEditable ()? false: true);
pannelloTag.attivaDisattiva ();
)

/ **
* This method initializes the toolbar tab of a cultural object.
*
* @ Return javax.swing.JToolBar - the toolbar.
* /
Private JToolBar getToolbarSchedaBC ()
(
if (null == toolbarSchedaBC)
(
toolbarSchedaBC JToolBar = new ();
toolbarSchedaBC.setFloatable (false);
toolbarSchedaBC.add (getBtnModifica ());
toolbarSchedaBC.addSeparator ();
toolbarSchedaBC.add (getBtnSalva ());
toolbarSchedaBC.addSeparator ();
toolbarSchedaBC.add (getBtnAnnulla ());
toolbarSchedaBC.addSeparator ();
if (bc! = null)
(
toolbarSchedaBC.add (getBtnModificaCommento ());
toolbarSchedaBC.addSeparator ();
)
)
toolbarSchedaBC return;
)

/ **
* This method initializes the button to modify data of good
* Cultural.
*
* @ Return javax.swing.JToggleButton - the button for the change.
*
* /
Private JToggleButton getBtnModifica ()
(
if (null == btnModifica)
(
btnModifica JToggleButton = new ();
btnModifica.setText ( &quot;Change Data&quot;);
btnModifica
. setIcon (new ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES + &quot;ModificaBC32.png &quot;)));
btnModifica.setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
btnModifica.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
mostraNascondiSuggerimenti ();
attivaDisattivaEdit ();
btnSalva.setVisible ((btnModifica.isSelected ()? true
: False));
btnAnnulla.setVisible ((btnModifica.isSelected ()? true
: False));

)

));
)
btnModifica return;
)

/ **
* This method initializes btnSalva
*
* @ Return javax.swing.JButton
* /
private JButton getBtnSalva ()
(
if (null == btnSalva)
(
btnSalva = new JButton ();
btnSalva.setText ( &quot;Save&quot;);
btnSalva.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;salva.png &quot;)));
btnSalva.setVisible (false);
btnSalva.setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
btnSalva.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent pEvent)
(
if (bc == null)
(
bc = riversaDatiNelBean ();
TRY
(
gestioneBC.inserisciBeneCulturale (bc);
)
catch (RemoteException ex)
(
ex.printStackTrace ();
)
)
else (
/ / Construction of the dialog for confirmation of the change
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
Updating the data of the cultural &quot;
Bc.getNome + () + &quot;with&quot;
+ &quot;Data form?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;The previous data can not be more recovered.&quot;
SwingConstants.CENTER);
Legal
. setIcon (new ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES + &quot;warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Edit&quot;, &quot;Cancel&quot;);
/ / The dialog screen appears
int choice = JOptionPane
. showInternalOptionDialog (
jContentPane,
root
&quot;Edit Data Confirm Cultural Heritage&quot;
JOptionPane.YES_NO_OPTION,
JOptionPane.QUESTION_MESSAGE,
new ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES + &quot;ModificaBC48.png&quot;)),
options, options [1]);
/ / If you chose to confirm the change
if (choice == JOptionPane.YES_OPTION)
(
bc = riversaDatiNelBean ();
caricaDatiForm ();
attivaDisattivaEdit ();
btnSalva.setVisible (false);
btnAnnulla.setVisible (false);
btnModifica.setSelected (false);
mostraNascondiSuggerimenti ();
parent.updateTableModel (bc);
JOptionPane
. showInternalMessageDialog (
jContentPane,
The data of the cultural object has been updated successfully. &quot;
&quot;Data cultural change!&quot;
JOptionPane.OK_OPTION,
new ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES + &quot;ok32.png &quot;)));
)
)
)
));
)
btnSalva return;
)

/ **
* This method initializes the button to clear the form (well again
* Culture) or reload the data of the cultural (change data).
*
* @ Return javax.swing.JButton - the button above.
*
* /
private JButton getBtnAnnulla ()
(
if (null == btnAnnulla)
(
btnAnnulla = new JButton ();
btnAnnulla.setText ( &quot;Cancel&quot;);
btnAnnulla
. setIcon (new ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES + &quot;Annulla32.png &quot;)));
btnAnnulla.setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
btnAnnulla.setVisible (false);
btnAnnulla.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
if (bc == null)
(
Component [] components = datiBC.getComponents ();
for (int i = 0; i &lt;componenti.length i + +)
(
Current component = components [i];
if (current instanceof JTextComponent)
(
((JTextComponent) current). SetText (&quot;&quot;);
)
else if (current instanceof JComboBox)
(
JComboBox combo = (JComboBox) current;
combobox.setSelectedIndex (-1);
)
)
pannelloTag.azzera ();
descrizioneBC.setText (&quot;&quot;);
)
else
(
caricaDatiForm ();
)

)

));
)
btnAnnulla return;
)

/ **
* This method initializes the button to edit a comment.
*
* @ Return javax.swing.JButton - the button to edit a comment.
* /
private JButton getBtnModificaCommento ()
(
if (null == btnModificaCommento)
(
btnModificaCommento = new JButton ();
btnModificaCommento.setText ( &quot;Edit Comment&quot;);
btnModificaCommento
. setIcon (new ImageIcon (
getClass ()
. getResource (
Home.URL_IMAGES + &quot;modificaCommento.png &quot;)));
btnModificaCommento.setVisible (false);
btnModificaCommento.setEnabled (false);
btnModificaCommento.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent pEvent)
(
int selectedRow = tableFeedback.getSelectedRow ();
NuovoCommento String = (String) JOptionPane.showInternalInputDialog (
jContentPane, &quot;Changing the selected comment:&quot;
&quot;Edit Comment&quot;, JOptionPane.QUESTION_MESSAGE,
new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;modificaCommento.png&quot;)),
null feedbackModel.getValueAt (selectedRow, 1));
if (nuovoCommento = null)
(
feedbackModel.modificaCommento (nuovoCommento, selectedRow);
)
)

));
)
btnModificaCommento return;
)

/ **
* This method initializes the format for the data of a cultural object.
*
* @ Return javax.swing.JPanel - the form for the data.
*
* /
private JPanel getDatiBCForm ()
(
if (null == datiBC)
(
datiBC = new JPanel (null);
datiBC.setBorder (new SoftBevelBorder (SoftBevelBorder.LOWERED));

/ / Creation Tips
for (int i = 0; i &lt;help.length i + +)
(
JLabel new = new JLabel ();
nuova.setIcon (new ImageIcon (getClass (). getResource (
Home.URL_IMAGES + &quot;Info16.png &quot;)));
nuova.setBounds (145, 8 + 30 * i, 24, 24);
nuova.setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
nuova.setToolTipText (help [i]);
suggerimenti.add (new);
datiBC.add (new);
if (i == help.length - 1)
(
nuova.setBounds (400, 155, 24, 24);
)

)

for (int i = 0; i &lt;txts.length i + +)
(
New = new JLabel JLabel (txts [i], SwingConstants.RIGHT);
nuova.setBounds (25, 10 + 30 * i, 120, 16);
nuova.repaint ();
datiBC.add (new, null);
)
/ / Name of Cultural Heritage
nomeBC = new JTextField ();
nomeBC.setColumns (12);
nomeBC.setDocument (new LimitedDocument (30));
nomeBC.setBounds (185, 10, 136, 20);
nomeBC.setName ( &quot;Name Cultural Heritage&quot;);
datiBC.add (nomeBC, null);

/ / Address
address2 = new JTextField ();
indirizzo2.setBounds (270, 40, 136, 20);
indirizzo2.setDocument (new LimitedDocument (30));
Address1 = new JComboBox (address);
indirizzo1.setSelectedIndex (-1);
indirizzo1.setBounds (185, 40, 60, 20);
indirizzo2.setName ( &quot;Address&quot;);
datiBC.add (address2, null);
datiBC.add (Address1, null);

/ / City
cittaBC = new JTextField ();
cittaBC.setColumns (12);
cittaBC.setBounds (185, 70, 136, 20);
cittaBC.setName ( &quot;City&quot;);
cittaBC.setDocument (new OnlyCharactersDocument (25));
datiBC.add (cittaBC);

/ / Location
localitaBC = new JTextField ();
localitaBC.setBounds (185, 100, 136, 20);
localitaBC.setName (Localit &quot;);
localitaBC.setDocument (new OnlyCharactersDocument (25));
datiBC.add (localitaBC, null);

/ / CAP
capBC = new JTextField ();
capBC.setColumns (8);
capBC.setBounds (185, 130, 92, 20);
capBC.setDocument (new NumericDocument (5));
datiBC.add (capBC, null);

/ / Geographical Location
JLabel txtX = new JLabel ( &quot;X&quot;);
JLabel txtY = new JLabel ( &quot;Y&quot;);
JLabel txtZ = new JLabel ( &quot;Z&quot;);
New fonts = new Font ( &quot;Dialog&quot;, Font.BOLD, 14);
txtX.setFont (new);
txtY.setFont (new);
txtZ.setFont (new);
txtZ.setBounds (365, 190, 10, 22);
txtY.setBounds (295, 190, 10, 22);
txtX.setBounds (227, 190, 14, 20);
posGeoX = new JTextField (12);
posGeoX.setBounds (185, 190, 40, 20);
posGeoY = new JTextField (12);
posGeoY.setBounds (255, 190, 40, 20);
posGeoZ = new JTextField (12);
posGeoZ.setBounds (325, 190, 40, 20);
posGeoX.setName ( &quot;X-coordinate&quot;);
posGeoY.setName ( &quot;Y coordinate&quot;);
posGeoZ.setName ( &quot;z coordinate&quot;);
datiBC.add (txtX, null);
datiBC.add (txtY, null);
datiBC.add (txtZ, null);
datiBC.add (posGeoX, null);
datiBC.add (posGeoY, null);
datiBC.add (posGeoZ, null);

/ / State
provBC = new JComboBox (province);
provBC.setSelectedIndex (-1);
provBC.setBounds (185, 160, 50, 20);
datiBC.add (provBC, null);

/ / Description
descrizioneBC = new JTextArea ();
descrizioneBC.setCursor (new Cursor (Cursor.TEXT_CURSOR));
descrizioneBC.setWrapStyleWord (true);
descrizioneBC.setLineWrap (true);
JScrollPane = new JScrollPane (descrizioneBC);
JScrollPane
. setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
jScrollPane.setBounds (new Rectangle (185, 370, 395, 69));
descrizioneBC.setName ( &quot;Description&quot;);
datiBC.add (JScrollPane, null);

/ / Phone
telefonoBC = new JTextField (12);
telefonoBC.setBounds (185, 220, 136, 20);
telefonoBC.setDocument (new NumericDocument (10));
telefonoBC.setName ( &quot;Phone&quot;);
datiBC.add (telefonoBC, null);

/ / Opening
oreAP = new JComboBox ();
oreAP.setBounds (185, 250, 40, 20);
Oreca = new JComboBox ();
oreCH.setBounds (185, 280, 40, 20);
for (int i = 0; i &lt;24; i + +)
(
if (i &lt;10)
(
oreCH.addItem ( &quot;0&quot; + i);
oreAP.addItem ( &quot;0&quot; + i);
)
else
(
oreAP.addItem (i);
oreCH.addItem (i);
)
)
minAP = new JComboBox ();
minAP.setBounds (241, 250, 40, 20);
minAP.addItem ( &quot;00&quot;);
minAP.addItem ( &quot;15&quot;);
minAP.addItem ( &quot;30&quot;);
minAP.addItem ( &quot;45&quot;);
mince = new JComboBox ();
minCH.setBounds (241, 280, 40, 20);
minCH.addItem ( &quot;00&quot;);
minCH.addItem ( &quot;15&quot;);
minCH.addItem ( &quot;30&quot;);
minCH.addItem ( &quot;45&quot;);
minAP.setSelectedIndex (0);
oreAP.setSelectedIndex (-1);
minCH.setSelectedIndex (0);
oreCH.setSelectedIndex (-1);
new = new Font ( &quot;Dialog&quot;, Font.BOLD, 18);
TAG 1 = new JLabel JLabel (&quot;:&quot;);
punto1.setBounds (230, 245, 10, 24);
punto1.setFont (new);
JLabel punto2 = new JLabel (&quot;:&quot;);
punto2.setBounds (230, 275, 10, 24);
punto2.setFont (new);
datiBC.add (oreAP, null);
datiBC.add (minAP, null);
datiBC.add (mince, null);
datiBC.add (Oreca, null);
datiBC.add (point 1, null);
datiBC.add (punto2, null);

/ / Closed
String [] days = ( &quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;,
&quot;Friday&quot;, &quot;Saturday&quot;, &quot;Sunday&quot;);
giornoChiusura = new JComboBox (days);
giornoChiusura.setBounds (185, 310, 96, 20);
giornoChiusura.setSelectedIndex (-1);
datiBC.add (giornoChiusura, null);

/ / Cost
costoBC = new JTextField ();
costoBC.setColumns (8);
costoBC.setBounds (185, 340, 40, 20);
JLabel euro = new JLabel ( &quot;Euro&quot;);
euro.setBounds (230, 340, 30, 16);
datiBC.add (costoBC, null);
datiBC.add (euro, null);

/ / PannelloTag
pannelloTag = new TagPanel ();
pannelloTag.setBounds (405, 180, 180, 170);
JLabel txtTag = new JLabel ( &quot;Search Tags&quot;);
txtTag.setBounds (420, 150.140, 30);
datiBC.add (txtTag, null);
datiBC.add (pannelloTag, null);

)
datiBC return;
)

/ **
* This method initializes the statistics of a container panel
* Cultural.
*
* @ Return javax.swing.JPanel - the panel statistics.
*
* /
private JPanel getStatistiche ()
(
if (statistics == null)
(
statistics = new JPanel (new GridBagLayout ());
GridBagConstraints g = new GridBagConstraints ();
g.gridx = 0;
g.gridy = 0;
g.insets = new Insets (5, 5, 5, 5);
g.anchor = GridBagConstraints.WEST;
Stat = new JLabel JLabel ( &quot;Statistics&quot;);
New fonts = new Font ( &quot;Dialog&quot;, Font.BOLD, 18);
stat.setFont (new);
statistiche.add (stat, g);
g.gridx = 1;
txtNomeBene = new JLabel ();
txtNomeBene.setFont (new);
statistiche.add (txtNomeBene, g);
g.gridx = 2;
mediaVotoBC = new JLabel ();
statistiche.add (mediaVotoBC, g);
g.gridwidth = 3;
g.gridx = 0;
g.anchor = GridBagConstraints.CENTER;
g.gridy = 1;
statistiche.add (getStatMeseCorrente (), g);
g.gridy = 2;
statistiche.add (getStatTotali (), g);
)
return statistics;
)

/ **
* This method initializes the panel to display feedback
* Received from a cultural object.
*
* @ Return javax.swing.JPanel - the panel of feedback.
*
* /
private JPanel getFeedback ()
(
if (feedback == null)
(
feedback = new JPanel ();
feedback.setLayout (new BorderLayout ());
feedbackModel = new FeedBackTableModel ();
tableFeedback = new JTable (feedbackModel);
TableColumn aColumn = tableFeedback.getColumnModel (). GetColumn (0);
/ / Rating
aColumn.setPreferredWidth (80);
aColumn.setCellRenderer (new MediaVotiRenderer ());
/ / Comment
aColumn = tableFeedback.getColumnModel (). GetColumn (1);
aColumn.setPreferredWidth (260);
/ / Release Date
aColumn = tableFeedback.getColumnModel (). GetColumn (2);
aColumn.setPreferredWidth (80);
/ / Username
aColumn = tableFeedback.getColumnModel (). GetColumn (3);
aColumn.setPreferredWidth (80);
tableFeedback.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
tableFeedback.setColumnSelectionAllowed (false);
ListSelectionModel selectionModel = tableFeedback.getSelectionModel ();
selectionModel
. addListSelectionListener (new ListSelectionListener ()
(
public void ValueChanged (ListSelectionEvent event)
(
btnModificaCommento.setEnabled (
(tableFeedback.getSelectedRow ()! = -1)
? true: false);
)
));
scrollPaneFeedback = new JScrollPane (tableFeedback);
scrollPaneFeedback
. setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
feedback.add (scrollPaneFeedback, BorderLayout.CENTER);

)
return feedback;
)

/ **
* This method initializes the panel of statistics for the current month.
*
* @ Return javax.swing.JPanel - the panel of statistics for the current month.
*
* /
private JPanel getStatMeseCorrente ()
(
if (null == statMeseCorrente)
(
statMeseCorrente = new JPanel ();
statMeseCorrente.setLayout (new GridBagLayout ());
statMeseCorrente.setPreferredSize (new Dimension (500, 280));
statMeseCorrente.setBorder (BorderFactory.createTitledBorder (
BorderFactory.createLineBorder (new Color (51, 102, 255), 3),
&quot;Statistics Current Month&quot;
TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
statMeseCorrente.setBackground (Color.white);
statMeseC = new JButton [6];
GridBagConstraints g = new GridBagConstraints ();
g.gridx = 0;
g.gridy = 0;
g.gridwidth = 3;
g.insets = new Insets (5, 5, 5, 8);
g.anchor = GridBagConstraints.WEST;
statMeseCorrente.add (new JLabel (
&quot;Details votes received this month:&quot;), g);
g.anchor = GridBagConstraints.CENTER;
g.gridwidth = 1;
New fonts = new Font ( &quot;Dialog&quot;, Font.BOLD, 16);
for (int i = 5; i&gt; = 1, i -)
(

int gridX = g.gridx;
g.gridy + +;
JLabel aLabel = new JLabel (new ImageIcon (getClass ()
. getResource (
Home.URL_IMAGES + &quot;star&quot; + i
+. &quot;Gif&quot;)), JLabel.CENTER);
statMeseCorrente.add (aLabel, g);
g.gridx + +;
statMeseCorrente.add (new JLabel (&quot;==&quot;), g);
g.gridx + +;
g.anchor = GridBagConstraints.EAST;
statMeseC [i - 1] = new JLabel ();
statMeseC [i - 1]. setFont (new);
statMeseCorrente.add (statMeseC [i - 1], g);
g.gridx = gridX;
g.anchor = GridBagConstraints.CENTER;
)
g.gridy = 6;
g.anchor = GridBagConstraints.WEST;
g.gridwidth = 2;
g.gridx = 0;
statMeseCorrente.add (new JLabel (
&quot;Number of ratings released this month:&quot;), g);
statMeseC [5] = new JLabel ();
statMeseC [5]. setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 18));
g.gridx = 2;
g.gridwidth = 1;
statMeseCorrente.add (statMeseC [5], g);

)
statMeseCorrente return;
)

/ **
* This method initializes the panel on the total statistics
* The cultural property.
*
* @ Return javax.swing.JPanel - the panel statistics totals.
*
* /
private JPanel getStatTotali ()
(
if (null == statTotali)
(
statTotali = new JPanel ();
statTotali.setLayout (new GridBagLayout ());
statTotali.setPreferredSize (new Dimension (500, 280));
statTotali.setBorder (BorderFactory.createTitledBorder (BorderFactory
. createLineBorder (new Color (51, 102, 255), 3),
&quot;Statistics Total&quot;, TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
statTotali.setBackground (Color.white);
statt = new JButton [6];
GridBagConstraints g = new GridBagConstraints ();
g.gridx = 0;
g.gridy = 0;
g.gridwidth = 3;
g.insets = new Insets (5, 5, 5, 8);
g.anchor = GridBagConstraints.WEST;
statTotali.add (new JLabel (
&quot;Details votes received this month:&quot;), g);
g.anchor = GridBagConstraints.CENTER;
g.gridwidth = 1;
New fonts = new Font ( &quot;Dialog&quot;, Font.BOLD, 16);
for (int i = 5; i&gt; = 1, i -)
(
int gridX = g.gridx;
g.gridy + +;
JLabel aLabel = new JLabel (new ImageIcon (getClass ()
. getResource (
&quot;/ unisa / gps / eTour / gui / images / star&quot; + i
+. &quot;Gif&quot;)), JLabel.CENTER);
statTotali.add (aLabel, g);
g.gridx + +;
statTotali.add (new JLabel (&quot;==&quot;), g);
g.gridx + +;
g.anchor = GridBagConstraints.EAST;
statt [i - 1] = new JLabel ();
statt [i - 1]. setFont (new);
statTotali.add (statt [i - 1], g);
g.gridx = gridX;
g.anchor = GridBagConstraints.CENTER;
)
g.gridy = 6;
g.anchor = GridBagConstraints.WEST;
g.gridwidth = 2;
g.gridx = 0;
statTotali.add (new JLabel (
&quot;Number of ratings released this month:&quot;), g);
statt [5] = new JLabel ();
statt [5]. setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 18));
g.gridx = 2;
g.gridwidth = 1;
statTotali.add (statt [5], g);
)
statTotali return;
)

Private BeanBeneCulturale riversaDatiNelBean ()
(
BeanBeneCulturale new BeanBeneCulturale = new ();
nuovo.setNome (nomeBC.getText ());
nuovo.setDescrizione (descrizioneBC.getText ());
nuovo.setCap (capBC.getText ());
nuovo.setCostoBiglietto (Double.parseDouble (costoBC.getText ()));
nuovo.setGiornoChiusura ((String) giornoChiusura.getSelectedItem ());
nuovo.setTelefono (telefonoBC.getText ());
nuovo.setCitta (cittaBC.getText ());
nuovo.setLocalita (localitaBC.getText ());
/ / Date (int year, int month, int date, int hrs, int min)
Date orarioAP = new Date (0,0,0, oreAP.getSelectedIndex (),
minAP.getSelectedIndex ());
Date orarioCH = new Date (0,0,0, oreCH.getSelectedIndex (),
minCH.getSelectedIndex ());
nuovo.setOrarioApertura (orarioAP);
nuovo.setOrarioChiusura (orarioCH);
nuovo.setProvincia ((String) provBC.getSelectedItem ());
nuovo.setVia (((String) indirizzo1.getSelectedItem ()) + &quot;&quot; + indirizzo2.getText ());
Punto3D position = new Punto3D (
Double.parseDouble (posGeoX.getText ()),
Double.parseDouble (posGeoY.getText ()),
Double.parseDouble (posGeoZ.getText ()));
nuovo.setPosizione (position);
return new;
)

private void caricaTags ()
(
ArrayList &lt;BeanTag&gt; beanTags = null;
TRY
(
beanTags = tag.ottieniTags ();
if (bc! = null)
(
idTag &lt;Integer&gt; = new ArrayList ();
ArrayList &lt;BeanTag&gt; tagDaSelezionare =
gestioneBC.ottieniTagBeneCulturale (bc.getId ());
for (BeanTag b: tagDaSelezionare)
(
idTag.add (b.getId ());
)
)
)
/ / If an error panel tag remains blank.
catch (RemoteException e)
(
)
finally
(
for (BeanTag b: beanTags)
(
pannelloTag.insertTag (b);
)
pannelloTag.setSelectedTags (idTag);
pannelloTag.repaint ();
)
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_SchedaPR</id>
      <content>/ *
* SchedaPR.java
*
* 1.0
*
* 28/05/2007
*
* (c) 2007 eTour Project - Copyright by SE @ SA Lab - DMI - University of Salerno
* /

package unisa.gps.etour.gui.operatoreagenzia;

import java.awt.BorderLayout;

import javax.swing.BorderFactory;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JInternalFrame;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;
import java.awt.Dimension;
import javax.swing.JTabbedPane;
import java.awt.GridBagLayout;
import javax.swing.JLabel;
import java.awt.GridBagConstraints;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import java.awt.Color;
import java.awt.Component;
import java.awt.Insets;
import java.awt.Rectangle;
import javax.swing.JToolBar;
import javax.swing.JToggleButton;
import javax.swing.JButton;
import java.awt.font;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.StringTokenizer;

import javax.swing.JComboBox.KeySelectionManager;
import javax.swing.border.SoftBevelBorder;
import javax.swing.border.TitledBorder;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import javax.swing.JCheckBox;
import javax.swing.JTable;
import unisa.gps.etour.bean .*;
import unisa.gps.etour.bean.util.Punto3D;
/ **
* Class that models the interface for viewing the card,
* Modify the data and the insertion of a new resting spot.
*
* @ Author Lello
*
* /
extends JInternalFrame (public class SchedaPR

private JPanel jContentPane = null;
Private JToolBar toolbarSchedaBC = null;
Private JToggleButton btnModifica = null;
private JButton btnSalva = null;
private JButton btnAnnulla = null;
btnModificaCommento JButton private = null;
private JTabbedPane JTabbedPane = null;
private JPanel statistics = null;
private JPanel feedback = null;
private JLabel txtNome = null;
private JLabel txtIndirizzo = null;
private JLabel txtCAP = null;
private JLabel txtCitta = null;
private JLabel txtLocalità = null;
private JLabel txtProvincia = null;
private JLabel txtPos = null;
private JLabel txtTel = null;
private JLabel txtOraAp = null;
private JLabel txtOraCh = null;

private JLabel JLabel = null;
private JTextField indirizzoPR = null;
private JComboBox indirizzoPR1 = null;
private JTextField cittaPR = null;
private JComboBox localitaPR = null;
private JTextField capPR = null;
private JScrollPane JScrollPane = null;
private JTextArea descrizionePR = null;
private JTextField telefonoPR = null;
private JComboBox orarioAPOrePR = null;
private JLabel jLabel1 = null;
private JComboBox orarioApMinPR = null;
Private TagPanel pannelloTag;
private JTextField costoBC = null;

private JLabel jLabel3 = null;
private JComboBox orarioCHMinPR = null;
private JComboBox provPR = null;
private JPanel datiPR = null;
private JTextField nomePR = null;
private JPanel JPanel = null;
private JScrollPane jScrollPane2 = null;
private JTable feedbackTable = null;
private JLabel txtNomeBene = null;
private JLabel mediaVotoPR = null;
private JPanel statisticheMeseCorrente = null;
private JPanel statisticheTotali = null;
private JLabel jLabel4 = null;
private JLabel jLabel41 = null;
private ActionListener campoCompilato;
Private FocusListener validating;
Private JToolBar ToolbarSchedaPR = null;
private JTextField posGeoX = null;
private JTextField posGeoY = null;
private JTextField posGeoZ = null;
private JLabel jLabel2 = null;
private JComboBox orarioCHOrePR = null;
/ **
* The default constructor for inclusion of the interface model
* A new refreshment.
*
* /
public SchedaPR ()
(
super ( &quot;New Refreshment&quot;);
campoCompilato = new ActionListener () (

public void actionPerformed (ActionEvent actionEvent)
(
((JComponent) actionEvent.getSource ()). TransferFocus ();
)

);
validating FocusListener = new () (

private final ERROR_BACKGROUND Color = new Color (255, 215, 215);
private final WARNING_BACKGROUND Color = new Color (255, 235, 205);
private String text;

public void focusGained (FocusEvent fe) (
if (fe.getSource () instanceof JTextField) (
JTextField textbox = (JTextField) fe.getSource ();
textbox.getText text = ();
)

)

public void focusLost (FocusEvent fe) (
if (fe.getSource () instanceof JTextField) (
JTextField textbox = (JTextField) fe.getSource ();
if (! text.equals (textbox.getText ())) (
textbox.getText text = ();
if (text.equals (&quot;&quot;)) (
textbox.setBackground (ERROR_BACKGROUND);
Rectangle bounds = textbox.getBounds ();
JLabel new = new JLabel ();
nuova.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ unisa / gps / eTour / gui / images / error.png &quot;)));
nuova.setBounds (bounds.x-24, bounds.y, 24.24);
nuova.setToolTipText ( &quot;Field&quot; + textbox.getName () + &quot;can not be empty!&quot;);
datiPR.add (new, null);
datiPR.repaint ();
)
)
)

)

);
initialize ();
)
/ **
* This interface models the manufacturer regarding modification of data and
* Display board a refreshment.
* @ Param unisa.gps.etour.bean.BeanPuntoDiRistoro PR - the bean contains the data of
* PuntoDiRistoro selected.
* @ Param boolean change - indicates whether the fields should be editable, so if
* You are viewing a card or change the cultural property.
*
* /
public SchedaPR (BeanPuntoDiRistoro pr, boolean edit)
(
this ();

nomePR.setText (pr.getNome ());
setTitle (pr.getNome ());
capPR.setText (pr.getCap ());
cittaPR.setText (pr.getCitta ());

descrizionePR.setText (pr.getDescrizione ());
StringTokenizer tokenizer = new StringTokenizer (pr.getVia ());
/ *
* IndirizzoPR1.addItem ( &quot;Via&quot;);
indirizzoPR1.addItem (P.zza &quot;);
indirizzoPR1.addItem ( &quot;V.le&quot;);
indirizzoPR1.addItem (V.co &quot;);
indirizzoPR1.addItem ( &quot;Largo&quot;);
indirizzoPR1.addItem ( &quot;Course&quot;);
* /
String [] path = ( &quot;Street&quot;, &quot;P.zza&quot;, &quot;V.le&quot;, &quot;V.co&quot;, &quot;Largo&quot;, &quot;Course&quot;);
String string = tokenizer.nextToken ();
int i;
for (i = 0; i &lt;via.length i + +)
if (stringa.equalsIgnoreCase (via [i]))
break;
this.indirizzoPR1.setSelectedIndex (i);
while (tokenizer.hasMoreTokens ())
this.indirizzoPR.setText (indirizzoPR.getText () + &quot;&quot; + tokenizer.nextToken ());
this.provPR.setSelectedItem (pr.getProvincia ());
Punto3D pos = pr.getPosizione ();
this.posGeoX.setText ( &quot;&quot; + pos.getX ());
this.posGeoY.setText ( &quot;&quot; + pos.getY ());
this.posGeoZ.setText ( &quot;&quot; + pos.getZ ());
this.telefonoPR.setText (pr.getTelefono ());
int minutes = pr.getOrarioApertura (). getMinutes ();
if (minutes == 0)
this.orarioApMinPR.setSelectedIndex (0);
else
this.orarioApMinPR.setSelectedItem (minutes);
int hours = pr.getOrarioApertura (). getHours ();
if (hours &lt;10)
this.orarioAPOrePR.setSelectedItem ( &quot;0&quot; + hours);
else
this.orarioAPOrePR.setSelectedItem (hours);
this.orarioCHMinPR.setSelectedItem (pr.getOrarioChiusura (). getMinutes ());
this.orarioAPOrePR.setSelectedItem (pr.getOrarioApertura (). getHours ());
this.orarioCHOrePR.setSelectedItem (pr.getOrarioChiusura (). getHours ());
if (change) (
btnModifica.setSelected (true);
)
else (
makeEditabled ();
)

)
/ **
* Method called by the constructor
*
* @ Return void
* /
private void initialize () (
this.setIconifiable (true);
this.setBounds (new Rectangle (0, 0, 600, 540));
this.setDefaultCloseOperation (WindowConstants.DO_NOTHING_ON_CLOSE);
this.setFrameIcon (new ImageIcon (getClass (). getResource ( &quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / scheda.png &quot;)));
this.setClosable (true);
this.setContentPane (getJContentPane ());
)

private void makeEditabled ()
(
Component [] components = datiPR.getComponents ();
for (int i = 0; i &lt;componenti.length i + +) (
Current component = components [i];
if (current instanceof JTextField)
(
JTextField textbox = (JTextField) current;
textbox.setEditable (textbox.isEditable ()? false: true);
textbox.setBackground (Color.white);

)
else if (current instanceof JComboBox)
(
JComboBox combo = (JComboBox) current;
combobox.setEnabled (combobox.isEnabled ()? false: true);

)
)
descrizionePR.setEditable (descrizionePR.isEditable ()? false: true);
pannelloTag.attivaDisattiva ();
)

/ **
* Method which initializes a jContentPane
*
* @ Return javax.swing.JPanel
* /
getJContentPane private JPanel () (
if (jContentPane == null) (
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());

jContentPane.add (getJTabbedPane (), BorderLayout.CENTER);
jContentPane.add (getToolbarSchedaPR (), BorderLayout.CENTER);
)
jContentPane return;
)

/ **
* This method initializes the button (ToggleButton) the alteration
* Data for puntoDiRistoro
*
* @ Return javax.swing.JToggleButton
* /
Private JToggleButton getBtnModifica () (
if (btnModifica == null) (
btnModifica JToggleButton = new ();
btnModifica.setText ( &quot;Change Data&quot;);
btnModifica.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / modifica.png &quot;)));
btnModifica.addActionListener (new ActionListener () (

public void actionPerformed (ActionEvent arg0) (
makeEditabled ();
btnSalva.setVisible ((btnModifica.isSelected ()? true: false));
btnAnnulla.setVisible ((btnModifica.isSelected ()? true: false));

)

));
)
btnModifica return;
)

/ **
* Method to initialize the Save button (btnSalva)
*
* @ Return javax.swing.JButton
* /
private JButton getBtnSalva () (
if (btnSalva == null) (
btnSalva = new JButton ();
btnSalva.setText ( &quot;Save&quot;);
btnSalva.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / salva.png &quot;)));
btnSalva.setVisible (false);
)
btnSalva return;
)

/ **
* Method to initialize the Cancel button (btnAnnulla)
*
* @ Return javax.swing.JButton
* /
private JButton getBtnAnnulla () (
if (btnAnnulla == null) (
btnAnnulla = new JButton ();
btnAnnulla.setText ( &quot;Cancel&quot;);
btnAnnulla.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / annulla.png &quot;)));
btnAnnulla.setVisible (false);
)
btnAnnulla return;
)

/ **
* Method to initialize the button for
* Changing a comment (btnModificaCommento)
*
* @ Return javax.swing.JButton
* /
private JButton getBtnModificaCommento () (
if (btnModificaCommento == null) (
btnModificaCommento = new JButton ();
btnModificaCommento.setText ( &quot;Edit Comment&quot;);
btnModificaCommento.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / modificaCommento.png &quot;)));
btnModificaCommento.setVisible (false);
)
btnModificaCommento return;
)

/ **
* Create and initialize a JTabbedPane
*
* @ Return javax.swing.JTabbedPane
* /
private JTabbedPane getJTabbedPane () (
if (JTabbedPane == null) (
JTabbedPane = new JTabbedPane ();
jTabbedPane.setCursor (new Cursor (Cursor.DEFAULT_CURSOR));
jTabbedPane.addTab ( &quot;Data Refreshment&quot;, new ImageIcon (getClass (). getResource ( &quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / dati.png&quot;)), getDatiPR (), null);
jTabbedPane.addTab ( &quot;MenuTuristico&quot;, new ImageIcon (getClass (). getResource ( &quot;/ unisa/gps/etour/gui/operatoreagenzia/images/stat24.png&quot;)), null, null);
jTabbedPane.addTab ( &quot;Statistics&quot;, new ImageIcon (getClass (). getResource ( &quot;/ unisa/gps/etour/gui/operatoreagenzia/images/stat24.png&quot;)), getStatistiche (), null);
jTabbedPane.addTab ( &quot;Feedback received&quot;, new ImageIcon (getClass (). getResource ( &quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / feedback.png&quot;)), getFeedback (), null);

)
JTabbedPane return;
)
/ **
* Method to initialize a panel (datiPR)
*
* @ Return javax.swing.JPanel
* /
getDatiPR private JPanel () (
if (datiPR == null) (
GridBagConstraints gridBagConstraints27 = new GridBagConstraints ();
gridBagConstraints27.fill = GridBagConstraints.VERTICAL;
gridBagConstraints27.gridy = 9;
gridBagConstraints27.weightx = 1.0;
gridBagConstraints27.anchor = GridBagConstraints.WEST;
gridBagConstraints27.insets = new Insets (5, 5, 36, 0);
gridBagConstraints27.ipadx = 18;
gridBagConstraints27.gridx = 1;
GridBagConstraints gridBagConstraints34 = new GridBagConstraints ();
gridBagConstraints34.gridx = 7;
gridBagConstraints34.insets = new Insets (0, 0, 0, 0);
gridBagConstraints34.gridy = 6;
jLabel2 = new JLabel ();
jLabel2.setText ( &quot;z&quot;);
GridBagConstraints gridBagConstraints33 = new GridBagConstraints ();
gridBagConstraints33.fill = GridBagConstraints.VERTICAL;
gridBagConstraints33.gridy = 6;
gridBagConstraints33.weightx = 1.0;
gridBagConstraints33.ipadx = 50;
gridBagConstraints33.insets = new Insets (5, 5, 5, 5);
gridBagConstraints33.anchor = GridBagConstraints.WEST;
gridBagConstraints33.gridx = 6;
GridBagConstraints gridBagConstraints38 = new GridBagConstraints ();
gridBagConstraints38.fill = GridBagConstraints.VERTICAL;
gridBagConstraints38.gridy = 6;
gridBagConstraints38.weightx = 1.0;
gridBagConstraints38.ipadx = 50;
gridBagConstraints38.insets = new Insets (5, 5, 5, 5);
gridBagConstraints38.anchor = GridBagConstraints.WEST;
gridBagConstraints38.gridx = 4;
GridBagConstraints gridBagConstraints22 = new GridBagConstraints ();
gridBagConstraints22.fill = GridBagConstraints.VERTICAL;
gridBagConstraints22.gridy = 6;
gridBagConstraints22.weightx = 0.0;
gridBagConstraints22.ipadx = 50;
gridBagConstraints22.anchor = GridBagConstraints.WEST;
gridBagConstraints22.insets = new Insets (5, 5, 5, 5);
gridBagConstraints22.gridx = 1;
GridBagConstraints gridBagConstraints36 = new GridBagConstraints ();
gridBagConstraints36.insets = new Insets (0, 5, 0, 5);
gridBagConstraints36.gridy = 6;
gridBagConstraints36.ipadx = 0;
gridBagConstraints36.ipady = 0;
gridBagConstraints36.gridwidth = 1;
gridBagConstraints36.gridx = 5;
GridBagConstraints gridBagConstraints35 = new GridBagConstraints ();
gridBagConstraints35.insets = new Insets (0, 0, 0, 0);
gridBagConstraints35.gridy = 6;
gridBagConstraints35.ipadx = 0;
gridBagConstraints35.ipady = 0;
gridBagConstraints35.gridwidth = 1;
gridBagConstraints35.anchor = GridBagConstraints.WEST;
gridBagConstraints35.gridx = 3;
GridBagConstraints gridBagConstraints32 = new GridBagConstraints ();
gridBagConstraints32.insets = new Insets (15, 20, 5, 0);
gridBagConstraints32.gridx = 16;
gridBagConstraints32.gridy = 4;
gridBagConstraints32.ipadx = 172;
gridBagConstraints32.ipady = 125;
gridBagConstraints32.gridwidth = 0;
gridBagConstraints32.gridheight = 6;
GridBagConstraints gridBagConstraints31 = new GridBagConstraints ();
gridBagConstraints31.fill = GridBagConstraints.VERTICAL;
gridBagConstraints31.gridwidth = 9;
gridBagConstraints31.gridx = 1;
gridBagConstraints31.gridy = 0;
gridBagConstraints31.weightx = 0.0;
gridBagConstraints31.ipadx = 240;
gridBagConstraints31.anchor = GridBagConstraints.WEST;
gridBagConstraints31.insets = new Insets (20, 5, 5, 0);
GridBagConstraints gridBagConstraints30 = new GridBagConstraints ();
gridBagConstraints30.fill = GridBagConstraints.BOTH;
gridBagConstraints30.gridwidth = 17;
gridBagConstraints30.gridx = 1;
gridBagConstraints30.gridy = 10;
gridBagConstraints30.ipadx = 265;
gridBagConstraints30.ipady = 70;
gridBagConstraints30.weightx = 1.0;
gridBagConstraints30.weighty = 1.0;
gridBagConstraints30.gridheight = 4;
gridBagConstraints30.anchor = GridBagConstraints.WEST;
gridBagConstraints30.insets = new Insets (5, 5, 2, 5);
GridBagConstraints gridBagConstraints29 = new GridBagConstraints ();
gridBagConstraints29.fill = GridBagConstraints.VERTICAL;
gridBagConstraints29.gridwidth = 3;
gridBagConstraints29.gridx = 4;
gridBagConstraints29.gridy = 9;
gridBagConstraints29.weightx = 1.0;
gridBagConstraints29.ipadx = 18;
gridBagConstraints29.anchor = GridBagConstraints.WEST;
gridBagConstraints29.insets = new Insets (5, 5, 36, 2);
GridBagConstraints gridBagConstraints28 = new GridBagConstraints ();
gridBagConstraints28.insets = new Insets (3, 5, 34, 4);
gridBagConstraints28.gridy = 9;
gridBagConstraints28.gridx = 3;
GridBagConstraints gridBagConstraints26 = new GridBagConstraints ();
gridBagConstraints26.fill = GridBagConstraints.VERTICAL;
gridBagConstraints26.gridwidth = 3;
gridBagConstraints26.gridx = 4;
gridBagConstraints26.gridy = 8;
gridBagConstraints26.weightx = 1.0;
gridBagConstraints26.anchor = GridBagConstraints.WEST;
gridBagConstraints26.ipadx = 18;
gridBagConstraints26.insets = new Insets (6, 5, 4, 2);
GridBagConstraints gridBagConstraints25 = new GridBagConstraints ();
gridBagConstraints25.insets = new Insets (4, 5, 2, 4);
gridBagConstraints25.gridy = 8;
gridBagConstraints25.anchor = GridBagConstraints.WEST;
gridBagConstraints25.gridx = 3;
GridBagConstraints gridBagConstraints24 = new GridBagConstraints ();
gridBagConstraints24.fill = GridBagConstraints.VERTICAL;
gridBagConstraints24.gridx = 1;
gridBagConstraints24.gridy = 8;
gridBagConstraints24.weightx = 1.0;
gridBagConstraints24.ipadx = 18;
gridBagConstraints24.gridwidth = 3;
gridBagConstraints24.anchor = GridBagConstraints.WEST;
gridBagConstraints24.insets = new Insets (6, 5, 4, 1);
GridBagConstraints gridBagConstraints23 = new GridBagConstraints ();
gridBagConstraints23.fill = GridBagConstraints.VERTICAL;
gridBagConstraints23.gridwidth = 9;
gridBagConstraints23.gridx = 1;
gridBagConstraints23.gridy = 7;
gridBagConstraints23.weightx = 1.0;
gridBagConstraints23.ipadx = 120;
gridBagConstraints23.anchor = GridBagConstraints.WEST;
gridBagConstraints23.insets = new Insets (4, 5, 4, 17);
GridBagConstraints gridBagConstraints21 = new GridBagConstraints ();
gridBagConstraints21.fill = GridBagConstraints.VERTICAL;
gridBagConstraints21.gridwidth = 7;
gridBagConstraints21.gridx = 1;
gridBagConstraints21.gridy = 5;
gridBagConstraints21.ipadx = 70;
gridBagConstraints21.ipady = 0;
gridBagConstraints21.weightx = 1.0;
gridBagConstraints21.anchor = GridBagConstraints.WEST;
gridBagConstraints21.insets = new Insets (5, 5, 5, 6);
GridBagConstraints gridBagConstraints20 = new GridBagConstraints ();
gridBagConstraints20.fill = GridBagConstraints.VERTICAL;
gridBagConstraints20.gridwidth = 7;
gridBagConstraints20.gridx = 1;
gridBagConstraints20.gridy = 4;
gridBagConstraints20.weightx = 1.0;
gridBagConstraints20.ipadx = 60;
gridBagConstraints20.anchor = GridBagConstraints.WEST;
gridBagConstraints20.insets = new Insets (0, 5, 0, 0);
GridBagConstraints gridBagConstraints19 = new GridBagConstraints ();
gridBagConstraints19.fill = GridBagConstraints.VERTICAL;
gridBagConstraints19.gridwidth = 4;
gridBagConstraints19.gridx = 1;
gridBagConstraints19.gridy = 3;
gridBagConstraints19.weightx = 1.0;
gridBagConstraints19.ipadx = 20;
gridBagConstraints19.anchor = GridBagConstraints.WEST;
gridBagConstraints19.insets = new Insets (6, 5, 5, 18);
GridBagConstraints gridBagConstraints18 = new GridBagConstraints ();
gridBagConstraints18.fill = GridBagConstraints.VERTICAL;
gridBagConstraints18.gridwidth = 6;
gridBagConstraints18.gridx = 1;
gridBagConstraints18.gridy = 2;
gridBagConstraints18.weightx = 1.0;
gridBagConstraints18.ipadx = 100;
gridBagConstraints18.anchor = GridBagConstraints.WEST;
gridBagConstraints18.insets = new Insets (0, 5, 0, 0);
GridBagConstraints gridBagConstraints17 = new GridBagConstraints ();
gridBagConstraints17.fill = GridBagConstraints.VERTICAL;
gridBagConstraints17.gridwidth = 9;
gridBagConstraints17.gridx = 2;
gridBagConstraints17.gridy = 1;
gridBagConstraints17.weightx = 1.0;
gridBagConstraints17.ipadx = 200;
gridBagConstraints17.anchor = GridBagConstraints.WEST;
gridBagConstraints17.insets = new Insets (5, 5, 5, 0);
GridBagConstraints gridBagConstraints16 = new GridBagConstraints ();
gridBagConstraints16.fill = GridBagConstraints.VERTICAL;
gridBagConstraints16.gridwidth = 3;
gridBagConstraints16.gridx = 1;
gridBagConstraints16.gridy = 1;
gridBagConstraints16.weightx = 1.0;
gridBagConstraints16.anchor = GridBagConstraints.WEST;
gridBagConstraints16.ipadx = 0;
gridBagConstraints16.insets = new Insets (5, 5, 5, 0);
GridBagConstraints gridBagConstraints15 = new GridBagConstraints ();
gridBagConstraints15.insets = new Insets (5, 15, 5, 0);
gridBagConstraints15.gridy = 10;
gridBagConstraints15.gridwidth = 1;
gridBagConstraints15.gridheight = 0;
gridBagConstraints15.gridx = 0;
GridBagConstraints gridBagConstraints14 = new GridBagConstraints ();
gridBagConstraints14.insets = new Insets (5, 15, 36, 0);
gridBagConstraints14.gridy = 9;
gridBagConstraints14.gridx = 0;
GridBagConstraints gridBagConstraints13 = new GridBagConstraints ();
gridBagConstraints13.insets = new Insets (5, 15, 5, 0);
gridBagConstraints13.gridy = 8;
gridBagConstraints13.gridx = 0;
GridBagConstraints gridBagConstraints12 = new GridBagConstraints ();
gridBagConstraints12.insets = new Insets (5, 15, 5, 0);
gridBagConstraints12.gridy = 7;
gridBagConstraints12.gridx = 0;
GridBagConstraints gridBagConstraints11 = new GridBagConstraints ();
gridBagConstraints11.insets = new Insets (5, 15, 5, 0);
gridBagConstraints11.gridy = 6;
gridBagConstraints11.gridx = 0;
GridBagConstraints gridBagConstraints10 = new GridBagConstraints ();
gridBagConstraints10.insets = new Insets (5, 15, 5, 0);
gridBagConstraints10.gridy = 5;
gridBagConstraints10.gridx = 0;
GridBagConstraints gridBagConstraints9 = new GridBagConstraints ();
gridBagConstraints9.insets = new Insets (5, 15, 5, 0);
gridBagConstraints9.gridy = 4;
gridBagConstraints9.gridx = 0;
GridBagConstraints gridBagConstraints8 = new GridBagConstraints ();
gridBagConstraints8.insets = new Insets (5, 15, 5, 0);
gridBagConstraints8.gridy = 3;
gridBagConstraints8.gridx = 0;
GridBagConstraints gridBagConstraints7 = new GridBagConstraints ();
gridBagConstraints7.insets = new Insets (5, 15, 5, 0);
gridBagConstraints7.gridy = 2;
gridBagConstraints7.gridx = 0;
GridBagConstraints gridBagConstraints6 = new GridBagConstraints ();
gridBagConstraints6.insets = new Insets (5, 15, 5, 0);
gridBagConstraints6.gridy = 1;
gridBagConstraints6.gridx = 0;
GridBagConstraints gridBagConstraints5 = new GridBagConstraints ();
gridBagConstraints5.insets = new Insets (20, 15, 5, 0);
gridBagConstraints5.gridy = 0;
gridBagConstraints5.gridwidth = 1;
gridBagConstraints5.gridx = 0;
jLabel41 = new JLabel ();
jLabel41.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
jLabel41.setText ( &quot;y&quot;);
jLabel4 = new JLabel ();
jLabel4.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
jLabel4.setText ( &quot;x&quot;);
jLabel3 = new JLabel ();
jLabel3.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 18));
jLabel3.setText (&quot;:&quot;);

jLabel1 = new JLabel ();
jLabel1.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 18));
jLabel1.setText (&quot;:&quot;);
JButton = new JLabel ();
jLabel.setText ( &quot;Description&quot;);
txtOraCh = new JLabel ();
txtOraCh.setText ( &quot;Closing Time&quot;);
txtOraAp = new JLabel ();
txtOraAp.setText ( &quot;Opening Hours&quot;);
txtTel = new JLabel ();
txtTel.setText ( &quot;Phone&quot;);
txtPos = new JLabel ();
txtPos.setText ( &quot;Geographic Position&quot;);
txtProvincia = new JLabel ();
txtProvincia.setText ( &quot;Province&quot;);
txtLocalità = new JLabel ();
txtLocalità.setText ( &quot;Location&quot;);
txtCitta = new JLabel ();
txtCitta.setText ( &quot;City&quot;);
txtCAP = new JLabel ();
txtCAP.setText ( &quot;CAP&quot;);
txtIndirizzo = new JLabel ();
txtIndirizzo.setText ( &quot;Address&quot;);
txtNome = new JLabel ();
txtNome.setText ( &quot;Name Refreshment&quot;);
datiPR = new JPanel ();
datiPR.setLayout (new GridBagLayout ());
datiPR.setBorder (new SoftBevelBorder (SoftBevelBorder.LOWERED));
datiPR.add (txtNome, gridBagConstraints5);
datiPR.add (txtIndirizzo, gridBagConstraints6);
datiPR.add (txtCitta, gridBagConstraints7);
datiPR.add (txtLocalità, gridBagConstraints8);
datiPR.add (txtCAP, gridBagConstraints9);
datiPR.add (txtProvincia, gridBagConstraints10);
datiPR.add (txtPos, gridBagConstraints11);
datiPR.add (txtTel, gridBagConstraints12);
datiPR.add (txtOraAp, gridBagConstraints13);
datiPR.add (txtOraCh, gridBagConstraints14);
datiPR.add (JLabel, gridBagConstraints15);
datiPR.add (getIndirizzoPR1 (), gridBagConstraints16);
datiPR.add (getIndirizzoPR (), gridBagConstraints17);
datiPR.add (getCittaPR (), gridBagConstraints18);
datiPR.add (getLocalitaPR (), gridBagConstraints19);
datiPR.add (getCapPR (), gridBagConstraints20);
datiPR.add (getProvPR (), gridBagConstraints21);
datiPR.add (getTelefonoPR (), gridBagConstraints23);
datiPR.add (getOrarioAPOrePR (), gridBagConstraints24);
datiPR.add (jLabel1, gridBagConstraints25);
datiPR.add (getOrarioApMinPR (), gridBagConstraints26);
datiPR.add (jLabel3, gridBagConstraints28);
datiPR.add (getOrarioCHMinPR (), gridBagConstraints29);
datiPR.add (getJScrollPane (), gridBagConstraints30);
datiPR.add (getNomePR (), gridBagConstraints31);
datiPR.add (getJPanel (), gridBagConstraints32);
datiPR.add (jLabel4, gridBagConstraints35);
datiPR.add (jLabel41, gridBagConstraints36);
datiPR.add (getPosGeoX (), gridBagConstraints22);
datiPR.add (getPosGeoY (), gridBagConstraints38);
datiPR.add (getPosGeoZ (), gridBagConstraints33);
datiPR.add (jLabel2, gridBagConstraints34);
datiPR.add (getOrarioCHOrePR (), gridBagConstraints27);
)
datiPR return;
)

/ **
* Method for iniziailizzare a panel (statistics)
*
* @ Return javax.swing.JPanel
* /
getStatistiche private JPanel () (
if (statistics == null) (
GridBagConstraints gridBagConstraints4 = new GridBagConstraints ();
gridBagConstraints4.gridx = 0;
gridBagConstraints4.gridwidth = 0;
gridBagConstraints4.fill = GridBagConstraints.HORIZONTAL;
gridBagConstraints4.insets = new Insets (20, 0, 0, 0);
gridBagConstraints4.gridy = 2;
GridBagConstraints gridBagConstraints3 = new GridBagConstraints ();
gridBagConstraints3.gridx = 0;
gridBagConstraints3.gridwidth = 2;
gridBagConstraints3.fill = GridBagConstraints.HORIZONTAL;
gridBagConstraints3.insets = new Insets (0, 0, 20, 0);
gridBagConstraints3.gridy = 1;
GridBagConstraints gridBagConstraints2 = new GridBagConstraints ();
gridBagConstraints2.gridx = 1;
gridBagConstraints2.insets = new Insets (0, 30, 30, 0);
gridBagConstraints2.anchor = GridBagConstraints.WEST;
gridBagConstraints2.gridy = 0;
mediaVotoPR = new JLabel ();
mediaVotoPR.setText ( &quot;JLabel&quot;);
GridBagConstraints gridBagConstraints1 = new GridBagConstraints ();
gridBagConstraints1.gridx = 0;
gridBagConstraints1.insets = new Insets (0, 0, 30, 0);
gridBagConstraints1.gridy = 0;
txtNomeBene = new JLabel ();
txtNomeBene.setText ( &quot;Well name&gt; Culturale&gt;&quot;);
txtNomeBene.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 18));
statistics = new JPanel ();
statistiche.setLayout (new GridBagLayout ());
statistiche.add (txtNomeBene, gridBagConstraints1);
statistiche.add (mediaVotoPR, gridBagConstraints2);
statistiche.add (getStatisticheMeseCorrente (), gridBagConstraints3);
statistiche.add (getStatisticheTotali (), gridBagConstraints4);
)
return statistics;
)

/ **
* Method to initialize a panel (feedback)
*
* @ Return javax.swing.JPanel
* /
getFeedback private JPanel () (
if (feedback == null) (
GridBagConstraints = GridBagConstraints new GridBagConstraints ();
gridBagConstraints.fill = GridBagConstraints.BOTH;
gridBagConstraints.gridy = 0;
gridBagConstraints.weightx = 1.0;
gridBagConstraints.weighty = 1.0;
gridBagConstraints.gridx = 0;
feedback = new JPanel ();
feedback.setLayout (new GridBagLayout ());
feedback.add (getJScrollPane2 (), GridBagConstraints);
)
return feedback;
)

/ **
* Initialize a JexField (indirizzoPR)
*
* @ Return javax.swing.JTextField
* /
private JTextField getIndirizzoPR () (
if (indirizzoPR == null) (
indirizzoPR = new JTextField ();
indirizzoPR.setColumns (12);
indirizzoPR.addActionListener (campoCompilato);
)
indirizzoPR return;
)

/ **
* Method to initialize the type field address (indirizzoPR)
* Or via, piazza ....
*
* @ Return javax.swing.JComboBox
* /
private JComboBox getIndirizzoPR1 () (
if (indirizzoPR1 == null) (
indirizzoPR1 = new JComboBox ();
indirizzoPR1.setPreferredSize (new Dimension (60, 20));
indirizzoPR1.setMinimumSize (new Dimension (60, 25));
indirizzoPR1.setCursor (new Cursor (Cursor.DEFAULT_CURSOR));
indirizzoPR1.addItem ( &quot;Via&quot;);
indirizzoPR1.addItem (P.zza &quot;);
indirizzoPR1.addItem ( &quot;V.le&quot;);
indirizzoPR1.addItem (V.co &quot;);
indirizzoPR1.addItem ( &quot;Largo&quot;);
indirizzoPR1.addItem ( &quot;Course&quot;);

)
indirizzoPR1 return;
)

/ **
* Initialize a JTextField for entering
* Uan city CittaPR
*
* @ Return javax.swing.JTextField
* /
private JTextField getCittaPR () (
if (cittaPR == null) (
cittaPR = new JTextField ();
cittaPR.setColumns (12);
cittaPR.addActionListener (campoCompilato);
)
cittaPR return;
)

/ **
* This method initializes localitaPR
*
* @ Return javax.swing.JComboBox
* /
private JComboBox getLocalitaPR () (
if (localitaPR == null) (
localitaPR = new JComboBox ();
localitaPR.setMinimumSize (new Dimension (80, 25));
localitaPR.setPreferredSize (new Dimension (80, 20));
localitaPR.addActionListener (campoCompilato);
)
localitaPR return;
)

/ **
* Code of refreshment. Definition capPR JTextField
*
* @ Return javax.swing.JTextField
* /
private JTextField getCapPR () (
if (capPR == null) (
capPR = new JTextField ();
capPR.setColumns (8);
capPR.addActionListener (campoCompilato);
)
capPR return;
)

/ **
* Creation JScrollPane
*
* @ Return javax.swing.JScrollPane
* /
private JScrollPane getJScrollPane () (
if (JScrollPane == null) (
JScrollPane = new JScrollPane ();
jScrollPane.setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
jScrollPane.setViewportView (getDescrizionePR ());
)
JScrollPane return;
)

/ **
* Method to create JTextArea's whole descrizionePR
*
* @ Return javax.swing.JTextArea
* /
getDescrizionePR private JTextArea () (
if (descrizionePR == null) (
descrizionePR = new JTextArea ();
descrizionePR.setColumns (12);
descrizionePR.setCursor (new Cursor (Cursor.TEXT_CURSOR));

)
descrizionePR return;
)

/ **
* Method to create the JTextField telefonoPR
*
* @ Return javax.swing.JTextField
* /
private JTextField getTelefonoPR () (
if (telefonoPR == null) (
telefonoPR = new JTextField ();
telefonoPR.setColumns (12);
telefonoPR.addActionListener (campoCompilato);
)
telefonoPR return;
)

/ **
* method to initialize a JComboBox with the hours (orarioAPOrePR)
*
* @ Return javax.swing.JComboBox
* /
private JComboBox getOrarioAPOrePR () (
if (orarioAPOrePR == null) (
orarioAPOrePR = new JComboBox ();
orarioAPOrePR.setPreferredSize (new Dimension (40, 20));
for (int i = 0; i &lt;24; i + +) (
if (i &lt;10)
orarioAPOrePR.addItem ( &quot;0&quot; + i);
else
orarioAPOrePR.addItem (i);

)
orarioAPOrePR.addActionListener (campoCompilato);
)
orarioAPOrePR return;
)

/ **
* Method to initialize a JComboBox with the minutes (orarioApMinPR)
*
* @ Return javax.swing.JComboBox
* /
private JComboBox getOrarioApMinPR () (
if (orarioApMinPR == null) (
orarioApMinPR = new JComboBox ();
orarioApMinPR.setLightWeightPopupEnabled (true);
orarioApMinPR.setPreferredSize (new Dimension (40, 20));
orarioApMinPR.addItem ( &quot;00&quot;);
orarioApMinPR.addItem ( &quot;15&quot;);
orarioApMinPR.addItem ( &quot;30&quot;);
orarioApMinPR.addItem ( &quot;45&quot;);
orarioApMinPR.addActionListener (campoCompilato);
)
orarioApMinPR return;
)

/ **
* Method to initialize a JComboBox with the minutes (orarioCHMinPR)
*
* @ Return javax.swing.JComboBox
* /
private JComboBox getOrarioCHMinPR () (
if (orarioCHMinPR == null) (
orarioCHMinPR = new JComboBox ();
orarioCHMinPR.setPreferredSize (new Dimension (40, 20));
orarioCHMinPR.addItem ( &quot;00&quot;);
orarioCHMinPR.addItem ( &quot;15&quot;);
orarioCHMinPR.addItem ( &quot;30&quot;);
orarioCHMinPR.addItem ( &quot;45&quot;);
orarioCHMinPR.addActionListener (campoCompilato);
)
orarioCHMinPR return;

)

/ **
* Create and initialize a jCombo Box with all the provinces (provPR)
*
* @ Return javax.swing.JTextField
* /
private JComboBox getProvPR () (
if (provPR == null) (
final String [] Province = ( &quot;AG&quot;, &quot;AL&quot;, &quot;an&quot;, &quot;AO&quot;, &quot;AQ&quot;, &quot;AR&quot;, &quot;AP&quot;, &quot;AT&quot;, &quot;AV&quot;, &quot;BA&quot;, &quot;BL&quot; , &quot;BN&quot;, &quot;BG&quot;, &quot;BI&quot;, &quot;BO&quot;, &quot;BR&quot;, &quot;BS&quot;, &quot;BZ&quot;,
&quot;CA&quot;, &quot;CB&quot;, &quot;CE&quot;, &quot;CH&quot;, &quot;CI&quot;, &quot;CL&quot;, &quot;CN&quot;, &quot;CO&quot;, &quot;CR&quot;, &quot;CS&quot;, &quot;KR&quot;, &quot;en&quot;, &quot;FC &quot;,&quot; FE &quot;,&quot; FI &quot;,&quot; FG &quot;,&quot; FR &quot;,&quot; GE &quot;,&quot; GO &quot;,&quot; GR &quot;,&quot; IM &quot;,&quot; IS &quot;,&quot; LC &quot;,
&quot;LE&quot;, &quot;LI&quot;, &quot;LO&quot;, &quot;LT&quot;, &quot;LU&quot;, &quot;MC&quot;, &quot;ME&quot;, &quot;MF&quot;, &quot;MN&quot;, &quot;MO&quot;, &quot;MS&quot;, &quot;MT&quot;, &quot;NA &quot;,&quot; NO &quot;,&quot; NU &quot;,&quot; OG &quot;,&quot; OR &quot;,&quot; OT &quot;,&quot; PA &quot;,&quot; PC &quot;,&quot; PD &quot;,&quot; PE &quot;,&quot; PG &quot;,&quot; PO &quot;,&quot; PR &quot;, &quot;PU&quot;, &quot;R&quot;, &quot;RA&quot;, &quot;RC&quot;, &quot;RE&quot;, &quot;RG&quot;,
&quot;RI&quot;, &quot;RM&quot;, &quot;RN&quot;, &quot;RO&quot;, &quot;SA&quot;, &quot;YES&quot;, &quot;SO&quot;, &quot;SP&quot;, &quot;SS&quot;, &quot;SV&quot;, &quot;TA&quot;, &quot;TE&quot;, &quot;TN &quot;,&quot; TP &quot;,&quot; TR &quot;,&quot; TS &quot;,&quot; TV &quot;,&quot; UD &quot;,&quot; VA &quot;,&quot; VB &quot;,&quot; VC &quot;,&quot; VE &quot;,&quot; VI &quot;,
&quot;VR&quot;, &quot;VS&quot;, &quot;VT&quot;, &quot;VV&quot;);
provPR = new JComboBox ();
for (int i = 0; i &lt;province.length i + +) (
provPR.addItem (provinces [i]);
)
provPR.addActionListener (campoCompilato);
)
provPR return;
)

DocumentoNumerico PlainDocument class extends (

private int limit;

public DocumentoNumerico (int limit) (

this.limit = limit;

)

/ **
* Initialization and management position
*
* @ Param integer pOffset
* @ Param String pString
* @ Param Attribute Pattra
*
* /
public void insertString (int pOffset, String pStr, AttributeSet Pattra) throws BadLocationException (
if (pStr == null)
return;

if ((getLength () + pStr.length ()) &lt;= limit) (
super.insertString (pOffset, pStr, Pattra);
)
)
)

/ **
* Initialization of a data point of the snack (nomePR)
*
* @ Return javax.swing.JTextField
* /
private JTextField getNomePR () (
if (nomePR == null) (
nomePR = new JTextField ();
nomePR.setColumns (12);
nomePR.setPreferredSize (new Dimension (180, 20));
nomePR.addActionListener (campoCompilato);
nomePR.addFocusListener (validating);
nomePR.setDocument (new DocumentoNumerico (20));

)
nomePR return;
)

/ **
* Initialize and create a panel (JPanel)
*
* @ Return javax.swing.JPanel
* /
getJPanel private JPanel () (
if (JPanel == null) (
JPanel = new JPanel ();
jPanel.setLayout (new BorderLayout ());
jPanel.setBorder (BorderFactory.createTitledBorder (
BorderFactory.createEmptyBorder (),
&quot;Tag the 'Search TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;, Font.BOLD, 12),
Color.black));
BeanTag [] test = new BeanTag [8];
test [0] = new BeanTag (0, &quot;castle&quot;, &quot;really a castle&quot;);
test [1] = new BeanTag (1, &quot;stronghold&quot;, &quot;really a hostel&quot;);
test [2] = new BeanTag (3, &quot;statue&quot;, &quot;really a basket&quot;);
test [3] = new BeanTag (4, &quot;Column&quot;, &quot;really a basket&quot;);
test [4] = new BeanTag (5, &quot;internal&quot;, &quot;really a basket&quot;);
test [5] = new BeanTag (6, &quot;external&quot;, &quot;really a basket&quot;);
test [6] = new BeanTag (7, &quot;eight hundred&quot;, &quot;really a basket&quot;);
test [7] = new BeanTag (8, &quot;Novecento&quot;, &quot;really a basket&quot;);
pannelloTag = new TagPanel (test);
jPanel.add (pannelloTag, BorderLayout.CENTER);
)
JPanel return;
)

/ **
* Creating a JScrollPane (jScrollPane2)
*
* @ Return javax.swing.JScrollPane
* /
private JScrollPane getJScrollPane2 () (
if (jScrollPane2 == null) (
jScrollPane2 = new JScrollPane ();
jScrollPane2.setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
jScrollPane2.setViewportView (getFeedbackTable ());
)
jScrollPane2 return;
)

/ **
* Create a JTable (feedbackTable)
*
* @ Return javax.swing.JTable
* /
private JTable getFeedbackTable () (
if (feedbackTable == null) (
feedbackTable = new JTable ();
)
feedbackTable return;
)

/ **
* Creation of a panel (statisticheMeseCorrente)
*
* @ Return javax.swing.JPanel
* /
getStatisticheMeseCorrente private JPanel () (
if (statisticheMeseCorrente == null) (
statisticheMeseCorrente = new JPanel ();
statisticheMeseCorrente.setLayout (new GridBagLayout ());
statisticheMeseCorrente.setPreferredSize (new Dimension (500, 120));
)
statisticheMeseCorrente return;
)

/ **
* Creation of a panel (statisticheTotali)
*
* @ Return javax.swing.JPanel
* /
getStatisticheTotali private JPanel () (
if (statisticheTotali == null) (
statisticheTotali = new JPanel ();
statisticheTotali.setLayout (new GridBagLayout ());
statisticheTotali.setPreferredSize (new Dimension (500, 120));
)
statisticheTotali return;
)
/ **
* Method for creating a toolbar
* (ToolbarSchedaPR)
*
* @ Return javax.swing.JToolBar
* /
Private JToolBar getToolbarSchedaPR () (
if (ToolbarSchedaPR == null) (

ToolbarSchedaPR JToolBar = new ();
ToolbarSchedaPR.setFloatable (false);
ToolbarSchedaPR.add (getBtnModifica ());
ToolbarSchedaPR.addSeparator ();
ToolbarSchedaPR.add (getBtnSalva ());
ToolbarSchedaPR.addSeparator ();
ToolbarSchedaPR.add (getBtnAnnulla ());
ToolbarSchedaPR.addSeparator ();
ToolbarSchedaPR.add (getBtnModificaCommento ());
ToolbarSchedaPR.addSeparator ();
)
ToolbarSchedaPR return;
)
/ **
* Method to initialize posGeoX
* The X position of the GPS
*
* @ Return javax.swing.JTextField
* /
private JTextField getPosGeoX () (
if (posGeoX == null) (
posGeoX = new JTextField ();
)
posGeoX return;
)
/ **
* Method to initialize posGeoY
* The Y position of the GPS
*
* @ Return javax.swing.JTextField
* /
private JTextField getPosGeoY () (
if (posGeoY == null) (
posGeoY = new JTextField ();
)
posGeoY return;
)
/ **
* Method to initialize posGeoZ
* The Z position of the GPS
*
* @ Return javax.swing.JTextField
* /
private JTextField getPosGeoZ () (
if (posGeoZ == null) (
posGeoZ = new JTextField ();
)
posGeoZ return;
)
/ **
* Method to initialize a JComboBox with the hours (orarioCHOrePR)
*
* @ Return javax.swing.JComboBox
* /
private JComboBox getOrarioCHOrePR () (
if (orarioCHOrePR == null) (
orarioCHOrePR = new JComboBox ();
orarioCHOrePR.setPreferredSize (new Dimension (40, 20));
)
orarioCHOrePR return;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_SchedaTurista</id>
      <content>ï&gt;¿package unisa.gps.etour.gui.operatoreagenzia;

import java.awt .*;
import java.awt.event .*;
import java.util.Date;
import java.util.Iterator;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing .*;
import java.util .*;
import javax.swing.border .*;
import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.util.Data;

/ **
* Class that models the interface for displaying the card and
* Modify the data of an account tourist.
*
* @ Version 1.0
* @ Author Mario Gallo
*
* (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
public class SchedaTurista extends JInternalFrame implements IScheda tourist
(

private static final String [] help = ( &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot;
&quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot;);
private JPanel jContentPane = null;
Private tourist JToolBar toolbarscheda = null;
Private JToggleButton btnModifica = null;
private JButton btnSalva = null;
private JButton btnReimposta = null;
private JTabbedPane JTabbedPane = null;
private JTextField address2 = null;
private JComboBox Address1 = null;
private JTextField city = null;
private JTextField ch = null;
private JTextField phone = null;
private JComboBox province = null;
private JPanel datiTurista = null;
private JTextField name = null;
private Vector &lt;JLabel&gt; suggestions;
Private BeanTurista tourist;
private JTextField name;
private JComboBox day;
private JComboBox month;
private JComboBox years;
private JTextField luogoNascita;
private JTextField email;
private JTextField username;
Private JPasswordField password;
private JLabel dataRegistrazione;
Private Tourists parent;

/ **
*
* The only card manufacturer model of a tourist or modification of data
* From the bean.
*
* @ Param pParent unisa.gps.etour.gui.operatoreagenzia.Turisti - the window &quot;father.&quot;
* @ Param pTurista unisa.gps.etour.bean.BeanTurista - the bean contentente data
* Of the tourist.
* @ Param boolean pModifica &lt;ul&gt; &lt;li&gt; true - if amendments are made to the
* Data. &lt;li&gt; False - if you are viewing the card.
*
* /
Public profile tourists (tourism pParent, BeanTurista pTurista,
boolean pModifica)
(
super ();
this.parent = pParent;
setIconifiable (true);
setSize (560, 520);
suggestions &lt;JLabel&gt; = new Vector ();
setDefaultCloseOperation (WindowConstants.DO_NOTHING_ON_CLOSE);
setClosable (true);
tourist = pTurista;
if (turista.isAttiva ())
(
frameIcon = new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / tab turista.png&quot;));
)
else
(
frameIcon = new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/DisattivaTurista32.png&quot;));
)
initialize ();
if (pModifica)
(
btnModifica.setSelected (true);
btnSalva.setVisible (true);
btnReimposta.setVisible (true);
)
else
(
mostraNascondiSuggerimenti ();
attivaDisattivaEdit ();
)
addInternalFrameListener (new InternalFrameAdapter ()
(
public void internalFrameClosing (InternalFrameEvent pEvent)
(
if (btnModifica.isSelected ())
(
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Are you sure you want to close the tab of this tourist?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;Warning! Unsaved data will be lost.&quot; SwingConstants.CENTER);
avviso.setIcon (new ImageIcon (getClass (). getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Close&quot;, &quot;Cancel&quot;);
int choice = JOptionPane.showInternalOptionDialog (jContentPane, root,
&quot;Confirm closing Tourist Card&quot; + turista.getNome () + &quot;&quot; + turista.getCognome (),
JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, frameIcon, options, options [1]);
if (choice == JOptionPane.OK_OPTION)
(
parent.closeScheda ((tourist board) pEvent.getInternalFrame ());
)
)
else
(
parent.closeScheda ((tourist board) pEvent.getInternalFrame ());
)
)
));
)

/ **
*
* This method initializes the interface card for tourists.
*
* @ Return void
*
* /
private void initialize ()
(
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());
jContentPane.add (tourist getToolbarscheda (), BorderLayout.CENTER);
JTabbedPane = new JTabbedPane ();
jTabbedPane.setCursor (new Cursor (Cursor.DEFAULT_CURSOR));
jTabbedPane.addTab ( &quot;Tourist Information&quot;, frameIcon, getDatiTuristaForm (),
null);
jContentPane.add (JTabbedPane, BorderLayout.CENTER);
setContentPane (jContentPane);
caricaDatiForm ();
)

/ **
*
* This method loads the bean data provided tourist camps
* Of the form.
*
* @ Return void
*
* /
private void caricaDatiForm ()
(
setTitle ( &quot;Profile Tourist -&quot; + turista.getNome () + &quot;&quot;
Turista.getCognome + ());
nome.setText (turista.getNome ());
cognome.setText (turista.getCognome ());
Date dob = turista.getDataNascita ();
giorno.setSelectedIndex (dataNascita.getDate ());
mese.setSelectedIndex (dataNascita.getMonth ());
anno.setSelectedIndex (dataNascita.getYear ());
StringTokenizer tokenizer = new StringTokenizer (turista.getVia ());
String string = tokenizer.nextToken ();
indirizzo1.setSelectedItem (string);
indirizzo2.setText (turista.getVia (). substring (stringa.length ()));
luogoNascita.setText (turista.getCittaNascita ());
telefono.setText (turista.getTelefono ());
citta.setText (turista.getCittaResidenza ());
password.setText (turista.getPassword ());
provincia.setSelectedItem (turista.getProvincia ());
username.setText (turista.getUsername ());
cap.setText (turista.getCap ());
email.setText (turista.getEmail ());
dataRegistrazione
. setText (Data.toEstesa (turista.getDataRegistrazione ()));
)

/ **
*
* This method shows or hides the suggestions relating to the form fields.
*
* @ Return void
*
* /
private void mostraNascondiSuggerimenti ()
(
&lt;JLabel&gt; S = suggerimenti.iterator iterator ();
while (s.hasNext ())
(
Current = s.next JLabel ();
corrente.setVisible (corrente.isVisible ()? false: true);
)
)

/ **
*
* This method makes it or not editable form fields.
*
* @ Return void
*
* /
private void attivaDisattivaEdit ()
(
Component [] components = datiTurista.getComponents ();
for (int i = 0; i &lt;componenti.length i + +)
(
Current component = components [i];
if (current instanceof JTextField)
(
JTextField textbox = (JTextField) current;
textbox.setEditable (textbox.isEditable ()? false: true);
textbox.setBackground (Color.white);

)
else if (current instanceof JComboBox)
(
JComboBox combo = (JComboBox) current;
combobox.setEnabled (combobox.isEnabled ()? false: true);

)
)
)

/ **
* This method initializes the toolbar for the functionality of the card
* Tourist.
*
* @ Return javax.swing.JToolBar
*
* /
Private tourist JToolBar getToolbarscheda ()
(
if (toolbarscheda tourist == null)
(
tourist toolbarscheda JToolBar = new ();
toolbarscheda turista.setFloatable (false);
toolbarscheda turista.add (getBtnModifica ());
toolbarscheda turista.addSeparator ();
toolbarscheda turista.add (getBtnSalva ());
toolbarscheda turista.addSeparator ();
toolbarscheda turista.add (getBtnReimposta ());
toolbarscheda turista.addSeparator ();
)
return toolbarscheda tourist;
)

/ **
* This method initializes the button for editing data.
*
* @ Return javax.swing.JToggleButton
*
* /
Private JToggleButton getBtnModifica ()
(
if (null == btnModifica)
(
btnModifica JToggleButton = new ();
btnModifica.setText ( &quot;Change Data&quot;);
btnModifica
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/ModificaTurista32.png &quot;)));
btnModifica
. setToolTipText ( &quot;Enable or disable data modification tourists selected.&quot;);
btnModifica.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
mostraNascondiSuggerimenti ();
attivaDisattivaEdit ();
btnSalva.setVisible ((btnModifica.isSelected ()? true
: False));
btnReimposta.setVisible ((btnModifica.isSelected ()? true
: False));

)

));
)
btnModifica return;
)

/ **
* This method initializes the button to save the changes
* Made to the data of the tourist.
*
* @ Return javax.swing.JButton
* /
private JButton getBtnSalva ()
(
if (null == btnSalva)
(
btnSalva = new JButton ();
btnSalva.setText ( &quot;Save&quot;);
btnSalva.setIcon (new ImageIcon (getClass (). getResource (
&quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / salva.png &quot;)));
btnSalva
. setToolTipText ( &quot;Save changes to the tourist profile selected.&quot;);
btnSalva.setVisible (false);
btnSalva.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent pEvent)
(
/ / Construction of the dialog for confirmation of the change
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Updating the tourist profile of&quot;
Turista.getNome + () + &quot;&quot;
Turista.getCognome + () + &quot;with&quot;
+ &quot;Data form?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;The previous data can not be more recovered.&quot;
SwingConstants.CENTER);
Legal
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Edit&quot;, &quot;Cancel&quot;);
/ / The dialog screen appears
int choice = JOptionPane
. showInternalOptionDialog (
jContentPane,
root
&quot;Commit Changes tourist figures,
JOptionPane.YES_NO_OPTION,
JOptionPane.QUESTION_MESSAGE,
new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/ModificaTurista48.png&quot;)),
options, options [1]);
/ / If you chose to confirm the change
if (choice == JOptionPane.YES_OPTION)
(
turista.setNome (nome.getText ());
turista.setCognome (cognome.getText ());
turista.setCap (cap.getText ());
turista.setCittaNascita (luogoNascita.getText ());
turista.setDataNascita (new Date (
anno.getSelectedIndex (), month
. getSelectedIndex (), day
. getSelectedIndex ()));
turista.setCittaResidenza (citta.getText ());
turista.setUsername (username.getText ());
turista.setEmail (email.getText ());
turista.setTelefono (telefono.getText ());
turista.setVia (indirizzo1.getSelectedItem (). toString ()
+ &quot;&quot; + Indirizzo2.getText ());
turista.setProvincia (provincia.getSelectedItem ()
. toString ());
String pass = &quot;&quot;;
char [] password = password.getPassword ();
for (int i = 0; i &lt;passWord.length i + +)
(
pass + = password [i];
)
turista.setPassword (pass);
caricaDatiForm ();
attivaDisattivaEdit ();
btnSalva.setVisible (false);
btnReimposta.setVisible (false);
btnModifica.setSelected (false);
mostraNascondiSuggerimenti ();
parent.updateTableModel (tourists);
JOptionPane
. showInternalMessageDialog (
jContentPane,
The data of tourists have been updated successfully. &quot;
&quot;Modified Profile Tourist!&quot;
JOptionPane.OK_OPTION,
new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/ok48.png &quot;)));
)
)
));
)
btnSalva return;
)

/ **
* This method initializes the button to reset the data of the tourist
* In the form.
*
* @ Return javax.swing.JButton
* /
private JButton getBtnReimposta ()
(
if (null == btnReimposta)
(
btnReimposta = new JButton ();
btnReimposta.setText ( &quot;Reset&quot;);
btnReimposta
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/Annulla32.png &quot;)));
btnReimposta
. setToolTipText ( &quot;Reload the selected tourist information.&quot;);
btnReimposta.setVisible (false);
btnReimposta.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent arg0)
(
caricaDatiForm ();
)
));
)
btnReimposta return;
)

/ **
* This method initializes the form contentente data of the tourist.
*
* @ Return javax.swing.JPanel
*
* /
private JPanel getDatiTuristaForm ()
(
if (null == datiTurista)
(
datiTurista = new JPanel (null);
datiTurista.setBorder (new SoftBevelBorder (SoftBevelBorder.LOWERED));
/ / Creation Tips
String [] txts = ( &quot;Name&quot;, &quot;Name&quot;, &quot;Date of Birth&quot;,
&quot;Place of Birth&quot;, &quot;Phone&quot;, &quot;Address&quot;, &quot;City&quot;,
&quot;CPC&quot;, &quot;Province&quot;, &quot;E-Mail&quot;, &quot;Username&quot;, &quot;Password&quot;,
&quot;Save&quot;);

for (int i = 0; i &lt;help.length i + +)
(
JLabel new = new JLabel ();
nuova.setIcon (new ImageIcon (getClass (). getResource (
&quot;/ unisa/gps/etour/gui/images/Info16.png &quot;)));
nuova.setBounds (145, 8 + 30 * i, 24, 24);
nuova.setCursor (Cursor.getPredefinedCursor (Cursor.HAND_CURSOR));
nuova.setToolTipText (help [i]);
suggerimenti.add (new);
datiTurista.add (new);

)

for (int i = 0; i &lt;txts.length i + +)
(
New = new JLabel JLabel (txts [i], SwingConstants.RIGHT);
nuova.setBounds (25, 10 + 30 * i, 120, 20);
nuova.repaint ();
datiTurista.add (new, null);
)
/ / Name
name = new JTextField (12);
nome.setBounds (185, 10, 136, 20);
nome.setName ( &quot;Name&quot;);
datiTurista.add (name, null);

/ / Surname
name = new JTextField (12);
cognome.setBounds (185, 40, 136, 20);
cognome.setName ( &quot;Name&quot;);
datiTurista.add (name, null);

/ / Date of Birth
day = new JComboBox ();
giorno.setBounds (185, 70, 40, 20);
for (int i = 1; i &lt;= 31; i + +)
(
giorno.addItem (i);
)
month = new JComboBox ();
mese.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent pEvent)
(
int number = giorno.getItemCount ();
switch (mese.getSelectedIndex ())
(
case 0:
case 2:
case 4:
case 6:
case 7:
case 9:
case 11:
for (int i = number + 1; i &lt;= 31; i + +)
(
giorno.addItem (i);
)
break;

case 1:
int year = (Integer) anno.getSelectedItem ();
boolean leap = ((year% 4 == 0 &amp; &amp; year% 100! = 0) | | (year% 400 == 0));
if (number! = 28)
(
for (int i = number - 1, i&gt; 27; i -)
(
giorno.removeItemAt (i);
)
)
if (leap &amp; &amp; number! = 29)
(
giorno.addItem ( &quot;29&quot;);
)
break;

case 3:
case 5:
case 8:
case 10:
if (number == 31)
(
giorno.removeItemAt (30);
)
else
(
for (int i = number + 1; i &lt;= 30; i + +)
(
giorno.addItem (i);
)
)
break;
)
)

));
mese.setBounds (245, 70, 40, 20);
for (int i = 1; i &lt;= 12; i + +)
(
mese.addItem (i);
)
year = new JComboBox ();
anno.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
if (mese.getSelectedIndex () == 1)
(
int year = (Integer) anno.getSelectedItem ();
boolean leap = ((year% 4 == 0 &amp; &amp; year% 100! = 0) | | (year% 400 == 0));
int number = giorno.getItemCount ();
if (leap &amp; &amp; number! = 29)
(
giorno.addItem ( &quot;29&quot;);
)
else if (leap &amp; &amp; number == 29)
(
giorno.removeItemAt (28);
)
)

)

));
anno.setBounds (305, 70, 80, 20);
Date today = new Date ();
for (int i = 0; i &lt;= odierna.getYear () - 14; i + +)
(
anno.addItem (1900 + i);
)
datiTurista.add (day, null);
datiTurista.add (month, null);
datiTurista.add (year, null);

/ / Place of Birth
luogoNascita = new JTextField (12);
luogoNascita.setBounds (185, 100, 136, 20);
luogoNascita.setName ( &quot;Birth Place&quot;);
datiTurista.add (luogoNascita, null);

/ / Phone
phone = new JTextField (12);
telefono.setBounds (185, 130, 136, 20);
telefono.setName ( &quot;Phone&quot;);
datiTurista.add (telephone, null);

/ / Address
address2 = new JTextField (12);
indirizzo2.setBounds (270, 160, 136, 20);
Address1 = new JComboBox (address);
indirizzo1.setSelectedIndex (-1);
indirizzo1.setBounds (185, 160, 60, 20);
datiTurista.add (address2, null);
datiTurista.add (Address1, null);

/ / City
city = new JTextField (12);
citta.setBounds (185, 190, 136, 20);
citta.setName ( &quot;City&quot;);
datiTurista.add (city, null);

/ / CAP
ch = new JTextField (8);
cap.setBounds (185, 220, 92, 20);
datiTurista.add (cap, null);

/ / State
province = new JComboBox (province);
provincia.setSelectedIndex (-1);
provincia.setBounds (185, 250, 50, 20);
datiTurista.add (province, null);

/ / E-Mail
email = new JTextField ();
email.setBounds (185, 280, 200, 20);
email.setName ( &quot;E-Mail&quot;);
datiTurista.add (email, null);

/ / Username
username = new JTextField ();
username.setBounds (185, 310, 136, 20);
username.setName ( &quot;Username&quot;);
datiTurista.add (username, null);

/ / Password
password = new JPasswordField (12);
password.setBounds (185, 340, 136, 20);
password.setName ( &quot;Password&quot;);
datiTurista.add (password, null);

/ / Data entry
dataRegistrazione = new JLabel ();
dataRegistrazione.setBounds (185, 370, 140, 20);
datiTurista.add (dataRegistrazione, null);
)
datiTurista return;
)

/ **
* This method returns the id of the tourist who is viewing /
* Edit.
*
* @ Return int - the id of the tourist.
*
* /
public int getId ()
(
turista.getId return ();
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_ScrollableTable</id>
      <content>package unisa.gps.etour.gui.operatoreagenzia.tables;

import java.awt .*;
import javax.swing.JTable;
import javax.swing.Scrollable;
import javax.swing.SwingConstants;
table .*;

/ **
* Create a custom JTable that can be displayed through
* Components that enable scrolling.
* @ See javax.swing.JTable
* @ See javax.swing.Scrollable
* @ Author _OniZuKa_
* @ Version 1.0
* /
public class ScrollableTable extends JTable implements Scrollable
(

private static final int maxUnitIncrement = 20;

public ScrollableTable ()
(
super ();
)

public ScrollableTable (TableModel tm)
(
super (tm);
setGridColor (Color.LIGHT_GRAY);
setIntercellSpacing (new Dimension (5,0));
)

getPreferredScrollableViewportSize public Dimension ()
(
GetPreferredSize return ();
)

public int getScrollableUnitIncrement (Rectangle visibleRect,
int orientation, int direction)
(

posCorrente int = 0;
if (orientation == SwingConstants.HORIZONTAL)
(
posCorrente = visibleRect.x;
)
else
(
posCorrente = visibleRect.y;
)

if (direction &lt;0)
(
int = newPos posCorrente - (posCorrente / maxUnitIncrement)
* MaxUnitIncrement;
return (newPos == 0)? maxUnitIncrement: newPos;
)
else
(
return ((posCorrente / maxUnitIncrement) + 1) * maxUnitIncrement
- PosCorrente;
)
)

public int getScrollableBlockIncrement (Rectangle visibleRect,
int orientation, int direction)
(
if (orientation == SwingConstants.HORIZONTAL)
(
return visibleRect.width - maxUnitIncrement;
)
else
(
return visibleRect.height - maxUnitIncrement;
)
)

public boolean getScrollableTracksViewportWidth ()
(
return false;
)

public boolean getScrollableTracksViewportHeight ()
(
return false;
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_SitoTableModel</id>
      <content>/ *
* SitoTableModel.java
*
* 1.0
*
* 21/05/2007
*
* (c) 2007 eTour Project - Copyright by SE @ SA Lab - DMI - University of Salerno
* /
Handheld Package;

import Bean.BeanPuntoDiRistoro;
import javax.swing.table.AbstractTableModel;
import Bean .*;
import Util.Punto3D;

/ **
* &lt;b&gt; SitoTableModel &lt;/ b&gt;
* Serves as a data container &lt;p&gt; of cultural or refreshment areas that need
* Be displayed in a JTable. &lt;/ P&gt;
* @ See javax.swing.table.AbstractTableModel
* @ See javax.swing.JTable
* @ See unisa.gps.etour.bean.BeanBeneCulturale
* @ See unisa.gps.etour.bean.BeanPuntoDiRistoro
* @ Version 1.0
* @ Author Raphael Landi
* /

public class extends SitoTableModel AbstractTableModel (
String [] columnNames = ( &quot;Name&quot;,
&quot;City&quot;, &quot;Distance&quot;);
Object [] [] cells;
Punto3D posizioneSito;
Punto3D myLocation;

SitoTableModel (BeanPuntoDiRistoro [] pr, Punto3D myLocation) (
super ();
cells = new Object [pr.length] [3] / / First value = second rows = columns
for (int i = 0; i &lt;pr.length i + +) (
Cells [i] [0] = pr [i]. getName ();
Cells [i] [1] = pr [i]. getCitta ();

)
)

SitoTableModel (BeanBeneCulturale [] bc, Punto3D myLocation) (
super ();
cells = new Object [bc.length] [3] / / First value = second rows = columns
for (int i = 0; i &lt;bc.length i + +) (
Cells [i] [0] = bc [i]. getName ();
Cells [i] [1] = bc [i]. getCitta ();

)
)

public int GetRowCount () (
cells.length return;
)

public int getColumnCount () (
columnNames.length return;
)

public Object getValueAt (int r, int c) (
if (c &lt;columnNames.length - 1)
return cells [r] [c];
else (
double value = miaPosizione.distanza (posizioneSito);
return new Double (value);
)

)

public String getColumnName (int c) (
return columnNames [c];
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_TAGTableModel</id>
      <content>/ *
* TAGTableModel.java
*
* 1.0
*
* 28/05/2007
*
* (c) 2007 eTour Project - Copyright by SE @ SA Lab - DMI - University of Salerno
* /
package unisa.gps.etour.gui.operatoreagenzia;

import java.util.Vector;
import javax.swing.table.AbstractTableModel;
import unisa.gps.etour.bean.BeanTag;
/ **
* &lt;p&gt;
* &lt;B&gt; Title: &lt;/ B&gt; TagTableModel
* &lt;/ P&gt;
* &lt;p&gt;
* &lt;B&gt; Description: &lt;/ B&gt; TableModel for dynamic management of Table
* Within the section GestioneTag
* &lt;/ P&gt;
*
* @ Author _Lello_
* @ Version 1.0
* /

public class extends TAGTableModel AbstractTableModel (

private static final long serialVersionUID = 1L;
private static final String [] headers =
( &quot;Name&quot;, &quot;Description&quot;);
private static final Class [] = columnClasses
(String.class, String.class);
&lt;Object[]&gt; private Vector data;

/ **
* Constructor for class TagTableModel
*
* @ Param BeanTag []
*
* /
public TAGTableModel (BeanTag [] tags)
(
&lt;Object[]&gt; data = new Vector ();
for (int i = 0; i &lt;tag.length i + +)
(
Object [] new = new Object [10];
new [0] = tag [i]. getId ();
New [1] = tag [i]. getName ();
new [2] = tag [i]. getDescrizione ();

)
)

/ **
* Returns the number of columns
*
* /
public int getColumnCount () (
headers.length return;
)

/ **
* Returns the number of rows
*
* /
public int GetRowCount () (
data.size return ();
)

/ **
* Returns the column heading i_esima
*
* @ Param pCol
*
* /
public String getColumnName (int pCol) (
return headers [pCol];
)

/ **
* Returns the coordinates given by the pair of row, column
*
* @ Param pCol
* @ Param pRow
*
* /
public Object getValueAt (int prow, int pCol) (
return data.get (pRow) [pCol];
)

/ **
* Returns the column pCol
*
* @ Param pCol
*
* /
public class getColumnClass (int pCol) (
return columnClasses [pCol];
)

/ **
* Always returns false because the cells in the table are not editable
*
* @ Param pCol
* @ Param pRow
*
* @ Return false
*
* /
public boolean isCellEditable (int row, int col) (
return false;
)

/ **
* This method is empty.
* Can not be included an element within a cell
*
* @ Deprecated
*
* /
public void setValueAt (Object value, int row, int col) (

)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_Tag</id>
      <content>package unisa.gps.etour.gui.operatoreagenzia;

import java.awt.BorderLayout;
import javax.swing.JPanel;
import javax.swing.JInternalFrame;

import unisa.gps.etour.bean.BeanTag;

import java.awt.GridBagLayout;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import java.awt.GridBagConstraints;
import java.awt.Dimension;
import javax.swing.JToolBar;
import javax.swing.JButton;
import javax.swing.ImageIcon;
import javax.swing.JTextPane;
import javax.swing.BorderFactory;
import javax.swing.border.TitledBorder;
import java.awt.Color;
import java.awt.font;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JTextArea;
import java.awt.Insets;

public class Tag extends JInternalFrame
(

private JPanel jContentPane = null;
private JPanel CenterPanel = null;
private JPanel EastPanel = null;
private JScrollPane JScrollPane = null;
private JTable JTable = null;
Private JToolBar jJToolBarBar = null;
private JButton btnModifica = null;
private JButton btnElimina = null;
private JButton btnExit = null;
private JPanel jPanelUp = null;
private JPanel jPanelHelp = null;
private JTextPane jTextPane = null;
private JLabel tagname = null;
private JTextField JTextField = null;
private JLabel description = null;
private JTextArea JTextArea = null;
private JButton btnOK = null;
private JButton btnResetta = null;

/ **
* This is the default constructor xxx
* /
public Tag ()
(
super ();
initialize ();
)

/ **
* This method initializes this
*
* @ Return void
* /
private void initialize ()
(
this.setSize (508, 398);
this.setFrameIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia / images / Properties.png &quot;)));
this.setTitle ( &quot;Manage Tag&quot;);
this.setContentPane (getJContentPane ());
)

/ **
* This method initializes jContentPane
*
* @ Return javax.swing.JPanel
* /
private JPanel getJContentPane ()
(
if (null == jContentPane)
(
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());
jContentPane.add (getCenterPanel (), BorderLayout.CENTER);
jContentPane.add (getEastPanel (), BorderLayout.EAST);
jContentPane.add (getJJToolBarBar (), BorderLayout.NORTH);
)
jContentPane return;
)

/ **
* This method initializes CenterPanel
*
* @ Return javax.swing.JPanel
* /
private JPanel getCenterPanel ()
(
if (null == CenterPanel)
(
GridBagConstraints = GridBagConstraints new GridBagConstraints ();
gridBagConstraints.fill = GridBagConstraints.BOTH;
gridBagConstraints.weighty = 1.0;
gridBagConstraints.weightx = 1.0;
CenterPanel = new JPanel ();
CenterPanel.setLayout (new GridBagLayout ());
CenterPanel.add (getJScrollPane (), GridBagConstraints);

)
CenterPanel return;
)

/ **
* This method initializes EastPanel
*
* @ Return javax.swing.JPanel
* /
private JPanel getEastPanel ()
(
if (null == EastPanel)
(
GridBagConstraints gridBagConstraints3 = new GridBagConstraints ();
gridBagConstraints3.gridy = 1;
GridBagConstraints gridBagConstraints2 = new GridBagConstraints ();
gridBagConstraints2.gridx = 0;
gridBagConstraints2.gridy = 0;
EastPanel = new JPanel ();
EastPanel.setLayout (new GridBagLayout ());
EastPanel.add (getJPanelUp (), gridBagConstraints2);
EastPanel.add (getJPanelHelp (), gridBagConstraints3);
)
EastPanel return;
)

/ **
* This method initializes JScrollPane
*
* @ Return javax.swing.JScrollPane
* /
private JScrollPane getJScrollPane ()
(
if (JScrollPane == null)
(
JScrollPane = new JScrollPane ();
jScrollPane.setViewportView (getJTable ());
)
JScrollPane return;
)

/ **
* This method initializes JTable
*
* @ Return javax.swing.JTable
* /
private JTable getJTable ()
(
if (JTable == null)
(
JTable = new JTable ();
BeanTag [] listaTag = new BeanTag [11];
listaTag [0] = new BeanTag (1, &quot;romantic&quot;, &quot;place for couples and unforgettable moments&quot;);
listaTag [1] = new BeanTag (2, &quot;esoteric&quot;, &quot;places of magic&quot;);
listaTag [2] = new BeanTag (3, &quot;pizza&quot;, &quot;The best pizza&quot;);
listaTag [3] = new BeanTag (6, &quot;music&quot;, &quot;live music venues, concerts ...&quot;);
listaTag [4] = new BeanTag (76, &quot;trattoria&quot;, &quot;typical&quot;);
listaTag [5] = new BeanTag (7, &quot;fairs&quot;, &quot;for important purchases or souvenirs bellismi&quot;);
listaTag [6] = new BeanTag (9, &quot;Market&quot;, &quot;typical&quot;);
listaTag [7] = new BeanTag (8, &quot;History&quot;, &quot;typical&quot;);
listaTag [8] = new BeanTag (5, &quot;nineteenth century&quot;, &quot;typical&quot;);
listaTag [9] = new BeanTag (4, &quot;range&quot;, &quot;typical&quot;);
listaTag [10] = new BeanTag (56, &quot;Cinema&quot;, &quot;typical&quot;);

)
return JTable;
)

/ **
* This method initializes jJToolBarBar
*
* @ Return javax.swing.JToolBar
* /
Private JToolBar getJJToolBarBar ()
(
if (null == jJToolBarBar)
(
jJToolBarBar JToolBar = new ();
jJToolBarBar.add (getBtnModifica ());
jJToolBarBar.add (getBtnElimina ());
jJToolBarBar.addSeparator ();
jJToolBarBar.add (getBtnExit ());

)
jJToolBarBar return;
)

/ **
* This method initializes btnModifica
*
* @ Return javax.swing.JButton
* /
private JButton getBtnModifica ()
(
if (null == btnModifica)
(
btnModifica = new JButton ();
btnModifica.setText ( &quot;Edit Tag&quot;);
btnModifica.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia/immagini/edit-32x32.png &quot;)));
)
btnModifica return;
)

/ **
* This method initializes btnElimina
*
* @ Return javax.swing.JButton
* /
private JButton getBtnElimina ()
(
if (null == btnElimina)
(
btnElimina = new JButton ();
btnElimina.setText ( &quot;Remove Tag&quot;);
btnElimina.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia/immagini/button-cancel-32x32.png &quot;)));
)
btnElimina return;
)

/ **
* This method initializes btnExit
*
* @ Return javax.swing.JButton
* /
private JButton getBtnExit ()
(
if (null == btnExit)
(
btnExit = new JButton ();
btnExit.setText ( &quot;Exit&quot;);
btnExit.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia / images / Forward 2.png &quot;)));
)
btnExit return;
)

/ **
* This method initializes jPanelUp
*
* @ Return javax.swing.JPanel
* /
private JPanel getJPanelUp ()
(
if (null == jPanelUp)
(
GridBagConstraints gridBagConstraints9 = new GridBagConstraints ();
gridBagConstraints9.gridx = 1;
gridBagConstraints9.insets = new Insets (5, 5, 5, 5);
gridBagConstraints9.gridy = 4;
GridBagConstraints gridBagConstraints8 = new GridBagConstraints ();
gridBagConstraints8.gridx = 0;
gridBagConstraints8.insets = new Insets (5, 5, 5, 5);
gridBagConstraints8.gridy = 4;
GridBagConstraints gridBagConstraints7 = new GridBagConstraints ();
gridBagConstraints7.fill = GridBagConstraints.BOTH;
gridBagConstraints7.gridy = 3;
gridBagConstraints7.weightx = 1.0;
gridBagConstraints7.weighty = 1.0;
gridBagConstraints7.gridwidth = 2;
gridBagConstraints7.insets = new Insets (5, 0, 5, 0);
gridBagConstraints7.gridx = 0;
GridBagConstraints gridBagConstraints6 = new GridBagConstraints ();
gridBagConstraints6.gridx = 0;
gridBagConstraints6.gridwidth = 2;
gridBagConstraints6.insets = new Insets (5, 0, 5, 0);
gridBagConstraints6.gridy = 2;
Description = new JLabel ();
Descrizione.setText ( &quot;Description:&quot;);
GridBagConstraints gridBagConstraints5 = new GridBagConstraints ();
gridBagConstraints5.fill = GridBagConstraints.VERTICAL;
gridBagConstraints5.gridy = 1;
gridBagConstraints5.weightx = 1.0;
gridBagConstraints5.gridwidth = 2;
gridBagConstraints5.insets = new Insets (5, 0, 5, 0);
gridBagConstraints5.gridx = 0;
GridBagConstraints gridBagConstraints4 = new GridBagConstraints ();
gridBagConstraints4.gridx = 0;
gridBagConstraints4.gridwidth = 2;
gridBagConstraints4.insets = new Insets (5, 0, 5, 0);
gridBagConstraints4.gridy = 0;
Tagname = new JLabel ();
Nometag.setText ( &quot;Tag Name:&quot;);
jPanelUp = new JPanel ();
jPanelUp.setLayout (new GridBagLayout ());
jPanelUp.setBorder (BorderFactory.createTitledBorder (BorderFactory.createLineBorder (new Color (0, 102, 255), 3), &quot;Insert New&quot;, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;, Font.BOLD, 12 ), new Color (0, 102, 255)));
jPanelUp.add (tagname, gridBagConstraints4);
jPanelUp.add (getJTextField (), gridBagConstraints5);
jPanelUp.add (Description, gridBagConstraints6);
jPanelUp.add (getJTextArea (), gridBagConstraints7);
jPanelUp.add (getBtnOk (), gridBagConstraints8);
jPanelUp.add (getBtnResetta (), gridBagConstraints9);
)
jPanelUp return;
)

/ **
* This method initializes jPanelHelp
*
* @ Return javax.swing.JPanel
* /
private JPanel getJPanelHelp ()
(
if (null == jPanelHelp)
(
GridBagConstraints gridBagConstraints1 = new GridBagConstraints ();
gridBagConstraints1.fill = GridBagConstraints.BOTH;
gridBagConstraints1.weighty = 1.0;
gridBagConstraints1.weightx = 1.0;
jPanelHelp = new JPanel ();
jPanelHelp.setLayout (new GridBagLayout ());
jPanelHelp.setBorder (BorderFactory.createTitledBorder (BorderFactory.createLineBorder (new Color (0, 102, 255), 3), &quot;Help&quot;, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;, Font.BOLD, 12), new Color (51, 153, 255)));
jPanelHelp.add (getJTextPane (), gridBagConstraints1);
)
jPanelHelp return;
)

/ **
* This method initializes jTextPane
*
* @ Return javax.swing.JTextPane
* /
private JTextPane getJTextPane ()
(
if (null == jTextPane)
(
jTextPane = new JTextPane ();
jTextPane.setPreferredSize (new Dimension (190, 80));
)
jTextPane return;
)

/ **
* This method initializes JTextField
*
* @ Return javax.swing.JTextField
* /
private JTextField getJTextField ()
(
if (JTextField == null)
(
JTextField = new JTextField ();
jTextField.setColumns (10);
)
JTextField return;
)

/ **
* This method initializes JTextArea
*
* @ Return javax.swing.JTextArea
* /
private JTextArea getJTextArea ()
(
if (JTextArea == null)
(
JTextArea = new JTextArea ();
jTextArea.setRows (3);
)
JTextArea return;
)

/ **
* This method initializes btnOK
*
* @ Return javax.swing.JButton
* /
private JButton getBtnOk ()
(
if (btnOK == null)
(
btnOK = new JButton ();
btnOk.setText ( &quot;Ok&quot;);
btnOk.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia/immagini/Button_ok16.png &quot;)));
)
btnOK return;
)

/ **
* This method initializes btnResetta
*
* @ Return javax.swing.JButton
* /
private JButton getBtnResetta ()
(
if (null == btnResetta)
(
btnResetta = new JButton ();
btnResetta.setText ( &quot;Reset&quot;);
btnResetta.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia / images / Trash.png &quot;)));
)
btnResetta return;
)

) / / @ JVE: decl-index = 0: visual-constraint = &quot;10.10&quot;</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_TestoNewsRendererTest</id>
      <content>/ **
* Test case for class TestoNewsRenderer
*
* @ Author Mario Gallo
* @ Version 0.1 (c) 2007 eTour Project - Copyright by DMI SE @ SA Lab --
* University of Salerno
* /
package unisa.gps.etour.gui.operatoreagenzia.tables.test;

import java.util.Date;
import javax.swing.JTable;
import javax.swing.JTextArea;
import unisa.gps.etour.bean.BeanNews;
import unisa.gps.etour.gui.operatoreagenzia.tables.NewsTableModel;
import unisa.gps.etour.gui.operatoreagenzia.tables.TestoNewsRenderer;
import junit.framework.TestCase;

public class TestCase extends TestoNewsRendererTest
(

Private TestoNewsRenderer renderer;
Private BeanNews aNewsAttiva;
Private BeanNews aNewsScaduta;
private JTable aTable;

public TestoNewsRendererTest ()
(
super ();
renderer = new TestoNewsRenderer ();
aNewsAttiva = new BeanNews ( &quot;Here's a news active&quot;, new Date (),
new Date (120, 1, 1), 5, 0);
aNewsScaduta = new BeanNews ( &quot;Here's a news Expired&quot;, new Date (),
new Date (), 5, 0);
aTable = new JTable (new NewsTableModel ());
)

/ *
* Verify the behavior of the method with the correct parameters.
* /
public void testGetTableCellRendererParametriCorretti ()
(
NewsTableModel aModele = (NewsTableModel) aTable.getModel ();
aModel.insertNews (aNewsAttiva);
aModel.insertNews (aNewsScaduta);

/ / Test the renderer with a news active.
JTextArea aare = (JTextArea) renderer.getTableCellRendererComponent (
aTable, &quot;Here's a news active&quot;, true, true, 0, 0);
assertEquals (aNewsAttiva.getNews (), aArea.getText ());

/ / Test the renderer with a news expired.
aare = (JTextArea) renderer.getTableCellRendererComponent (aTable,
&quot;Here's a news Expired&quot;, true, true, 0, 0);
assertEquals (aNewsScaduta.getNews (), aArea.getText ());

)

/ *
* Verification Compor the table with a table without NewsTableModel
* Associated.
* /
public void testGetTabelCellRendererNoNewsModel ()
(

JTable anotherTable = new JTable ();
TRY
(
renderer.getTableCellRendererComponent (anotherTable,
&quot;Here's a news&quot;, true, true, 0, 0);
fail ( &quot;Should be thrown.&quot;);
)
catch (IllegalArgumentException success)
(
)
)

/ *
* Verify the behavior of the method with a parameter to null.
* /
public void testGetTableCellRendererParametroNull ()
(
TRY
(
renderer.getTableCellRendererComponent (aTable, null, true, true, 0,
0);
fail ( &quot;Should be thrown.&quot;);
)
catch (IllegalArgumentException success)
(
)
)

/ *
* Verify the behavior of the method with a data type unexpected.
* /
public void testGetTableCellRendererTipoInatteso ()
(
TRY
(
renderer
. getTableCellRendererComponent (aTable, 12, true, true, 0, 0);
fail ( &quot;Should be thrown.&quot;);
)
catch (IllegalArgumentException success)
(
)

)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_Turisti</id>
      <content>/ *
* Tourists.java
*
* 1.0
*
* 26/05/2007
*
* (c) 2007 eTour Project - Copyright by SE @ SA Lab - DMI - University of Salerno
* /
package unisa.gps.etour.gui.operatoreagenzia;

import java.awt.BorderLayout;
import javax.swing.JPanel;
import javax.swing.JInternalFrame;
import java.awt.Dimension;

import javax.swing.JDesktopPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextPane;
import javax.swing.JToggleButton;
import javax.swing.JToolBar;
import javax.swing.JButton;
import javax.swing.ListSelectionModel;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import java.awt.Color;
import java.awt.Insets;
import javax.swing.JTextField;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.font;
import javax.swing.ImageIcon;
import unisa.gps.etour.util.Data;
import unisa.gps.etour.bean.BeanTurista;
import unisa.gps.etour.gui.DeskManager;
import unisa.gps.etour.gui.operatoreagenzia.tables.AttivazioneTuristaRenderer;
import unisa.gps.etour.gui.operatoreagenzia.tables.ScrollableTable;
import unisa.gps.etour.gui.operatoreagenzia.tables.TuristiTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;

/ **
* This class implements the interface for the management of tourists
* Agency by the Operator.
*
* @ Version 1.0
* @ See javax.swing.JInternalFrame
* @ Author Mario Gallo
*
* /
public class JInternalFrame extends Tourists
(

private JPanel jContentPane = null;
Private JToolBar toolbarTuristi = null;
private JButton btnModificaDati = null;
private JScrollPane scrollTableTuristi = null;
private JTable tableTuristi = null;
private JPanel searchPanel = null;
private JTextField cognomeTurista = null;
private JPanel panelHelp = null;
private JTextPane textGuida = null;
private JPanel rightPanel = null;
private JButton btnAttiva;
private JButton btnVisualizzaScheda;
private JButton btnElimina;
private TuristiTableModel TableModel;
Private JToggleButton turistiDisattivati;
Private JToggleButton turistiAttivati;
private JButton btnAzzera;
private JButton btnRicerca;
protected DeskManager desktopManager;
protected JDesktopPane JDesktopPane;
&lt;schedaturista&gt; private ArrayList children;

/ **
* This is the default constructor.
*
* /
public Tourists ()
(
super ( &quot;Tourists&quot;);
setPreferredSize (new Dimension (700, 480));
frameIcon = new ImageIcon (getClass (). getResource (
&quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / Turisti.png&quot;));
setDefaultCloseOperation (JInternalFrame.DO_NOTHING_ON_CLOSE);
closable = true;
resizable = true;
iconable = true;
maximizable = true;
setContentPane (getJContentPane ());
&lt;schedaturista&gt; children = new ArrayList ();
addInternalFrameListener (new InternalFrameAdapter ()
(
public void internalFrameOpened (InternalFrameEvent pEvent)
(
JDesktopPane pEvent.getInternalFrame = (). getDesktopPane ();
desktopManager = (DeskManager) jDesktopPane.getDesktopManager ();
)

public void internalFrameClosing (InternalFrameEvent pEvent)
(
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Are you sure you want to close the management of tourists?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
&quot;NB will be closed all the windows opened by this administration.&quot;
SwingConstants.CENTER);
Legal
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Close&quot;, &quot;Cancel&quot;);
int choice = JOptionPane.showInternalOptionDialog (jContentPane, root, &quot;Confirm closure Tourists&quot;
JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, frameIcon, options, options [1]);
if (choice == JOptionPane.OK_OPTION)
(
for (int i = 0; i &lt;figli.size (); i + +)
(
figli.get (i). dispose ();
)
pEvent.getInternalFrame (). dispose ();
)
)
));
)

/ **
* This method initializes the internal frame's content pane.
*
* @ Return javax.swing.JPanel - the content pane.
*
* /
private JPanel getJContentPane ()
(
if (null == jContentPane)
(
jContentPane = new JPanel ();
jContentPane.setLayout (new BorderLayout ());
jContentPane.add (getToolbarTuristi (), BorderLayout.NORTH);
jContentPane.add (getRightPanel (), BorderLayout.EAST);
jContentPane.add (getScrollTableTuristi (), BorderLayout.CENTER);
)
jContentPane return;
)

/ **
* This method initializes the toolbar on the management of
* Tourists.
*
* @ Return javax.swing.JToolBar - the toolbar.
*
* /
Private JToolBar getToolbarTuristi ()
(
if (null == toolbarTuristi)
(
toolbarTuristi JToolBar = new ();
toolbarTuristi.setLayout (null);
toolbarTuristi.setPreferredSize (new Dimension (1, 50));
toolbarTuristi.setOrientation (JToolBar.HORIZONTAL);
toolbarTuristi.setFloatable (false);
toolbarTuristi.add (getBtnAttiva ());
toolbarTuristi.add (getBtnModificaDati ());
toolbarTuristi.add (getBtnVisualizzaScheda ());
toolbarTuristi.add (getBtnElimina ());

)
toolbarTuristi return;
)

/ **
* This method initializes the button to activate
* A tourist.
*
* @ Return javax.swing.JButton - the button.
*
* /
private JButton getBtnAttiva ()
(
if (null == btnAttiva)
(
btnAttiva = new JButton ();
btnAttiva.setText ( &quot;Enable &lt;html&gt; &lt;br&gt; region &lt;/ html&gt;&quot;);
btnAttiva.setBounds (5, 5, 140, 40);
btnAttiva.setEnabled (false);
btnAttiva
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/AttivaTurista32.png &quot;)));

btnAttiva.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent arg0)
(
int selected = tableTuristi.getSelectedRow ();
String [] fields = ( &quot;Name&quot;, &quot;Name&quot;, &quot;Date of Birth&quot;,
&quot;Place of Birth&quot;, &quot;E-Mail&quot;, &quot;Phone&quot;,
&quot;Address&quot;, &quot;CPC&quot;, &quot;Province&quot;, &quot;City&quot;);
int [] modelReference = (1, 2, 5, 6, 3, 4, 7, 9, 10, 8);
DatiTurista JPanel = new JPanel (new GridBagLayout ());
RootDialog JPanel = new JPanel (new GridBagLayout ());
datiTurista.setBorder (BorderFactory.createTitledBorder (
BorderFactory.createLineBorder (new Color (51, 102,
255), 2), &quot;Tourist Information&quot;
TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
GridBagConstraints g = new GridBagConstraints ();
g.insets = new Insets (5, 5, 5, 5);
g.anchor = GridBagConstraints.WEST;
g.gridx = 0;
g.gridy = 0;
for (int i = 0; i &lt;campi.length i + +)
(
datiTurista.add (new JLabel (fields [i]), g);
g.gridx + +;
if (i == 2) / / Date of Birth
(
Date dob = (Date) tableModel.getValueAt (
selected, 5);
datiTurista.add (new JLabel (
Data.toCompact (dob)), g);

)
else
(
datiTurista.add (new JLabel (
tableModel.getValueAt (
selected, modelReference [i]). toString ()), g);
)
g.gridx--;
g.gridy + +;
)
g.gridx = 0;
g.gridy = 0;
rootDialog.add (datiTurista, g);
g.gridy + +;
JLabel txtAttiva = new JLabel ();
rootDialog.add (txtAttiva, g);
String [] options = new String [2];
ImageIcon iconDialog;
options [1] = &quot;Cancel&quot;;
String title;
boolean enabled = (Boolean) tableModel.getValueAt (
selected, 0);
if (enabled) / / The process of decommissioning
(
title = &quot;Turn off the tourist&quot;
+ TableModel.getValueAt (selected, 1) + &quot;&quot;
+ TableModel.getValueAt (selected, 2) + &quot;?&quot;
options [0] = &quot;Disable&quot;;
txtAttiva
. setText ( &quot;Turn off the tourist selected?&quot;);
iconDialog = new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/DisattivaTurista48.png&quot;));
)
else / / The process of activation
(
title = &quot;Turn on the tourist&quot;
+ TableModel.getValueAt (selected, 1) + &quot;&quot;
+ TableModel.getValueAt (selected, 2) + &quot;?&quot;
options [0] = &quot;Enable&quot;;
txtAttiva.setText ( &quot;Activate the tourists selected?&quot;);
iconDialog = new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/AttivaTurista48.png&quot;));
)
txtAttiva.setForeground (Color.red);
JOptionPane.showInternalOptionDialog int choice = (
jContentPane, rootDialog, title,
JOptionPane.OK_CANCEL_OPTION,
JOptionPane.QUESTION_MESSAGE, iconDialog, options,
options [1]);
if (choice == JOptionPane.OK_OPTION)
(
tableModel.setValueAt ((activated)? false: true,
selected, 0);
tableModel.fireTableDataChanged ();
)
)
));
)
btnAttiva return;
)

/ **
* This method initializes the button for changing
* Data of a tourist.
*
* @ Return javax.swing.JButton - the button.
* /
private JButton getBtnModificaDati ()
(
if (null == btnModificaDati)
(
btnModificaDati = new JButton ();
btnModificaDati
. setText ( &quot;Edit Data &lt;html&gt; &lt;br&gt; region &lt;/ html&gt;&quot;);
btnModificaDati.setBounds (155, 5, 140, 40);
btnModificaDati.setEnabled (false);
btnModificaDati
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/ModificaTurista32.png &quot;)));
btnModificaDati.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent arg0)
(
/ / TEST
New Date = new Date ();
nuova.setMonth (12);
nuova.setDate (30);
nuova.setYear (82);
Nuova2 Date = new Date ();
nuova2.setMonth (4);
nuova2.setDate (30);
nuova2.setYear (107);
BeanTurista test = new BeanTurista (0, &quot;mlmlml&quot;, &quot;Ottabio&quot;
&quot;of Michil&quot;, &quot;Ottawa&quot;, &quot;Frattamaggiore&quot;, &quot;61616161&quot;,
&quot;84932nd&quot;, &quot;V.le della Mimosa 33&quot;, &quot;NA&quot;
&quot;ottavio_ottawa@wawa.com&quot;, &quot;micacae&quot; new nuova2, false);
/ / TEST
OpenOffice.org Messenger MSN Gaim (TEST, true);
)
));
)
btnModificaDati return;
)

/ **
* This method initializes the button to display the
* Board a tourist.
*
* @ Return javax.swing.JButton - the button.
* /
private JButton getBtnVisualizzaScheda ()
(
if (null == btnVisualizzaScheda)
(
btnVisualizzaScheda = new JButton ();
btnVisualizzaScheda
. setText ( &quot;Show &lt;html&gt; &lt;br&gt; tourist profile &lt;/ html&gt;&quot;);
btnVisualizzaScheda.setBounds (305, 5, 140, 40);
btnVisualizzaScheda
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa / gps / eTour / gui / operatoreagenzia / images / schedaturista.png &quot;)));
btnVisualizzaScheda.setEnabled (false);
btnVisualizzaScheda.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
/ / TEST
New Date = new Date ();
nuova.setMonth (12);
nuova.setDate (30);
nuova.setYear (82);
Nuova2 Date = new Date ();
nuova2.setMonth (4);
nuova2.setDate (30);
nuova2.setYear (107);
BeanTurista test = new BeanTurista (0, &quot;mlmlml&quot;, &quot;Ottabio&quot;
&quot;of Michil&quot;, &quot;Ottawa&quot;, &quot;Frattamaggiore&quot;, &quot;61616161&quot;,
&quot;84932nd&quot;, &quot;V.le della Mimosa 33&quot;, &quot;NA&quot;
&quot;ottavio_ottawa@wawa.com&quot;, &quot;micacae&quot; new nuova2, false);
/ / TEST
OpenOffice.org Messenger MSN Gaim (TEST, false);
)

));
)
btnVisualizzaScheda return;
)

/ **
*
* This method initializes the delete button for a tourist.
*
* @ Return javax.swing.JButton - the button.
* /
private JButton getBtnElimina ()
(
if (null == btnElimina)
(
btnElimina = new JButton ();
btnElimina.setText ( &quot;Delete &lt;html&gt; &lt;br&gt; region &lt;/ html&gt;&quot;);
btnElimina.setBounds (455, 5, 140, 40);
btnElimina.setEnabled (false);
btnElimina
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/EliminaTurista32.png &quot;)));
btnElimina.addActionListener (new ActionListener ()
(

public void actionPerformed (ActionEvent arg0)
(
int selectedRow = tableTuristi.getSelectedRow ();
if (selectedRow! = -1)
(
String name = (String) tableModel.getValueAt (
selectedRow, 1)
+ &quot;&quot;
+ (String) TableModel
. getValueAt (selectedRow, 2);
Root = new JPanel JPanel (new BorderLayout ());
JLabel message = new JLabel (
&quot;Are you sure you want to delete the account of the tourist&quot;
+ Name + &quot;?&quot;);
message.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JLabel alert = new JLabel (
The data account and all personal settings &quot;
+ &quot;Can not be filled again.&quot;
SwingConstants.CENTER);
Legal
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/warning16.png &quot;)));
root.add (message, BorderLayout.NORTH);
root.add (notice, BorderLayout.CENTER);
String [] options = ( &quot;Delete&quot;, &quot;Cancel&quot;);
int choice = JOptionPane
. showInternalOptionDialog (
jContentPane,
root
&quot;Confirm Delete&quot;,
JOptionPane.YES_NO_OPTION,
JOptionPane.QUESTION_MESSAGE,
new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/EliminaTurista48.png&quot;)),
options, options [1]);
if (choice == JOptionPane.YES_OPTION)
(
tableModel.removeTurista (selectedRow);
tableModel.fireTableDataChanged ();
JLabel confirm = new JLabel ( &quot;Account Tourists&quot; + name
+ &quot;Was deleted.&quot;);
confirm.setFont (new Font ( &quot;Dialog&quot;, Font.BOLD, 14));
JOptionPane
. showInternalMessageDialog (
jContentPane,
confirm,
Accounts Turista out! &quot;
JOptionPane.OK_OPTION,
new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/ok32.png &quot;)));
)
)

)

));
)
btnElimina return;
)

/ **
* This method initializes the scroll with the table bread tourists.
*
* @ Return javax.swing.JScrollPane - the scroll pane.
* /
private JScrollPane getScrollTableTuristi ()
(
if (null == scrollTableTuristi)
(
TuristiTableModel = new TableModel ();
/ / TEST
New Date = new Date ();
nuova.setMonth (12);
nuova.setDate (30);
nuova.setYear (82);
Nuova2 Date = new Date ();
nuova2.setMonth (4);
nuova2.setDate (30);
nuova2.setYear (107);
BeanTurista new = new BeanTurista (0, &quot;mlmlml&quot;, &quot;Ottabio&quot;
&quot;of Michil&quot;, &quot;Ottawa&quot;, &quot;Frattamaggiore&quot;, &quot;61616161&quot;,
&quot;84932nd&quot;, &quot;V.le della Mimosa 33&quot;, &quot;NA&quot;
&quot;ottavio_ottawa@wawa.com&quot;, &quot;micacae&quot; new nuova2, false);
BeanTurista nuovo2 = new BeanTurista (1, &quot;mlmlml&quot;, &quot;Ottabiolino&quot;
&quot;of Michil&quot;, &quot;Ottawa&quot;, &quot;Frattamaggiore&quot;, &quot;61616161&quot;,
&quot;84932nd&quot;, &quot;V.le della Mimosa 33&quot;, &quot;NA&quot;
&quot;ottavio_ottawa@wawa.com&quot;, &quot;micacae&quot; new nuova2, true);
BeanTurista nuovo3 = new BeanTurista (2, &quot;mlmlml&quot;, &quot;Ottavio&quot;,
&quot;Michil&quot;, &quot;Ottawa&quot;, &quot;Frattamaggiore&quot;, &quot;61616161&quot;, &quot;84932nd&quot;
&quot;V.le Mimose 33&quot;, &quot;NA&quot;, &quot;ottavio_ottawa@wawa.com&quot;
&quot;micacae&quot; new nuova2, false);
tableModel.insertTurista (new);
tableModel.insertTurista (nuovo2);
tableModel.insertTurista (nuovo3);
for (int i = 0; i &lt;12; i + +)
(
tableModel.insertTurista (new);
)
/ / END TEST
tableTuristi = new ScrollableTable (TableModel);
tableTuristi.setAutoCreateColumnsFromModel (true);
tableTuristi.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
tableTuristi.setSelectionForeground (Color.RED);
tableTuristi.setSelectionBackground (Color.white);
tableTuristi.setColumnSelectionAllowed (false);
tableTuristi.setShowVerticalLines (false);
tableTuristi.setRowHeight (32);
/ / Status
tableTuristi.getColumnModel (). GetColumn (0). setPreferredWidth (40);
tableTuristi.getColumnModel (). GetColumn (0). setCellRenderer (
New AttivazioneTuristaRenderer ());
/ / Name
tableTuristi.getColumnModel (). GetColumn (1). setPreferredWidth (100);
/ / Surname
tableTuristi.getColumnModel (). GetColumn (2). setPreferredWidth (100);
/ / Email
tableTuristi.getColumnModel (). GetColumn (3). setPreferredWidth (140);
/ / Phone
tableTuristi.getColumnModel (). GetColumn (4). setPreferredWidth (80);
/ / Date of Birth
tableTuristi.getColumnModel (). GetColumn (5). setPreferredWidth (100);
/ / City of Birth
tableTuristi.getColumnModel (). GetColumn (6). setPreferredWidth (100);
/ / Address
tableTuristi.getColumnModel (). GetColumn (7). setPreferredWidth (100);
/ / Residence
tableTuristi.getColumnModel (). GetColumn (8). setPreferredWidth (80);
/ / CAP
tableTuristi.getColumnModel (). GetColumn (9). setPreferredWidth (60);
/ / State
tableTuristi.getColumnModel (). GetColumn (10). setPreferredWidth (30);
/ / Data entry
tableTuristi.getColumnModel (). GetColumn (11). setPreferredWidth (90);

ListSelectionModel selectionModel = tableTuristi
. getSelectionModel ();
selectionModel.addListSelectionListener (new ListSelectionListener ()
(
public void ValueChanged (ListSelectionEvent event)
(
int selectedRow = tableTuristi.getSelectedRow ();
if (selectedRow! = -1)
(
btnAttiva.setEnabled (true);
btnModificaDati.setEnabled (true);
btnVisualizzaScheda.setEnabled (true);
btnElimina.setEnabled (true);
if ((Boolean) tableModel.getValueAt (selectedRow, 0))
(
btnAttiva.setText ( &quot;Enable &lt;html&gt; &lt;br&gt; region &lt;/ html&gt;&quot;);
btnAttiva
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/AttivaTurista32.png &quot;)));
)
else
(
btnAttiva
. setText ( &quot;Disable &lt;html&gt; &lt;br&gt; region &lt;/ html&gt;&quot;);
btnAttiva
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/DisattivaTurista32.png &quot;)));
)
)
else
(
btnElimina.setEnabled (false);
btnModificaDati.setEnabled (false);
btnAttiva.setEnabled (false);
btnVisualizzaScheda.setEnabled (false);
)

)
));
scrollTableTuristi = new JScrollPane ();
scrollTableTuristi.setViewportView (tableTuristi);
scrollTableTuristi
. setHorizontalScrollBarPolicy (JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
scrollTableTuristi
. setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
)
scrollTableTuristi return;
)

/ **
* This method initializes the form to the search for tourists.
*
* @ Return javax.swing.JPanel
*
* /
private JPanel getSearchPanel ()
(
if (null == searchPanel)
(
searchPanel = new JPanel ();
searchPanel.setLayout (new GridBagLayout ());
searchPanel.setBorder (BorderFactory.createTitledBorder (
BorderFactory.createLineBorder (new Color (51, 102, 255), 3),
Research Tourists &quot;, TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
GridBagConstraints g = new GridBagConstraints ();
/ / Create Panel, choose tourists
Tourists JPanel = new JPanel (new GridBagLayout ());
turisti.setPreferredSize (new Dimension (200, 120));
turisti.setBorder (BorderFactory.createLoweredBevelBorder ());
turistiAttivati JToggleButton = new ( &quot;active tourists&quot;);
turistiAttivati.setPreferredSize (new Dimension (165, 30));
turistiDisattivati JToggleButton = new ( &quot;Tourists Off&quot;);
turistiDisattivati.setPreferredSize (new Dimension (165, 30));
turistiAttivati
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/schedaturista24.png &quot;)));
ActionListener almenoUno = new ActionListener ()
(
public void actionPerformed (ActionEvent pEvent)
(
if (pEvent.getSource () == turistiAttivati)
(
if (! turistiAttivati.isSelected ()
&amp; &amp;! TuristiDisattivati.isSelected ())
(
turistiDisattivati.setSelected (true);
)
)
else
(
if (! turistiAttivati.isSelected ()
&amp; &amp;! TuristiDisattivati.isSelected ())
(
turistiAttivati.setSelected (true);
)
)

)
);
turistiAttivati.addActionListener (almenoUno);
turistiDisattivati.addActionListener (almenoUno);
turistiAttivati.setSelected (true);
turistiDisattivati.setSelected (true);
turistiDisattivati
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/DisattivaTurista24.png &quot;)));
g.insets = new Insets (8, 8, 8, 8);
g.gridx = 0;
g.gridy = 0;
g.weighty = 0.2;
g.fill = GridBagConstraints.HORIZONTAL;
turisti.add (turistiAttivati, g);
g.gridy + +;
turisti.add (turistiDisattivati, g);

/ / Create search panel
g.gridx = 0;
g.gridy = 0;
g.gridwidth = 2;
g.anchor = GridBagConstraints.CENTER;
g.fill = GridBagConstraints.NONE;
g.insets = new Insets (5, 5, 5, 5);
searchPanel.add (new JLabel ( &quot;Name Turista&quot;), g);
cognomeTurista = new JTextField (12);
g.gridy + +;
searchPanel.add (cognomeTurista, g);
g.gridy + +;
searchPanel.add (new JLabel ( &quot;View&quot;), g);
g.gridy + +;
g.weighty = 0.2;
g.insets = new Insets (5, 5, 20, 5);
searchPanel.add (tourists, g);
g.insets = new Insets (5,5,5,5);
g.gridwidth = 1;
g.gridy + +;
searchPanel.add (getBtnRicerca (), g);
g.gridx = 1;
searchPanel.add (getBtnAzzera (), g);
)
searchPanel return;
)

/ **
* This method initializes the panel's online help.
*
* @ Return javax.swing.JPanel
*
* /
private JPanel getPanelHelp ()
(
if (null == panelHelp)
(
panelHelp = new JPanel ();
panelHelp.setLayout (new BorderLayout ());
panelHelp.setBorder (BorderFactory.createTitledBorder (BorderFactory
. createLineBorder (new Color (51, 102, 255), 3),
&quot;Help&quot;, TitledBorder.DEFAULT_JUSTIFICATION,
TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;,
Font.BOLD, 12), new Color (0, 102, 204)));
panelHelp.setPreferredSize (new Dimension (200, 100));
textGuida = new JTextPane ();
textGuida.setOpaque (false);
textGuida.setContentType ( &quot;text / html&quot;);
textGuida.setEditable (false);
textGuida.setOpaque (false);
panelHelp.add (textGuida, BorderLayout.CENTER);

)
panelHelp return;
)

/ **
* This method initializes the side panel of the interface.
*
* @ Return javax.swing.JPanel
*
* /
private JPanel getRightPanel ()
(
if (null == rightPanel)
(
rightPanel = new JPanel ();
rightPanel.setLayout (new GridBagLayout ());
GridBagConstraints g = new GridBagConstraints ();
g.gridx = 0;
g.gridy = 1;
g.fill = GridBagConstraints.BOTH;
g.weighty = 0.3;
rightPanel.add (getPanelHelp (), g);
g.weighty = 0.7;
g.gridx = 0;
g.gridy = 0;
rightPanel.add (getSearchPanel (), g);
)
rightPanel return;
)

/ **
* This method initializes the search button tourists.
*
* @ Return javax.swing.JButton
*
* /
private JButton getBtnRicerca ()
(
if (null == btnRicerca)
(
btnRicerca = new JButton ();
btnRicerca.setText ( &quot;Search&quot;);
btnRicerca.setPreferredSize (new Dimension (98, 26));
btnRicerca
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/Ricerca16.png &quot;)));
)
btnRicerca return;
)

/ **
* This method initializes the button to reset form
* Search.
*
* @ Return javax.swing.JButton
* /
private JButton getBtnAzzera ()
(
if (null == btnAzzera)
(
btnAzzera = new JButton ();
btnAzzera.setText ( &quot;Clear&quot;);
btnAzzera.setHorizontalTextPosition (SwingConstants.LEADING);
btnAzzera.setPreferredSize (new Dimension (98, 26));
btnAzzera
. setIcon (new ImageIcon (
getClass ()
. getResource (
&quot;/ unisa/gps/etour/gui/operatoreagenzia/images/Azzera16.png &quot;)));
btnAzzera.addActionListener (new ActionListener ()
(
public void actionPerformed (ActionEvent pAcEvent)
(
cognomeTurista.setText (&quot;&quot;);
turistiAttivati.setSelected (true);
turistiDisattivati.setSelected (true);
)
));
)
btnAzzera return;
)

/ **
*
* This method opens a tab for the bean tourists supplied input.
*
* @ Param pTurista BeanTurista - the bean tourists
* @ Param boolean pModifica &lt;ul&gt; &lt;li&gt; true - if you change the data.
&lt;li&gt; * False - if you receive the card. &lt;/ Ul&gt;
* @ Return void
* /
private void OpenOffice.org Messenger MSN Gaim (BeanTurista pTurista, boolean pModifica)
(
for (int i = 0; i &lt;figli.size (); i + +)
(
filing current figli.get = (i);
if (pTurista.getId () == corrente.getId ())
(
desktopManager.activateFrame (current);
return;
)
)
new = new filing filing (this, pTurista, pModifica);
jDesktopPane.add (new, Integer.MAX_VALUE);
nuova.setVisible (true);
figli.add (new);
)

/ **
*
* Closes the selected tab.
*
* @ Param pScheda profiling - the tab to close.
* @ Return void
* /
protected void closeScheda (filing pScheda)
(
figli.remove (pScheda);
pScheda.dispose ();
)

/ **
*
* Update the table model of the tourists with the bean supplied
* Input.
*
* @ Param pTurista BeanTurista - the bean of the tourist.
* @ Return void
* /
protected void updateTableModel (BeanTurista pTurista)
(
tableModel.updateTurista (pTurista);
)
)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_TuristiTableModel</id>
      <content>ï&gt;¿/ *
* TuristiTableModel.java
*
* 1.0
*
* 27/05/2007
*
* 2007 eTour Project - Copyright by SE @ SA Lab - DMI University of Salerno
* /
package unisa.gps.etour.gui.operatoreagenzia.tables;

import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.table.AbstractTableModel;

import unisa.gps.etour.bean.BeanTurista;

/ **
* &lt;b&gt; TuristiTableModel &lt;/ b&gt;
* &lt;p&gt; Acts as a container of data from the tourists who have
* Be displayed in a JTable. &lt;/ P&gt;
* @ See javax.swing.table.AbstractTableModel
* @ See javax.swing.JTable
* @ See unisa.gps.etour.bean.BeanTurista
* @ Version 1.0
* @ Author Mario Gallo
* /
public class extends TuristiTableModel AbstractTableModel
(
private static final String [] headers = ( &quot;Status&quot;, &quot;Name&quot;, &quot;Name&quot;, &quot;E-Mail&quot;, &quot;Phone&quot;,
&quot;Date of Birth&quot;, &quot;City of Birth&quot;,
&quot;Address&quot;, &quot;City&quot;, &quot;CPC&quot;, &quot;test&quot;, &quot;Save&quot;);
private static final Class [] (columnClasses = Boolean.class, String.class, String.class,
String.class, String.class, Date.class, String.class, String.class, String.class, String.class, String.class,
Date.class);
&lt;Object[]&gt; private Vector data;

/ **
* Default Constructor. We only provide the template without loading
* No data in it.
*
* /
public TuristiTableModel ()
(
&lt;Object[]&gt; data = new Vector ();
)

/ **
* Create a model of the table and loads the data provided through an array of BeanBeneCulturale.
*
* @ Param pTuristi java.util.ArrayList &lt;BeanTurista&gt; - an ArrayList of BeanTurista.
*
* /
public TuristiTableModel (ArrayList &lt;BeanTurista&gt; pTuristi)
(
this ();
if (null == pTuristi)
(
return;
)
for (int i = 0; i &lt;pTuristi.size (); i + +)
(
insertTurista (pTuristi.get (i));
)
)

/ **
* Returns the number of columns provided by the model.
*
* @ Return int - the number of columns.
*
* /
public int getColumnCount ()
(
headers.length return;
)

/ **
* Returns the number of rows currently in the model.
*
* @ Return int - the number of rows.
*
* /
public int GetRowCount ()
(
data.size return ();
)

/ **
* Returns the column name from the index provided.
*
* @ Return String - the name of the column.
* @ Exception IllegalArgumentException - if the column index is not provided
* In the model.
*
* /
public String getColumnName (int pColumn) throws IllegalArgumentException
(
if (pColumn&gt; = getColumnCount () | | pColumn &lt;0)
(
throw new IllegalArgumentException (
&quot;The column index is not provided in the model.&quot;);
)
return headers [pColumn];
)

/ **
* Returns the object in the model to the row and column provided.
*
* @ Param pRow - the line number.
* @ Param pColumn - the column number.
* @ Return Object - the object contained in the selected cell.
* @ Exception IllegalArgumentException - if the index or the row or column not provided
* Are present in the model.
*
* /
public Object getValueAt (pRow int, int pColumn)
throws IllegalArgumentException
(
if (pRow&gt; = GetRowCount () | | pRow &lt;0)
(
throw new IllegalArgumentException (
&quot;The row index is not provided in the model.&quot;);
)
if (pColumn&gt; = getColumnCount () | | pColumn &lt;0)
(
throw new IllegalArgumentException (
&quot;The column index is not provided in the model.&quot;);
)
return data.get (pRow) [pColumn];
)

/ **
* Returns the class of objects in the column of which is provided in the index.
*
* @ Param pColumn - the column number.
* @ Return Class - the class of objects of the selected column.
* @ Exception IllegalArgumentException - if the index column does not pro
* In the model.
*
* /
public class getColumnClass (int pColumn) throws IllegalArgumentException
(
if (pColumn&gt; = getColumnCount () | | pColumn &lt;0)
(
throw new IllegalArgumentException (
&quot;The column index is not provided in the model.&quot;);
)
return columnClasses [pColumn];
)

/ **
* Returns whether the selected cell editable.
*
* @ Return boolean - true if the cell editable
* False otherwise
* @ Param pRow - the line number.
* @ Param pColumn - the column number.
* @ Exception IllegalArgumentException - if the index or the row or column are not provided
* In the model.
*
* /
public boolean isCellEditable (pRow int, int pColumn)
throws IllegalArgumentException
(
return false;
)

/ **
* The method is inherited by the TableModel not setValueAt
* Necessary because not provided for the possibility of amending a
* Single cell.
*
* @ Deprecated
* /
public void setValueAt (Object value, int row, int col)
(

)

/ **
* Enables or disables the tourist in the selected row.
*
* @ Param int pRow - the selected row.
* @ Return int - the id of the tourist on / off.
*
* /
public int attivaTurista (int pRow) throws IllegalArgumentException
(
data.get (pRow) [0] = (isAttivato (pRow))? false: true;
fireTableDataChanged ();
return getID (pRow);
)

/ **
* Determines if a visitor to the selected row is enabled or disabled.
*
* @ Param int pRow - the selected row.
* @ Return &lt;ul&gt; &lt;li&gt; &lt;i&gt; true &lt;/ i&gt; - enabled &lt;/ li&gt;
* &lt;li&gt; &lt;i&gt; False &lt;/ i&gt; - disabled &lt;/ li&gt; &lt;/ ul&gt;
* /
public boolean isAttivato (int pRow) throws IllegalArgumentException
(
return (Boolean) getValueAt (pRow, 0);
)

/ **
*
* Enter data for a tourist in the model since its Bean.
*
* @ Param pTurista BeanTurisa - the bean that contains the data of the tourist.
*
* /
public void insertTurista (BeanTurista pTurista) throws IllegalArgumentException
(
if (null == pTurista)
(
throw new IllegalArgumentException (
&quot;The bean provided can not be null.&quot;);
)
Object [] aRow = new Object [13];
aRow [0] = pTurista.isAttiva ();
aRow [1] = pTurista.getNome ();
aRow [2] = pTurista.getCognome ();
aRow [3] = pTurista.getEmail ();
aRow [4] = pTurista.getTelefono ();
aRow [5] = pTurista.getDataNascita ();
aRow [6] = pTurista.getCittaNascita ();
aRow [7] = pTurista.getVia ();
aRow [8] = pTurista.getCittaResidenza ();
aRow [9] = pTurista.getCap ();
aRow [10] = pTurista.getProvincia ();
aRow [11] = pTurista.getDataRegistrazione ();
aRow [12] = pTurista.getId ();
data.add (aRow);
)

/ **
*
* Update the information of the tourist in the model (if any)
* With the bean supplied input.
*
* @ Param pTurista BeanTurista - the bean that contains the data of the tourist.
*
* /
public void updateTurista (BeanTurista pTurista) throws IllegalArgumentException
(
if (null == pTurista)
(
throw new IllegalArgumentException (
&quot;The bean provided can not be null.&quot;);
)
int i;
for (i = 0; i &lt;data.size () i + +)
(
int id = (Integer) data.get (i) [12];
if (id == pTurista.getId ())
(
break;
)
)
if (i! data.size = ()) / / Found
(
Object [] aRow = new Object [13];
aRow [0] = pTurista.isAttiva ();
aRow [1] = pTurista.getNome ();
aRow [2] = pTurista.getCognome ();
aRow [3] = pTurista.getEmail ();
aRow [4] = pTurista.getTelefono ();
aRow [5] = pTurista.getDataNascita ();
aRow [6] = pTurista.getCittaNascita ();
aRow [7] = pTurista.getVia ();
aRow [8] = pTurista.getCittaResidenza ();
aRow [9] = pTurista.getCap ();
aRow [10] = pTurista.getProvincia ();
aRow [11] = pTurista.getDataRegistrazione ();
aRow [12] = pTurista.getId ();
data.set (i, aRow);
fireTableDataChanged ();
)

)

/ **
*
* Returns the id of the visitor whose data are displayed in row
* Provided input.
*
* @ Param pRow - the line number.
* @ Return - the id of the tourist.
* @ Exception IllegalArgumentException - if the row index does not pro
* In the model.
* /
public int getID (int pRow) throws IllegalArgumentException
(
if (pRow&gt; = GetRowCount () | | pRow &lt;0)
(
throw new IllegalArgumentException (
&quot;The row index is not provided in the model.&quot;);
)
return (Integer) data.get (pRow) [12];
)

/ **
*
* Returns the id of the tourist at the line number provided as input and removes it from the model.
*
* @ Param pRow - the line number.
* @ Return - the id of the tourist.
* @ Exception IllegalArgumentException - if the row index does not pro
* In the model.
*
* /
public int removeTurista (int pRow) throws IllegalArgumentException
(
int id = getID (pRow);
data.remove (pRow);
return id;
)

)</content>
      <parent_id/>
    </artifact>
    <artifact>
      <id>CC_reportStatistici</id>
      <content>package unisa.gps.etour.gui.operatoreagenzia;

import java.awt.BorderLayout;
import javax.swing.JPanel;
import javax.swing.JInternalFrame;
import java.awt.Dimension;
import java.awt.GridBagLayout;
import javax.swing.JToolBar;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTabbedPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import java.awt.GridBagConstraints;
import javax.swing.BorderFactory;
import java.awt.Color;
import javax.swing.border.TitledBorder;
import java.awt.font;
import javax.swing.JTextPane;
import javax.swing.JCheckBox;
import javax.swing.JRadioButton;
import java.awt.Insets;
import javax.swing.ImageIcon;
import javax.swing.JButton;

import unisa.gps.etour.bean.BeanBeneCulturale;
import unisa.gps.etour.bean.BeanPuntoDiRistoro;
import unisa.gps.etour.bean.util.Punto3D;

import java.awt.Point;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;

extends JInternalFrame (public class reportStatistici
/ **
*
* /
private static final long serialVersionUID = 1L;
&lt;String&gt; private Vector data;
private JPanel jContentPane = null;
Private JToolBar JToolBar = null;
private JComboBox JComboBox = null;
private JPanel centralPanel = null;
private JScrollPane JScrollPane = null;
private JTable tabellas = null;
private JPanel southPanel = null;
private JTabbedPane JTabbedPane = null;
private JPanel guidainlinea = null;
private JTextPane jTextPane = null;
private JPanel genStat = null;
private JPanel evdStat = null;
private JPanel stat = null;
private JPanel JPanel = null;
private JButton JButton = null;
private JButton jButton1 = null;
private JButton jButton2 = null;
private JLabel jLabel1 = null;
private JLabel jLabel2 = null;
private JLabel jLabel3 = null;
private JLabel jLabel4 = null;
private JLabel jLabel5 = null;
private JLabel jLabel6 = null;
private JLabel jLabel7 = null;
private JLabel jLabel8 = null;
private JLabel jLabel9 = null;
private JPanel jPanel1 = null;
private JLabel jLabel10 = null;
private JLabel jLabel11 = null;
private JLabel jLabel12 = null;
private JLabel jLabel13 = null;
private JLabel jLabel14 = null;
private JLabel jLabel15 = null;
private JLabel jLabel16 = null;
private JLabel jLabel17 = null;
private JLabel jLabel18 = null;
private JLabel jLabel19 = null;
private JLabel jLabel20 = null;
private JLabel jLabel21 = null;
private JLabel jLabel22 = null;
private JButton btnVisualizza = null;
private JLabel JLabel = null;

/ **
* This is the default constructor xxx
* /
public reportStatistici () (
super ();
initialize ();
)

/ **
* This method initializes this
*
* @ Return void
* /
private void initialize () (
this.setSize (700, 480);
this.setPreferredSize (new Dimension (790, 520));
this.setFrameIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia/immagini/statistics-32x32.png &quot;)));
this.setIconifiable (true);
this.setMaximizable (true);
this.setClosable (true);
this.setTitle ( &quot;Statistical Report&quot;);
this.setContentPane (getJContentPane ());
caricaCombo (this.getJComboBox ());
)

/ **
* This method initializes jContentPane
*
* @ Return javax.swing.JPanel
* /
getJContentPane private JPanel () (
if (jContentPane == null) (
BorderLayout BorderLayout = new BorderLayout ();
borderLayout.setHgap (0);
borderLayout.setVgap (5);
jContentPane = new JPanel ();
jContentPane.setLayout (BorderLayout);
jContentPane.add (getJToolBar (), BorderLayout.NORTH);
jContentPane.add (getCentralPanel (), BorderLayout.CENTER);
jContentPane.add (getSouthPanel (), BorderLayout.CENTER);
)
jContentPane return;
)

/ **
* This method initializes JToolBar
*
* @ Return javax.swing.JToolBar
* /
Private JToolBar getJToolBar () (
if (JToolBar == null) (
JButton = new JLabel ();
jLabel.setText ( &quot;Select Location&quot;);
jLabel.setLocation (new Point (16, 6));
JToolBar JToolBar = new ();
jToolBar.setFloatable (false);
jToolBar.setLayout (new GridBagLayout ());
jToolBar.setPreferredSize (new Dimension (1, 30));
jToolBar.add (JLabel);
jToolBar.addSeparator ();
jToolBar.add (getJComboBox ());
)
JToolBar return;
)

/ **
* This method initializes JComboBox
*
* @ Return javax.swing.JComboBox
* /
private JComboBox getJComboBox () (

if (JComboBox == null) (
JComboBox = new JComboBox ();
jComboBox.setLocation (new Point (140, 4));
jComboBox.setPreferredSize (new Dimension (150, 20));
jComboBox.setSize (new Dimension (140, 20));
/ / jComboBox.addItem ( &quot;Salerno&quot;);

this.setTitle ( &quot;Statistical Report - Salerno&quot;);

)
JComboBox return;
)

public void caricaCombo (JComboBox combo) (
BeanPuntoDiRistoro [] Pr = new BeanPuntoDiRistoro [5];
for (int i = 0; i &lt;5; i + +) (
Pr [i] = new BeanPuntoDiRistoro (1, 12, 3.5,
&quot;Arturo&quot;, &quot;Vicno the sea, great view, romantic and Miao,
&quot;089203202&quot;, &quot;mountains&quot;, &quot;Amalfi&quot;, &quot;Via Principe 35&quot;, &quot;84123rd&quot;
&quot;NA&quot;, &quot;1234567898741&quot;, new Punto3D (12,324,3),
new Date (2,23,3), new Date (3,3,4), &quot;Monday&quot;);
)

BeanBeneCulturale [] bc = new BeanBeneCulturale [5];
for (int i = 0; i &lt;5; i + +) (
Bc [i] = new BeanBeneCulturale (0.120, &quot;Castle Arechi&quot;, &quot;Salerno&quot;, &quot;089,723,088&quot;, &quot;The castle stands on balbalblalbalbla, blablalblalba, balblalballab&quot;
&quot;Salerno&quot;, &quot;Largo castles 12&quot;, &quot;84100th&quot;, &quot;SA&quot;, new Punto3D (10,30,40), new Date (0,0,0,9,0), new Date (0,0, 0,23,0), &quot;Monday&quot;,
12.5,4.5);)

&lt;String&gt; ArrayList list = null;
for (int i = 0; i &lt;Pr.length i + +)
(

if (ípu (combo, Pr [i]. getLocal ())){

jComboBox.addItem (Pr [i]. getLocal ());
)
)
for (int i = 0; i &lt;Bc.length i + +)
(
if (ípu (combo, BC [i]. getLocal ())){
jComboBox.addItem (bc [i]. getLocal ());
)
)
tabellaSiti.setModel (new ReportTableModel (Bc, Pr));
)
private boolean ípu (JComboBox combo, String loc) (
for (int i = 0; i &lt;combo.getItemCount (); i + +)
if (combo.getItemAt (i) == loc)
return false;
return true;
)

/ **
* This method initializes centralPanel
*
* @ Return javax.swing.JPanel
* /
getCentralPanel private JPanel () (
if (centralPanel == null) (
centralPanel = new JPanel ();
centralPanel.setLayout (new BorderLayout ());
centralPanel.add (getJScrollPane (), BorderLayout.CENTER);
centralPanel.add (getJPanel (), BorderLayout.EAST);
)
centralPanel return;
)

/ **
* This method initializes JScrollPane
*
* @ Return javax.swing.JScrollPane
* /
private JScrollPane getJScrollPane () (
if (JScrollPane == null) (
JScrollPane = new JScrollPane ();
jScrollPane.setViewportView (getTabellaSiti ());
)
JScrollPane return;
)

/ **
* This method initializes tabellas
*
* @ Return javax.swing.JTable
* /
private JTable getTabellaSiti () (

if (tabellas == null) (
tabellas = new JTable ();

)
tabellas return;
)

/ **
* This method initializes southPanel
*
* @ Return javax.swing.JPanel
* /
private JPanel getSouthPanel ()
(
if (null == southPanel)
(
GridBagConstraints gridBagConstraints11 = new GridBagConstraints ();
gridBagConstraints11.anchor = GridBagConstraints.SOUTH;
gridBagConstraints11.insets = new Insets (0, 0, 5, 0);
GridBagConstraints = GridBagConstraints new GridBagConstraints ();
gridBagConstraints.fill = GridBagConstraints.BOTH;
gridBagConstraints.weighty = 1.0;
gridBagConstraints.insets = new Insets (5, 5, 5, 5);
gridBagConstraints.gridx = 0;
gridBagConstraints.gridy = 0;
gridBagConstraints.weightx = 1.0;
southPanel = new JPanel ();
southPanel.setLayout (new GridBagLayout ());
southPanel.add (getJTabbedPane (), GridBagConstraints);
southPanel.add (getGuidainlinea (), gridBagConstraints11);
)
southPanel return;
)

/ **
* This method initializes JTabbedPane
*
* @ Return javax.swing.JTabbedPane
* /
private JTabbedPane getJTabbedPane ()
(
if (JTabbedPane == null)
(
JTabbedPane = new JTabbedPane ();
jTabbedPane.setPreferredSize (new Dimension (100, 200));
jTabbedPane.setName (&quot;&quot;);
jTabbedPane.setTabPlacement (JTabbedPane.TOP);
jTabbedPane.addTab ( &quot;General Statistics&quot;, null, getGenStat (), null);
jTabbedPane.addTab ( &quot;Site Statistics&quot;, null, getEvdStat (), null);
jTabbedPane.addTab ( &quot;Additional Statistics&quot;, null, getStat (), null);
)
JTabbedPane return;
)

/ **
* This method initializes guidainlinea
*
* @ Return javax.swing.JPanel
* /
private JPanel getGuidainlinea ()
(
if (null == guidainlinea)
(
GridBagConstraints gridBagConstraints1 = new GridBagConstraints ();
gridBagConstraints1.fill = GridBagConstraints.BOTH;
gridBagConstraints1.weighty = 1.0;
gridBagConstraints1.weightx = 1.0;
guidainlinea = new JPanel ();
guidainlinea.setLayout (new GridBagLayout ());
guidainlinea.setBorder (BorderFactory.createTitledBorder (BorderFactory.createLineBorder (new Color (51, 102, 255), 3), &quot;Help&quot;, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;, Font.BOLD, 12), new Color (51, 153, 255)));
guidainlinea.setPreferredSize (new Dimension (180, 200));
guidainlinea.add (getJTextPane (), gridBagConstraints1);
)
guidainlinea return;
)

/ **
* This method initializes jTextPane
*
* @ Return javax.swing.JTextPane
* /
private JTextPane getJTextPane ()
(
if (null == jTextPane)
(
jTextPane = new JTextPane ();
jTextPane.setPreferredSize (new Dimension (160, 100));
)
jTextPane return;
)

/ **
* This method initializes genStat
*
* @ Return javax.swing.JPanel
* /
private JPanel getGenStat ()
(
if (null == genStat)
(
GridBagConstraints gridBagConstraints14 = new GridBagConstraints ();
gridBagConstraints14.gridx = 2;
gridBagConstraints14.insets = new Insets (5, 5, 5, 5);
gridBagConstraints14.gridy = 3;
jLabel9 = new JLabel ();
jLabel9.setText ( &quot;Bells&quot;);
GridBagConstraints gridBagConstraints13 = new GridBagConstraints ();
gridBagConstraints13.gridx = 1;
gridBagConstraints13.insets = new Insets (5, 5, 5, 5);
gridBagConstraints13.gridy = 3;
jLabel8 = new JLabel ();
jLabel8.setText ( &quot;3.5&quot;);
GridBagConstraints gridBagConstraints12 = new GridBagConstraints ();
gridBagConstraints12.gridx = 0;
gridBagConstraints12.insets = new Insets (5, 5, 5, 5);
gridBagConstraints12.gridy = 3;
jLabel7 = new JLabel ();
jLabel7.setText ( &quot;Media Ratings:&quot;);
GridBagConstraints gridBagConstraints10 = new GridBagConstraints ();
gridBagConstraints10.gridx = 1;
gridBagConstraints10.insets = new Insets (5, 5, 5, 5);
gridBagConstraints10.gridy = 2;
jLabel6 = new JLabel ();
jLabel6.setText ( &quot;90&quot;);
GridBagConstraints gridBagConstraints9 = new GridBagConstraints ();
gridBagConstraints9.gridx = 0;
gridBagConstraints9.insets = new Insets (5, 5, 5, 5);
gridBagConstraints9.gridy = 2;
jLabel5 = new JLabel ();
jLabel5.setText ( &quot;Number of votes not enough&quot;);
GridBagConstraints gridBagConstraints8 = new GridBagConstraints ();
gridBagConstraints8.gridx = 1;
gridBagConstraints8.insets = new Insets (5, 5, 5, 5);
gridBagConstraints8.gridy = 1;
jLabel4 = new JLabel ();
jLabel4.setText ( &quot;99&quot;);
GridBagConstraints gridBagConstraints7 = new GridBagConstraints ();
gridBagConstraints7.gridx = 0;
gridBagConstraints7.insets = new Insets (5, 5, 5, 5);
gridBagConstraints7.gridy = 1;
jLabel3 = new JLabel ();
jLabel3.setText ( &quot;Number enough votes:&quot;);
GridBagConstraints gridBagConstraints6 = new GridBagConstraints ();
gridBagConstraints6.gridx = 1;
gridBagConstraints6.insets = new Insets (5, 5, 5, 5);
gridBagConstraints6.gridy = 0;
jLabel2 = new JLabel ();
jLabel2.setText ( &quot;189&quot;);
GridBagConstraints gridBagConstraints5 = new GridBagConstraints ();
gridBagConstraints5.gridx = 0;
gridBagConstraints5.insets = new Insets (5, 5, 5, 5);
gridBagConstraints5.anchor = GridBagConstraints.CENTER;
gridBagConstraints5.gridy = 0;
jLabel1 = new JLabel ();
jLabel1.setText ( &quot;Number of votes issued:&quot;);
genStat = new JPanel ();
genStat.setLayout (new GridBagLayout ());
genStat.add (jLabel1, gridBagConstraints5);
genStat.add (jLabel2, gridBagConstraints6);
genStat.add (jLabel3, gridBagConstraints7);
genStat.add (jLabel4, gridBagConstraints8);
genStat.add (jLabel5, gridBagConstraints9);
genStat.add (jLabel6, gridBagConstraints10);
genStat.add (jLabel7, gridBagConstraints12);
genStat.add (jLabel8, gridBagConstraints13);
genStat.add (jLabel9, gridBagConstraints14);
)
genStat return;
)

/ **
* This method initializes evdStat
*
* @ Return javax.swing.JPanel
* /
private JPanel getEvdStat ()
(
if (null == evdStat)
(
GridBagConstraints gridBagConstraints25 = new GridBagConstraints ();
gridBagConstraints25.gridx = 2;
gridBagConstraints25.insets = new Insets (0, 80, 0, 5);
gridBagConstraints25.ipadx = 1;
gridBagConstraints25.gridy = 3;
GridBagConstraints gridBagConstraints28 = new GridBagConstraints ();
gridBagConstraints28.gridx = 3;
gridBagConstraints28.anchor = GridBagConstraints.WEST;
gridBagConstraints28.insets = new Insets (0, 5, 0, 5);
gridBagConstraints28.gridy = 3;
jLabel22 = new JLabel ();
jLabel22.setText ( &quot;6&quot;);
GridBagConstraints gridBagConstraints27 = new GridBagConstraints ();
gridBagConstraints27.gridx = 3;
gridBagConstraints27.anchor = GridBagConstraints.WEST;
gridBagConstraints27.insets = new Insets (5, 5, 5, 5);
gridBagConstraints27.gridy = 0;
jLabel21 = new JLabel ();
jLabel21.setText ( &quot;29&quot;);
GridBagConstraints gridBagConstraints26 = new GridBagConstraints ();
gridBagConstraints26.gridx = 1;
gridBagConstraints26.anchor = GridBagConstraints.WEST;
gridBagConstraints26.gridwidth = 1;
gridBagConstraints26.insets = new Insets (5, 5, 5, 5);
gridBagConstraints26.gridy = 0;
jLabel20 = new JLabel ();
jLabel20.setText ( &quot;35&quot;);
jLabel19 = new JLabel ();
jLabel19.setText ( &quot;Feedback&quot; link under the sufficiency: &quot;);
GridBagConstraints gridBagConstraints24 = new GridBagConstraints ();
gridBagConstraints24.gridx = 2;
gridBagConstraints24.insets = new Insets (5, 5, 5, 5);
gridBagConstraints24.anchor = GridBagConstraints.EAST;
gridBagConstraints24.gridy = 0;
jLabel18 = new JLabel ();
jLabel18.setText ( &quot;Feedback enough:&quot;);
GridBagConstraints gridBagConstraints23 = new GridBagConstraints ();
gridBagConstraints23.gridx = 0;
gridBagConstraints23.gridwidth = 1;
gridBagConstraints23.insets = new Insets (5, 5, 5, 5);
gridBagConstraints23.gridy = 0;
jLabel17 = new JLabel ();
jLabel17.setText ( &quot;Feedback received in full:&quot;);
GridBagConstraints gridBagConstraints15 = new GridBagConstraints ();
gridBagConstraints15.gridx = 0;
gridBagConstraints15.gridwidth = 4;
gridBagConstraints15.gridy = 4;
evdStat = new JPanel ();
evdStat.setLayout (new GridBagLayout ());
evdStat.setEnabled (false);
evdStat.add (getJPanel1 (), gridBagConstraints15);
evdStat.add (jLabel17, gridBagConstraints23);
evdStat.add (jLabel18, gridBagConstraints24);
evdStat.add (jLabel20, gridBagConstraints26);
evdStat.add (jLabel21, gridBagConstraints27);
evdStat.add (jLabel22, gridBagConstraints28);
evdStat.add (jLabel19, gridBagConstraints25);
)
evdStat return;
)

/ **
* This method initializes stat
*
* @ Return javax.swing.JPanel
* /
private JPanel getStat ()
(
if (stat == null)
(
stat = new JPanel ();
stat.setLayout (new GridBagLayout ());
stat.setEnabled (false);
)
return stat;
)

/ **
* This method initializes JPanel
*
* @ Return javax.swing.JPanel
* /
private JPanel getJPanel ()
(
if (JPanel == null)
(
GridBagConstraints gridBagConstraints4 = new GridBagConstraints ();
gridBagConstraints4.insets = new Insets (5, 5, 5, 5);
GridBagConstraints gridBagConstraints3 = new GridBagConstraints ();
gridBagConstraints3.gridx = 0;
gridBagConstraints3.insets = new Insets (5, 5, 5, 5);
gridBagConstraints3.gridy = 2;
GridBagConstraints gridBagConstraints2 = new GridBagConstraints ();
gridBagConstraints2.gridx = 0;
gridBagConstraints2.insets = new Insets (5, 5, 5, 5);
gridBagConstraints2.gridy = 1;
JPanel = new JPanel ();
jPanel.setLayout (new GridBagLayout ());
jPanel.setBorder (BorderFactory.createTitledBorder (BorderFactory.createLineBorder (new Color (0, 51, 255), 3), &quot;Show for:&quot; TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;, Font.BOLD, 12), new Color (0, 51, 255)));
jPanel.add (getJButton (), gridBagConstraints4);
jPanel.add (getJButton1 (), gridBagConstraints2);
jPanel.add (getJButton2 (), gridBagConstraints3);
)
JPanel return;
)

/ **
* This method initializes JButton
*
* @ Return javax.swing.JButton
* /
private JButton getJButton ()
(
if (JButton == null)
(
JButton = new JButton ();
jButton.setText ( &quot;Well &lt;html&gt; &lt;br&gt; Cultural &lt;/ html&gt;&quot;);
jButton.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia / images / Sphinx-icon.gif &quot;)));
)
return JButton;
)

/ **
* This method initializes jButton1
*
* @ Return javax.swing.JButton
* /
private JButton getJButton1 ()
(
if (null == jButton1)
(
jButton1 = new JButton ();
jButton1.setText ( &quot;&lt;html&gt; point &lt;br&gt; Refreshments &lt;/ html&gt;&quot;);
jButton1.setPreferredSize (new Dimension (121, 42));
jButton1.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia / images / Java.png &quot;)));
)
jButton1 return;
)

/ **
* This method initializes jButton2
*
* @ Return javax.swing.JButton
* /
private JButton getJButton2 ()
(
if (null == jButton2)
(
jButton2 = new JButton ();
jButton2.setText ( &quot;All&quot;);
jButton2.setPreferredSize (new Dimension (121, 42));
jButton2.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia/immagini/Globe_32x32.png &quot;)));
)
jButton2 return;
)

/ **
* This method initializes jPanel1
*
* @ Return javax.swing.JPanel
* /
private JPanel getJPanel1 ()
(
if (null == jPanel1)
(
GridBagConstraints gridBagConstraints29 = new GridBagConstraints ();
gridBagConstraints29.gridx = 2;
gridBagConstraints29.gridy = 4;
GridBagConstraints gridBagConstraints22 = new GridBagConstraints ();
gridBagConstraints22.gridx = 1;
gridBagConstraints22.insets = new Insets (5, 5, 5, 5);
gridBagConstraints22.gridy = 3;
jLabel16 = new JLabel ();
jLabel16.setText ( &quot;Comment deleted by moderator feedback&quot;);
GridBagConstraints gridBagConstraints21 = new GridBagConstraints ();
gridBagConstraints21.gridx = 0;
gridBagConstraints21.insets = new Insets (5, 5, 5, 5);
gridBagConstraints21.gridy = 3;
jLabel15 = new JLabel ();
jLabel15.setText ( &quot;Bells&quot;);
GridBagConstraints gridBagConstraints20 = new GridBagConstraints ();
gridBagConstraints20.gridx = 1;
gridBagConstraints20.insets = new Insets (5, 5, 5, 5);
gridBagConstraints20.anchor = GridBagConstraints.WEST;
gridBagConstraints20.gridy = 2;
jLabel14 = new JLabel ();
jLabel14.setText ( &quot;We eat good, bad beer&quot;);
GridBagConstraints gridBagConstraints19 = new GridBagConstraints ();
gridBagConstraints19.gridx = 3;
gridBagConstraints19.gridy = 2;
jLabel13 = new JLabel ();
jLabel13.setText (&quot;&quot;);
GridBagConstraints gridBagConstraints18 = new GridBagConstraints ();
gridBagConstraints18.gridx = 0;
gridBagConstraints18.insets = new Insets (5, 5, 5, 5);
gridBagConstraints18.gridy = 2;
jLabel12 = new JLabel ();
jLabel12.setText ( &quot;Bells&quot;);
GridBagConstraints gridBagConstraints17 = new GridBagConstraints ();
gridBagConstraints17.gridx = 1;
gridBagConstraints17.insets = new Insets (5, 5, 5, 5);
gridBagConstraints17.anchor = GridBagConstraints.WEST;
gridBagConstraints17.gridy = 0;
jLabel11 = new JLabel ();
jLabel11.setText ( &quot;Really a nice place, we'll be back!&quot;);
GridBagConstraints gridBagConstraints16 = new GridBagConstraints ();
gridBagConstraints16.gridx = 0;
gridBagConstraints16.insets = new Insets (5, 5, 5, 5);
gridBagConstraints16.gridy = 0;
jLabel10 = new JLabel ();
jLabel10.setText ( &quot;Bells&quot;);
jPanel1 = new JPanel ();
jPanel1.setLayout (new GridBagLayout ());
jPanel1.setBorder (BorderFactory.createTitledBorder (BorderFactory.createLineBorder (new Color (0, 51, 255), 3), &quot;Last feedback issued:&quot; TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font ( &quot;Dialog&quot;, Font.BOLD , 12), new Color (0, 102, 255)));
jPanel1.add (jLabel10, gridBagConstraints16);
jPanel1.add (jLabel11, gridBagConstraints17);
jPanel1.add (jLabel12, gridBagConstraints18);
jPanel1.add (jLabel13, gridBagConstraints19);
jPanel1.add (jLabel14, gridBagConstraints20);
jPanel1.add (jLabel15, gridBagConstraints21);
jPanel1.add (jLabel16, gridBagConstraints22);
jPanel1.add (getBtnVisualizza (), gridBagConstraints29);
)
jPanel1 return;
)

/ **
* This method initializes btnVisualizza
*
* @ Return javax.swing.JButton
* /
private JButton getBtnVisualizza ()
(
if (null == btnVisualizza)
(
btnVisualizza = new JButton ();
btnVisualizza.setText ( &quot;View All&quot;);
btnVisualizza.setMnemonic (KeyEvent.VK_UNDEFINED);
btnVisualizza.setIcon (new ImageIcon (getClass (). getResource ( &quot;/ interfacceAgenzia / images / Forward 216.png &quot;)));
)
btnVisualizza return;
)

) / / @ JVE: decl-index = 0: visual-constraint = &quot;-7, -61&quot;</content>
      <parent_id/>
    </artifact>
  </artifacts>
</artifacts_collection>
